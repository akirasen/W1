{"version":3,"file":"44.js","sources":["webpack:///app/components/Utility/Tabs.jsx","webpack:///app/components/Utility/FormattedTime.jsx","webpack:///app/components/Blockchain/Asset.jsx"],"sourcesContent":["import React, {PropTypes} from \"react\";\r\nimport Translate from \"react-translate-component\";\r\nimport cnames from \"classnames\";\r\nimport { connect } from \"alt-react\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\n\r\n/**\r\n *  Renders a tab layout, handling switching and optionally persists the currently open tab using the SettingsStore\r\n *\r\n *  props:\r\n *     setting: unique name to be used to remember the active tab of this tabs layout,\r\n *     tabsClass: optional classes for the tabs container div\r\n *     contentClass: optional classes for the content container div\r\n *\r\n *  Usage:\r\n *\r\n *  <Tabs setting=\"mySetting\">\r\n *      <Tab title=\"locale.string.title1\">Tab 1 content</Tab>\r\n *      <Tab title=\"locale.string.title2\">Tab 2 content</Tab>\r\n *  </Tabs>\r\n *\r\n */\r\n\r\nclass Tab extends React.Component {\r\n\r\n    static propTypes = {\r\n        changeTab: PropTypes.func,\r\n        isActive: PropTypes.bool.isRequired,\r\n        index: PropTypes.number.isRequired,\r\n        className: PropTypes.string,\r\n        isLinkTo: PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        isActive: false,\r\n        index: 0,\r\n        className: \"\",\r\n        isLinkTo: \"\"\r\n    };\r\n\r\n    render() {\r\n        let {isActive, index, changeTab, title, className, disabled} = this.props;\r\n        let c = cnames({\"is-active\": isActive}, className);\r\n\r\n        if (this.props.collapsed) {\r\n            return <option value={index} data-is-link-to={this.props.isLinkTo} >{typeof title === \"string\" && title.indexOf(\".\") > 0 ? <Translate className=\"tab-title\" content={title} /> : <span className=\"tab-title\">{title}</span>}</option>;\r\n        }\r\n        return (\r\n            <li className={c} onClick={!disabled ? changeTab.bind(this, index,this.props.isLinkTo) : null}>\r\n                <a>\r\n                    {typeof title === \"string\" && title.indexOf(\".\") > 0 ? <Translate className=\"tab-title\" content={title} /> : <span className=\"tab-title\">{title}</span>}\r\n                    {this.props.subText ? <div className=\"tab-subtext\">{this.props.subText}</div> : null}\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Tabs extends React.Component {\r\n\r\n    static propTypes = {\r\n        setting: PropTypes.string,\r\n        defaultActiveTab: PropTypes.number,\r\n        segmented: PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        active: 0,\r\n        defaultActiveTab: 0,\r\n        segmented: true,\r\n        contentClass: \"\",\r\n        style: {}\r\n    };\r\n\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            activeTab: props.setting ? props.viewSettings.get(props.setting, props.defaultActiveTab) : props.defaultActiveTab,\r\n            width: window.innerWidth\r\n        };\r\n\r\n        this._setDimensions = this._setDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._setDimensions();\r\n        window.addEventListener(\"resize\", this._setDimensions, {capture: false, passive: true});\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let nextSetting = nextProps.viewSettings.get(nextProps.setting);\r\n        if (nextSetting !== this.props.viewSettings.get(this.props.setting)) {\r\n            this.setState({\r\n                activeTab: nextSetting\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this._setDimensions);\r\n    }\r\n\r\n    _setDimensions() {\r\n        let width = window.innerWidth;\r\n\r\n        if (width !== this.state.width) {\r\n            this.setState({width});\r\n        }\r\n    }\r\n\r\n    _changeTab(value,isLinkTo) {\r\n        if (value === this.state.activeTab) return;\r\n        // Persist current tab if desired\r\n\r\n        if (isLinkTo !== \"\") {\r\n            this.context.router.push(isLinkTo);\r\n            return;\r\n        }\r\n\r\n        if (this.props.setting) {\r\n            SettingsActions.changeViewSetting({\r\n                [this.props.setting]: value\r\n            });\r\n        }\r\n        this.setState({activeTab: value});\r\n\r\n        if(this.props.onChangeTab) this.props.onChangeTab(value);\r\n    }\r\n\r\n    render() {\r\n        let {children, contentClass, tabsClass, style, segmented} = this.props;\r\n        const collapseTabs = this.state.width < 900 && React.Children.count(children) > 2;\r\n\r\n        let activeContent = null;\r\n\r\n        let tabIndex = [];\r\n        let tabs = React.Children.map(children, (child, index) => {\r\n            if (!child) {\r\n                return null;\r\n            }\r\n            if (collapseTabs && child.props.disabled) return null;\r\n            let isActive = index === this.state.activeTab;\r\n            if (isActive) {\r\n                activeContent = child.props.children;\r\n            }\r\n\r\n            return React.cloneElement(child, {collapsed: collapseTabs, isActive, changeTab: this._changeTab.bind(this), index: index} );\r\n        }).filter(a => {\r\n            if (a) {\r\n                tabIndex.push(a.props.index);\r\n            }\r\n            return a !== null;\r\n        });\r\n\r\n        if (!activeContent) {\r\n            activeContent = tabs[0].props.children;\r\n        }\r\n\r\n        return (\r\n            <div className={cnames(!!this.props.actionButtons ? \"with-buttons\" : \"\", this.props.className)}>\r\n                <div className=\"service-selector\">\r\n\r\n                    <ul style={style} className={cnames(\"button-group no-margin\", tabsClass, {segmented})}>\r\n                        {collapseTabs ?\r\n                            <li style={{paddingLeft: 10, paddingRight: 10, minWidth: \"15rem\"}}>\r\n                                <select\r\n                                    value={this.state.activeTab}\r\n                                    style={{marginTop: 10, marginBottom: 10}}\r\n                                    className=\"bts-select\"\r\n                                    onChange={(e) => { let ind = parseInt(e.target.value, 10); this._changeTab(ind,e.target[ind].attributes[\"data-is-link-to\"].value);}}\r\n                                >\r\n                                    {tabs}\r\n                                </select>\r\n                            </li> :\r\n                            tabs\r\n                        }\r\n                        {this.props.actionButtons ? <li className=\"tabs-action-buttons\">{this.props.actionButtons}</li> : null}\r\n                    </ul>\r\n                </div>\r\n                <div className={contentClass + \" tab-content\"} >\r\n                    {activeContent}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTabs = connect(Tabs, {\r\n    listenTo() {\r\n        return [SettingsStore];\r\n    },\r\n    getProps() {\r\n        return {viewSettings: SettingsStore.getState().viewSettings};\r\n    }\r\n});\r\n\r\nexport {Tabs, Tab};\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/Tabs.jsx","import React from \"react\";\r\n\r\n// a class to display time nicely when given seconds \r\n// for example, display \r\n\r\n// expects the number of seconds as a property\r\n\r\nclass FormattedTime extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {time : props.time};\r\n    }\r\n\r\n    // given an integer seconds as an argument, \r\n    // return the number of hours\r\n    getHours(secs) {\r\n        console.log(\"get hours called with: \" + secs);\r\n        return secs / 3600;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getHours(this.state.time)}h\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormattedTime;\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/FormattedTime.jsx","import React from \"react\";\r\nimport {Link} from \"react-router/es\";\r\nimport Translate from \"react-translate-component\";\r\nimport LinkToAccountById from \"../Utility/LinkToAccountById\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport FormattedAsset from \"../Utility/FormattedAsset\";\r\nimport FormattedPrice from \"../Utility/FormattedPrice\";\r\nimport AssetName from \"../Utility/AssetName\";\r\nimport TimeAgo from \"../Utility/TimeAgo\";\r\nimport HelpContent from \"../Utility/HelpContent\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport assetUtils from \"common/asset_utils\";\r\nimport utils from \"common/utils\";\r\nimport FormattedTime from \"../Utility/FormattedTime\";\r\nimport {ChainStore} from \"seerjs/es\";\r\nimport {Apis} from \"seerjs-ws\";\r\nimport { Tabs, Tab } from \"../Utility/Tabs\";\r\nimport { CallOrder, FeedPrice } from \"common/MarketClasses\";\r\n\r\nclass AssetFlag extends React.Component {\r\n    render()\r\n    {\r\n        let {isSet, name} = this.props;\r\n        if (!isSet) {\r\n            return ( <span></span> );\r\n        }\r\n\r\n        return (\r\n            <span className=\"asset-flag\">\r\n                <span className=\"label info\">\r\n                    <Translate content={\"account.user_issued_assets.\" + name}/>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//-------------------------------------------------------------\r\nclass AssetPermission extends React.Component {\r\n    render()\r\n    {\r\n        let {isSet, name} = this.props;\r\n\r\n        if (!isSet) {\r\n            return ( <span></span> );\r\n        }\r\n\r\n        return (\r\n            <span className=\"asset-flag\">\r\n                <span className=\"label info\">\r\n                    <Translate content={\"account.user_issued_assets.\" + name}/>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Asset extends React.Component {\r\n\r\n    static propTypes = {\r\n        backingAsset: ChainTypes.ChainAsset.isRequired\r\n    };\r\n\r\n    constructor( props ) {\r\n        super(props);\r\n        this.state = {\r\n            callOrders: [],\r\n            marginTableSort: \"price\",\r\n            sortDirection: true\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    _toggleSortOrder(type) {\r\n        if (type !== this.state.marginTableSort) {\r\n            this.setState({\r\n                marginTableSort: type\r\n            });\r\n        } else {\r\n            this.setState({sortDirection: !this.state.sortDirection});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    _assetType(asset) {\r\n        return  'Simple';\r\n    }\r\n\r\n\r\n    renderFlagIndicators(flags, names)\r\n    {\r\n        return (\r\n\r\n            <div>\r\n                {names.map((name) => {\r\n                    return <AssetFlag key={`flag_${name}`} name={name} isSet={flags[name]}/>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    renderPermissionIndicators(permissions, names)\r\n    {\r\n        return (\r\n            <div>\r\n                {names.map((name) => {\r\n                    return <AssetPermission key={`perm_${name}`}name={name} isSet={permissions[name]}/>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    formattedPrice(price, hide_symbols=false, hide_value=false) {\r\n        var base = price.base;\r\n        var quote = price.quote;\r\n        return (\r\n            <FormattedPrice\r\n                base_amount={base.amount}\r\n                base_asset={base.asset_id}\r\n                quote_amount={quote.amount}\r\n                quote_asset={quote.asset_id}\r\n                hide_value={hide_value}\r\n                hide_symbols={hide_symbols}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    renderAuthorityList(authorities) {\r\n        return authorities.map(\r\n            function (authority) {\r\n                return (\r\n                    <span>\r\n                        {' '}\r\n                        <LinkToAccountById account={authority}/>\r\n                    </span>\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    renderMarketList(asset, markets) {\r\n        var symbol = asset.symbol;\r\n        return markets.map(\r\n            function (market) {\r\n                if (market == symbol)\r\n                return null;\r\n                var marketID = market + '_' + symbol;\r\n                var marketName = market + '/' + symbol;\r\n                return (\r\n                    <span>\r\n                        <Link to={`/market/${marketID}`}>{marketName}</Link> &nbsp;\r\n                    </span>\r\n                );\r\n            }.bind(this)\r\n        );\r\n    }\r\n\r\n\r\n    renderAboutBox(asset) {\r\n        var issuer = ChainStore.getObject(asset.issuer, false, false);\r\n        var issuerName = issuer ? issuer.get('name') : '';\r\n\r\n        var icon = (<Icon name=\"asset\" className=\"asset\" size=\"4x\"/>);\r\n\r\n\r\n        // Add <a to any links included in the description\r\n\r\n        let description = assetUtils.parseDescription(asset.options.description);\r\n        let desc = description.main;\r\n        let short_name = description.short_name ? description.short_name : null;\r\n\r\n        let urlTest = /(http?):\\/\\/(www\\.)?[a-z0-9\\.:].*?(?=\\s)/g;\r\n\r\n        // Regexp needs a whitespace after a url, so add one to make sure\r\n        desc = desc && desc.length > 0 ? desc + \" \" : desc;\r\n        let urls = desc.match(urlTest);\r\n\r\n        // Add market link\r\n        const core_asset = ChainStore.getAsset(\"1.3.0\");\r\n        let preferredMarket = description.market ? description.market : core_asset ? core_asset.get(\"symbol\") : \"SEER\";\r\n\r\n        if (urls && urls.length) {\r\n            urls.forEach(url => {\r\n                let markdownUrl = `<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"${url}\">${url}</a>`;\r\n                desc = desc.replace(url, markdownUrl);\r\n            });\r\n        }\r\n\r\n        let {name, prefix} = utils.replaceName(asset.symbol, \"bitasset\" in asset && !asset.bitasset.is_prediction_market && asset.issuer === \"1.2.0\");\r\n\r\n        return (\r\n            <div style={{overflow:\"visible\"}}>\r\n                <HelpContent\r\n                    path = {\"assets/\" + asset.symbol}\r\n                    alt_path = \"assets/Asset\"\r\n                    section=\"summary\"\r\n                    symbol={(prefix || \"\") + name}\r\n                    description={desc}\r\n                    issuer= {issuerName}\r\n                    hide_issuer = \"true\"\r\n                />\r\n                {short_name ? <p>{short_name}</p> : null}\r\n                <a style={{textTransform: \"uppercase\"}} className=\"button market-button\" href={`${__HASH_HISTORY__ ? \"#\" : \"\"}/market/${asset.symbol}_${preferredMarket}`}><Translate content=\"exchange.market\"/></a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    renderSummary(asset) {\r\n        // TODO: confidential_supply: 0 USD   [IF NOT ZERO OR NOT DISABLE CONFIDENTIAL]\r\n        var options = asset.options;\r\n\r\n        let flagBooleans = assetUtils.getFlagBooleans(asset.options.flags);\r\n\r\n        let bitNames = Object.keys(flagBooleans);\r\n        let  dynamic = ChainStore.getObject(asset.dynamic_asset_data_id,false,false);\r\n        let  current_supply = dynamic?parseInt(dynamic.get(\"current_supply\")):0;\r\n        let  confidential_supply = dynamic?parseInt(dynamic.get(\"confidential_supply\")):0;\r\n\r\n        var currentSupply = (dynamic) ? (\r\n            <tr>\r\n                <td> <Translate content=\"explorer.asset.summary.current_supply\"/> </td>\r\n                <td> <FormattedAsset amount={current_supply} asset={asset.id}/> </td>\r\n            </tr>\r\n        ) : null;\r\n\r\n        var stealthSupply = (dynamic) ? (\r\n            <tr>\r\n                <td> <Translate content=\"explorer.asset.summary.stealth_supply\"/> </td>\r\n                <td> <FormattedAsset amount={confidential_supply} asset={asset.id}/> </td>\r\n            </tr>\r\n        ) : null;\r\n\r\n\r\n        var marketFee = flagBooleans[\"charge_market_fee\"] ? (\r\n            <tr>\r\n                <td> <Translate content=\"explorer.asset.summary.market_fee\"/> </td>\r\n                <td> {options.market_fee_percent / 100.0} % </td>\r\n            </tr>\r\n        ) : null;\r\n\r\n        // options.max_market_fee initially a string\r\n        var maxMarketFee = flagBooleans[\"charge_market_fee\"] ? (\r\n            <tr>\r\n                <td> <Translate content=\"explorer.asset.summary.max_market_fee\"/> </td>\r\n                <td> <FormattedAsset amount={+options.max_market_fee} asset={asset.id} /> </td>\r\n            </tr>\r\n        ) : null;\r\n\r\n        return (\r\n            <div className=\"asset-card no-padding\">\r\n                <div className=\"card-divider\"><AssetName name={asset.symbol} /></div>\r\n                    <table className=\"table key-value-table table-hover\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td> <Translate content=\"explorer.asset.summary.asset_type\"/> </td>\r\n                                <td> {this._assetType(asset)} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> <Translate content=\"explorer.asset.summary.issuer\"/> </td>\r\n                                <td> <LinkToAccountById account={asset.issuer}/> </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> <Translate content=\"explorer.assets.precision\"/> </td>\r\n                                <td> {asset.precision} </td>\r\n                            </tr>\r\n                            {currentSupply}\r\n                            {stealthSupply}\r\n                            {marketFee}\r\n                            {maxMarketFee}\r\n                        </tbody>\r\n                    </table>\r\n                <br/>\r\n                {this.renderFlagIndicators(flagBooleans, bitNames)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFeePool(asset) {\r\n        var dynamic = asset.dynamic;\r\n        var options = asset.options;\r\n        return (\r\n            <div className=\"asset-card no-padding\">\r\n                <div className=\"card-divider\">{(<Translate content=\"explorer.asset.fee_pool.title\"/>)}</div>\r\n                    <table className=\"table key-value-table\" style={{ padding:\"1.2rem\"}}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td> <Translate content=\"explorer.asset.fee_pool.core_exchange_rate\"/> </td>\r\n                                <td> {this.formattedPrice(options.core_exchange_rate)} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> <Translate content=\"explorer.asset.fee_pool.pool_balance\"/> </td>\r\n                                <td> {dynamic ? <FormattedAsset asset=\"1.3.0\" amount={dynamic.fee_pool} /> : null} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td> <Translate content=\"explorer.asset.fee_pool.unclaimed_issuer_income\"/> </td>\r\n                                <td> {dynamic ? <FormattedAsset asset={asset.id} amount={dynamic.accumulated_fees} /> : null} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    // TODO: Blacklist Authorities: <Account list like Voting>\r\n    // TODO: Blacklist Market: Base/Market, Base/Market\r\n    renderPermissions(asset) {\r\n        //var dynamic = asset.dynamic;\r\n\r\n        var options = asset.options;\r\n\r\n        let permissionBooleans = assetUtils.getFlagBooleans(asset.options.issuer_permissions);\r\n\r\n        let bitNames = Object.keys(permissionBooleans);\r\n\r\n        // options.blacklist_authorities = [\"1.2.3\", \"1.2.4\"];\r\n        // options.whitelist_authorities = [\"1.2.1\", \"1.2.2\"];\r\n        // options.blacklist_markets = [\"JPY\", \"RUB\"];\r\n        // options.whitelist_markets = [\"USD\", \"EUR\", \"GOLD\"];\r\n\r\n        // options.max_market_fee initially a string\r\n        var maxMarketFee = permissionBooleans[\"charge_market_fee\"] ? (\r\n            <tr>\r\n                <td> <Translate content=\"explorer.asset.permissions.max_market_fee\"/> </td>\r\n                <td> <FormattedAsset amount={+options.max_market_fee} asset={asset.id} /> </td>\r\n            </tr>\r\n        ) : null;\r\n\r\n        // options.max_supply initially a string\r\n        var maxSupply = (\r\n            <tr>\r\n                <td> <Translate content=\"explorer.asset.permissions.max_supply\"/> </td>\r\n                <td> <FormattedAsset amount={+options.max_supply} asset={asset.id} /> </td>\r\n            </tr>\r\n        );\r\n\r\n        var whiteLists = permissionBooleans[\"white_list\"] ? (\r\n            <span>\r\n                <br/>\r\n                <Translate content=\"explorer.asset.permissions.blacklist_authorities\"/>:\r\n                &nbsp;{this.renderAuthorityList(options.blacklist_authorities)}\r\n                <br/>\r\n                <Translate content=\"explorer.asset.permissions.blacklist_markets\"/>:\r\n                &nbsp;{this.renderMarketList(asset, options.blacklist_markets)}\r\n                <br/>\r\n                <Translate content=\"explorer.asset.permissions.whitelist_authorities\"/>:\r\n                &nbsp;{this.renderAuthorityList(options.whitelist_authorities)}\r\n                <br/>\r\n                <Translate content=\"explorer.asset.permissions.whitelist_markets\"/>:\r\n                &nbsp;{this.renderMarketList(asset, options.whitelist_markets)}\r\n            </span>\r\n        ) : null;\r\n\r\n        return (\r\n            <div className=\"asset-card no-padding\">\r\n                <div className=\"card-divider\">{(<Translate content=\"explorer.asset.permissions.title\"/>)} </div>\r\n                <table className=\"table key-value-table table-hover\" style={{ padding:\"1.2rem\"}}>\r\n                    <tbody>\r\n                        {maxMarketFee}\r\n                        {maxSupply}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <br/>\r\n                {this.renderPermissionIndicators(permissionBooleans, bitNames)}\r\n                <br/>\r\n\r\n                {/*whiteLists*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        var asset = this.props.asset.toJS();\r\n        var priceFeed =  null;\r\n        var priceFeedData = null;\r\n\r\n        return (\r\n            <div className=\"grid-container\">\r\n                <div className=\"grid-block page-layout\">\r\n                    <div className=\"grid-block main-content wrap regular-padding\">\r\n                        <div className=\"grid-block small-up-1\" style={{width:\"100%\"}}>\r\n                            {this.renderAboutBox(asset)}\r\n                        </div>\r\n                        <div className=\"grid-block small-up-1 medium-up-2\">\r\n                            <div className=\"grid-content\">\r\n                                {this.renderSummary(asset)}\r\n                            </div>\r\n                            <div className=\"grid-content\">\r\n                                {priceFeed ? priceFeed : this.renderPermissions(asset)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid-block small-up-1 medium-up-2\">\r\n                            <div className=\"grid-content\">\r\n                                {this.renderFeePool(asset)}\r\n                            </div>\r\n                            <div className=\"grid-content\">\r\n                                {priceFeed ? this.renderPermissions(asset) : null}\r\n                            </div>\r\n                        </div>\r\n                        {priceFeedData ? priceFeedData : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAsset = BindToChainState(Asset, {keep_updating: true});\r\nclass AssetContainer extends React.Component {\r\n    static propTypes = {\r\n        asset: ChainTypes.ChainAsset.isRequired\r\n    }\r\n\r\n    render() {\r\n        let backingAsset =  \"1.3.0\";\r\n        return <Asset {...this.props} backingAsset={backingAsset}/>;\r\n    }\r\n}\r\nAssetContainer = BindToChainState(AssetContainer, {keep_updating: true});\r\n\r\nexport default class AssetSymbolSplitter extends React.Component {\r\n\r\n    render() {\r\n        let symbol = this.props.params.symbol;\r\n        return <AssetContainer {...this.props} asset={symbol}/>;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Blockchain/Asset.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;;;;AAhCA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AACA;AACA;AAJA;AACA;AAwBA;;;AAoBA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AANA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAdA;AAFA;AAmBA;AAAA;AAAA;AACA;AADA;AApBA;AA0BA;;;;AAnIA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AACA;AALA;AARA;AAiBA;AADA;AACA;AACA;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AADA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAIA;;;;AApBA;AACA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;;;;AAfA;AACA;AAkBA;AACA;AACA;AADA;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;;;;AAhBA;AACA;AAmBA;;;AAMA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;;;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;;;AAGA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAHA;AAMA;;;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;;;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;;;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAEA;;;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAIA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","sourceRoot":""}