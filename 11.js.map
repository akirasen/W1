{"version":3,"file":"11.js","sources":["webpack:///./node_modules/perfect-scrollbar/src/js/plugin/instances.js","webpack:///./node_modules/perfect-scrollbar/src/js/lib/helper.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/update-geometry.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/update-scroll.js","webpack:///./node_modules/perfect-scrollbar/src/js/lib/dom.js","webpack:///app/components/Utility/Tabs.jsx","webpack:///./node_modules/perfect-scrollbar/src/js/lib/class.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/perfect-scrollbar/index.js","webpack:///./node_modules/dom-helpers/util/inDOM.js","webpack:///./node_modules/react-transition-group/utils/PropTypes.js","webpack:///app/components/Utility/TransitionWrapper.jsx","webpack:///./node_modules/perfect-scrollbar/src/js/main.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/destroy.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/default-setting.js","webpack:///./node_modules/perfect-scrollbar/src/js/lib/event-manager.js","webpack:///./node_modules/perfect-scrollbar/src/js/lib/guid.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/initialize.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/handler/click-rail.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/handler/drag-scrollbar.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/handler/keyboard.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/handler/mouse-wheel.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/handler/touch.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/handler/selection.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/handler/native-scroll.js","webpack:///./node_modules/perfect-scrollbar/src/js/plugin/update.js","webpack:///./node_modules/react-transition-group/CSSTransitionGroup.js","webpack:///./node_modules/react-transition-group/TransitionGroup.js","webpack:///./node_modules/chain-function/index.js","webpack:///./node_modules/react-transition-group/utils/ChildMapping.js","webpack:///./node_modules/react-transition-group/CSSTransitionGroupChild.js","webpack:///./node_modules/dom-helpers/class/addClass.js","webpack:///./node_modules/dom-helpers/class/hasClass.js","webpack:///./node_modules/dom-helpers/class/removeClass.js","webpack:///./node_modules/dom-helpers/util/requestAnimationFrame.js","webpack:///./node_modules/dom-helpers/transition/properties.js","webpack:///app/components/Account/RecentTransactions.jsx","webpack:///app/components/Utility/EquivalentValueComponent.jsx","webpack:///app/components/Utility/PriceText.jsx","webpack:///./node_modules/browser-locale/index.js","webpack:///app/components/Utility/MarketPrice.jsx","webpack:///app/components/Exchange/OpenSettleOrders.jsx","webpack:///app/components/Exchange/MyOpenOrders.jsx","webpack:///app/components/Dashboard/SimpleDepositWithdraw.jsx","webpack:///app/components/Dashboard/SimpleDepositBlocktradesBridge.jsx","webpack:///app/components/Modal/BorrowModal.jsx","webpack:///app/components/Modal/SettleModal.jsx","webpack:///app/components/Utility/MarketChangeComponent.jsx","webpack:///app/lib/common/permission_utils.js","webpack:///app/components/Account/NestedApprovalState.jsx","webpack:///app/components/Modal/ProposalApproveModal.jsx","webpack:///app/components/Account/Proposals.jsx","webpack:///app/components/Account/AccountOrders.jsx","webpack:///app/lib/common/accountHelper.js","webpack:///app/components/Icon/PulseIcon.js","webpack:///app/components/Account/AccountOverview.jsx"],"sourcesContent":["'use strict';\r\n\r\nvar _ = require('../lib/helper');\r\nvar cls = require('../lib/class');\r\nvar defaultSettings = require('./default-setting');\r\nvar dom = require('../lib/dom');\r\nvar EventManager = require('../lib/event-manager');\r\nvar guid = require('../lib/guid');\r\n\r\nvar instances = {};\r\n\r\nfunction Instance(element) {\r\n  var i = this;\r\n\r\n  i.settings = _.clone(defaultSettings);\r\n  i.containerWidth = null;\r\n  i.containerHeight = null;\r\n  i.contentWidth = null;\r\n  i.contentHeight = null;\r\n\r\n  i.isRtl = dom.css(element, 'direction') === \"rtl\";\r\n  i.isNegativeScroll = (function () {\r\n    var originalScrollLeft = element.scrollLeft;\r\n    var result = null;\r\n    element.scrollLeft = -1;\r\n    result = element.scrollLeft < 0;\r\n    element.scrollLeft = originalScrollLeft;\r\n    return result;\r\n  })();\r\n  i.negativeScrollAdjustment = i.isNegativeScroll ? element.scrollWidth - element.clientWidth : 0;\r\n  i.event = new EventManager();\r\n  i.ownerDocument = element.ownerDocument || document;\r\n\r\n  function focus() {\r\n    cls.add(element, 'ps-focus');\r\n  }\r\n\r\n  function blur() {\r\n    cls.remove(element, 'ps-focus');\r\n  }\r\n\r\n  i.scrollbarXRail = dom.appendTo(dom.e('div', 'ps-scrollbar-x-rail'), element);\r\n  i.scrollbarX = dom.appendTo(dom.e('div', 'ps-scrollbar-x'), i.scrollbarXRail);\r\n  i.scrollbarX.setAttribute('tabindex', 0);\r\n  i.event.bind(i.scrollbarX, 'focus', focus);\r\n  i.event.bind(i.scrollbarX, 'blur', blur);\r\n  i.scrollbarXActive = null;\r\n  i.scrollbarXWidth = null;\r\n  i.scrollbarXLeft = null;\r\n  i.scrollbarXBottom = _.toInt(dom.css(i.scrollbarXRail, 'bottom'));\r\n  i.isScrollbarXUsingBottom = i.scrollbarXBottom === i.scrollbarXBottom; // !isNaN\r\n  i.scrollbarXTop = i.isScrollbarXUsingBottom ? null : _.toInt(dom.css(i.scrollbarXRail, 'top'));\r\n  i.railBorderXWidth = _.toInt(dom.css(i.scrollbarXRail, 'borderLeftWidth')) + _.toInt(dom.css(i.scrollbarXRail, 'borderRightWidth'));\r\n  // Set rail to display:block to calculate margins\r\n  dom.css(i.scrollbarXRail, 'display', 'block');\r\n  i.railXMarginWidth = _.toInt(dom.css(i.scrollbarXRail, 'marginLeft')) + _.toInt(dom.css(i.scrollbarXRail, 'marginRight'));\r\n  dom.css(i.scrollbarXRail, 'display', '');\r\n  i.railXWidth = null;\r\n  i.railXRatio = null;\r\n\r\n  i.scrollbarYRail = dom.appendTo(dom.e('div', 'ps-scrollbar-y-rail'), element);\r\n  i.scrollbarY = dom.appendTo(dom.e('div', 'ps-scrollbar-y'), i.scrollbarYRail);\r\n  i.scrollbarY.setAttribute('tabindex', 0);\r\n  i.event.bind(i.scrollbarY, 'focus', focus);\r\n  i.event.bind(i.scrollbarY, 'blur', blur);\r\n  i.scrollbarYActive = null;\r\n  i.scrollbarYHeight = null;\r\n  i.scrollbarYTop = null;\r\n  i.scrollbarYRight = _.toInt(dom.css(i.scrollbarYRail, 'right'));\r\n  i.isScrollbarYUsingRight = i.scrollbarYRight === i.scrollbarYRight; // !isNaN\r\n  i.scrollbarYLeft = i.isScrollbarYUsingRight ? null : _.toInt(dom.css(i.scrollbarYRail, 'left'));\r\n  i.scrollbarYOuterWidth = i.isRtl ? _.outerWidth(i.scrollbarY) : null;\r\n  i.railBorderYWidth = _.toInt(dom.css(i.scrollbarYRail, 'borderTopWidth')) + _.toInt(dom.css(i.scrollbarYRail, 'borderBottomWidth'));\r\n  dom.css(i.scrollbarYRail, 'display', 'block');\r\n  i.railYMarginHeight = _.toInt(dom.css(i.scrollbarYRail, 'marginTop')) + _.toInt(dom.css(i.scrollbarYRail, 'marginBottom'));\r\n  dom.css(i.scrollbarYRail, 'display', '');\r\n  i.railYHeight = null;\r\n  i.railYRatio = null;\r\n}\r\n\r\nfunction getId(element) {\r\n  return element.getAttribute('data-ps-id');\r\n}\r\n\r\nfunction setId(element, id) {\r\n  element.setAttribute('data-ps-id', id);\r\n}\r\n\r\nfunction removeId(element) {\r\n  element.removeAttribute('data-ps-id');\r\n}\r\n\r\nexports.add = function (element) {\r\n  var newId = guid();\r\n  setId(element, newId);\r\n  instances[newId] = new Instance(element);\r\n  return instances[newId];\r\n};\r\n\r\nexports.remove = function (element) {\r\n  delete instances[getId(element)];\r\n  removeId(element);\r\n};\r\n\r\nexports.get = function (element) {\r\n  return instances[getId(element)];\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/instances.js\n// module id = 1536\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar cls = require('./class');\r\nvar dom = require('./dom');\r\n\r\nvar toInt = exports.toInt = function (x) {\r\n  return parseInt(x, 10) || 0;\r\n};\r\n\r\nvar clone = exports.clone = function (obj) {\r\n  if (!obj) {\r\n    return null;\r\n  } else if (obj.constructor === Array) {\r\n    return obj.map(clone);\r\n  } else if (typeof obj === 'object') {\r\n    var result = {};\r\n    for (var key in obj) {\r\n      result[key] = clone(obj[key]);\r\n    }\r\n    return result;\r\n  } else {\r\n    return obj;\r\n  }\r\n};\r\n\r\nexports.extend = function (original, source) {\r\n  var result = clone(original);\r\n  for (var key in source) {\r\n    result[key] = clone(source[key]);\r\n  }\r\n  return result;\r\n};\r\n\r\nexports.isEditable = function (el) {\r\n  return dom.matches(el, \"input,[contenteditable]\") ||\r\n         dom.matches(el, \"select,[contenteditable]\") ||\r\n         dom.matches(el, \"textarea,[contenteditable]\") ||\r\n         dom.matches(el, \"button,[contenteditable]\");\r\n};\r\n\r\nexports.removePsClasses = function (element) {\r\n  var clsList = cls.list(element);\r\n  for (var i = 0; i < clsList.length; i++) {\r\n    var className = clsList[i];\r\n    if (className.indexOf('ps-') === 0) {\r\n      cls.remove(element, className);\r\n    }\r\n  }\r\n};\r\n\r\nexports.outerWidth = function (element) {\r\n  return toInt(dom.css(element, 'width')) +\r\n         toInt(dom.css(element, 'paddingLeft')) +\r\n         toInt(dom.css(element, 'paddingRight')) +\r\n         toInt(dom.css(element, 'borderLeftWidth')) +\r\n         toInt(dom.css(element, 'borderRightWidth'));\r\n};\r\n\r\nexports.startScrolling = function (element, axis) {\r\n  cls.add(element, 'ps-in-scrolling');\r\n  if (typeof axis !== 'undefined') {\r\n    cls.add(element, 'ps-' + axis);\r\n  } else {\r\n    cls.add(element, 'ps-x');\r\n    cls.add(element, 'ps-y');\r\n  }\r\n};\r\n\r\nexports.stopScrolling = function (element, axis) {\r\n  cls.remove(element, 'ps-in-scrolling');\r\n  if (typeof axis !== 'undefined') {\r\n    cls.remove(element, 'ps-' + axis);\r\n  } else {\r\n    cls.remove(element, 'ps-x');\r\n    cls.remove(element, 'ps-y');\r\n  }\r\n};\r\n\r\nexports.env = {\r\n  isWebKit: 'WebkitAppearance' in document.documentElement.style,\r\n  supportsTouch: (('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch),\r\n  supportsIePointer: window.navigator.msMaxTouchPoints !== null\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/lib/helper.js\n// module id = 1537\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar _ = require('../lib/helper');\r\nvar cls = require('../lib/class');\r\nvar dom = require('../lib/dom');\r\nvar instances = require('./instances');\r\nvar updateScroll = require('./update-scroll');\r\n\r\nfunction getThumbSize(i, thumbSize) {\r\n  if (i.settings.minScrollbarLength) {\r\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\r\n  }\r\n  if (i.settings.maxScrollbarLength) {\r\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\r\n  }\r\n  return thumbSize;\r\n}\r\n\r\nfunction updateCss(element, i) {\r\n  var xRailOffset = {width: i.railXWidth};\r\n  if (i.isRtl) {\r\n    xRailOffset.left = i.negativeScrollAdjustment + element.scrollLeft + i.containerWidth - i.contentWidth;\r\n  } else {\r\n    xRailOffset.left = element.scrollLeft;\r\n  }\r\n  if (i.isScrollbarXUsingBottom) {\r\n    xRailOffset.bottom = i.scrollbarXBottom - element.scrollTop;\r\n  } else {\r\n    xRailOffset.top = i.scrollbarXTop + element.scrollTop;\r\n  }\r\n  dom.css(i.scrollbarXRail, xRailOffset);\r\n\r\n  var yRailOffset = {top: element.scrollTop, height: i.railYHeight};\r\n  if (i.isScrollbarYUsingRight) {\r\n    if (i.isRtl) {\r\n      yRailOffset.right = i.contentWidth - (i.negativeScrollAdjustment + element.scrollLeft) - i.scrollbarYRight - i.scrollbarYOuterWidth;\r\n    } else {\r\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\r\n    }\r\n  } else {\r\n    if (i.isRtl) {\r\n      yRailOffset.left = i.negativeScrollAdjustment + element.scrollLeft + i.containerWidth * 2 - i.contentWidth - i.scrollbarYLeft - i.scrollbarYOuterWidth;\r\n    } else {\r\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\r\n    }\r\n  }\r\n  dom.css(i.scrollbarYRail, yRailOffset);\r\n\r\n  dom.css(i.scrollbarX, {left: i.scrollbarXLeft, width: i.scrollbarXWidth - i.railBorderXWidth});\r\n  dom.css(i.scrollbarY, {top: i.scrollbarYTop, height: i.scrollbarYHeight - i.railBorderYWidth});\r\n}\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n\r\n  i.containerWidth = element.clientWidth;\r\n  i.containerHeight = element.clientHeight;\r\n  i.contentWidth = element.scrollWidth;\r\n  i.contentHeight = element.scrollHeight;\r\n\r\n  var existingRails;\r\n  if (!element.contains(i.scrollbarXRail)) {\r\n    existingRails = dom.queryChildren(element, '.ps-scrollbar-x-rail');\r\n    if (existingRails.length > 0) {\r\n      existingRails.forEach(function (rail) {\r\n        dom.remove(rail);\r\n      });\r\n    }\r\n    dom.appendTo(i.scrollbarXRail, element);\r\n  }\r\n  if (!element.contains(i.scrollbarYRail)) {\r\n    existingRails = dom.queryChildren(element, '.ps-scrollbar-y-rail');\r\n    if (existingRails.length > 0) {\r\n      existingRails.forEach(function (rail) {\r\n        dom.remove(rail);\r\n      });\r\n    }\r\n    dom.appendTo(i.scrollbarYRail, element);\r\n  }\r\n\r\n  if (!i.settings.suppressScrollX && i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth) {\r\n    i.scrollbarXActive = true;\r\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\r\n    i.railXRatio = i.containerWidth / i.railXWidth;\r\n    i.scrollbarXWidth = getThumbSize(i, _.toInt(i.railXWidth * i.containerWidth / i.contentWidth));\r\n    i.scrollbarXLeft = _.toInt((i.negativeScrollAdjustment + element.scrollLeft) * (i.railXWidth - i.scrollbarXWidth) / (i.contentWidth - i.containerWidth));\r\n  } else {\r\n    i.scrollbarXActive = false;\r\n  }\r\n\r\n  if (!i.settings.suppressScrollY && i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight) {\r\n    i.scrollbarYActive = true;\r\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\r\n    i.railYRatio = i.containerHeight / i.railYHeight;\r\n    i.scrollbarYHeight = getThumbSize(i, _.toInt(i.railYHeight * i.containerHeight / i.contentHeight));\r\n    i.scrollbarYTop = _.toInt(element.scrollTop * (i.railYHeight - i.scrollbarYHeight) / (i.contentHeight - i.containerHeight));\r\n  } else {\r\n    i.scrollbarYActive = false;\r\n  }\r\n\r\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\r\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\r\n  }\r\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\r\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\r\n  }\r\n\r\n  updateCss(element, i);\r\n\r\n  if (i.scrollbarXActive) {\r\n    cls.add(element, 'ps-active-x');\r\n  } else {\r\n    cls.remove(element, 'ps-active-x');\r\n    i.scrollbarXWidth = 0;\r\n    i.scrollbarXLeft = 0;\r\n    updateScroll(element, 'left', 0);\r\n  }\r\n  if (i.scrollbarYActive) {\r\n    cls.add(element, 'ps-active-y');\r\n  } else {\r\n    cls.remove(element, 'ps-active-y');\r\n    i.scrollbarYHeight = 0;\r\n    i.scrollbarYTop = 0;\r\n    updateScroll(element, 'top', 0);\r\n  }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/update-geometry.js\n// module id = 1538\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar instances = require('./instances');\r\n\r\nvar lastTop;\r\nvar lastLeft;\r\n\r\nvar createDOMEvent = function (name) {\r\n  var event = document.createEvent(\"Event\");\r\n  event.initEvent(name, true, true);\r\n  return event;\r\n};\r\n\r\nmodule.exports = function (element, axis, value) {\r\n  if (typeof element === 'undefined') {\r\n    throw 'You must provide an element to the update-scroll function';\r\n  }\r\n\r\n  if (typeof axis === 'undefined') {\r\n    throw 'You must provide an axis to the update-scroll function';\r\n  }\r\n\r\n  if (typeof value === 'undefined') {\r\n    throw 'You must provide a value to the update-scroll function';\r\n  }\r\n\r\n  if (axis === 'top' && value <= 0) {\r\n    element.scrollTop = value = 0; // don't allow negative scroll\r\n    element.dispatchEvent(createDOMEvent('ps-y-reach-start'));\r\n  }\r\n\r\n  if (axis === 'left' && value <= 0) {\r\n    element.scrollLeft = value = 0; // don't allow negative scroll\r\n    element.dispatchEvent(createDOMEvent('ps-x-reach-start'));\r\n  }\r\n\r\n  var i = instances.get(element);\r\n\r\n  if (axis === 'top' && value >= i.contentHeight - i.containerHeight) {\r\n    // don't allow scroll past container\r\n    value = i.contentHeight - i.containerHeight;\r\n    if (value - element.scrollTop <= 1) {\r\n      // mitigates rounding errors on non-subpixel scroll values\r\n      value = element.scrollTop;\r\n    } else {\r\n      element.scrollTop = value;\r\n    }\r\n    element.dispatchEvent(createDOMEvent('ps-y-reach-end'));\r\n  }\r\n\r\n  if (axis === 'left' && value >= i.contentWidth - i.containerWidth) {\r\n    // don't allow scroll past container\r\n    value = i.contentWidth - i.containerWidth;\r\n    if (value - element.scrollLeft <= 1) {\r\n      // mitigates rounding errors on non-subpixel scroll values\r\n      value = element.scrollLeft;\r\n    } else {\r\n      element.scrollLeft = value;\r\n    }\r\n    element.dispatchEvent(createDOMEvent('ps-x-reach-end'));\r\n  }\r\n\r\n  if (!lastTop) {\r\n    lastTop = element.scrollTop;\r\n  }\r\n\r\n  if (!lastLeft) {\r\n    lastLeft = element.scrollLeft;\r\n  }\r\n\r\n  if (axis === 'top' && value < lastTop) {\r\n    element.dispatchEvent(createDOMEvent('ps-scroll-up'));\r\n  }\r\n\r\n  if (axis === 'top' && value > lastTop) {\r\n    element.dispatchEvent(createDOMEvent('ps-scroll-down'));\r\n  }\r\n\r\n  if (axis === 'left' && value < lastLeft) {\r\n    element.dispatchEvent(createDOMEvent('ps-scroll-left'));\r\n  }\r\n\r\n  if (axis === 'left' && value > lastLeft) {\r\n    element.dispatchEvent(createDOMEvent('ps-scroll-right'));\r\n  }\r\n\r\n  if (axis === 'top') {\r\n    element.scrollTop = lastTop = value;\r\n    element.dispatchEvent(createDOMEvent('ps-scroll-y'));\r\n  }\r\n\r\n  if (axis === 'left') {\r\n    element.scrollLeft = lastLeft = value;\r\n    element.dispatchEvent(createDOMEvent('ps-scroll-x'));\r\n  }\r\n\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/update-scroll.js\n// module id = 1539\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar DOM = {};\r\n\r\nDOM.e = function (tagName, className) {\r\n  var element = document.createElement(tagName);\r\n  element.className = className;\r\n  return element;\r\n};\r\n\r\nDOM.appendTo = function (child, parent) {\r\n  parent.appendChild(child);\r\n  return child;\r\n};\r\n\r\nfunction cssGet(element, styleName) {\r\n  return window.getComputedStyle(element)[styleName];\r\n}\r\n\r\nfunction cssSet(element, styleName, styleValue) {\r\n  if (typeof styleValue === 'number') {\r\n    styleValue = styleValue.toString() + 'px';\r\n  }\r\n  element.style[styleName] = styleValue;\r\n  return element;\r\n}\r\n\r\nfunction cssMultiSet(element, obj) {\r\n  for (var key in obj) {\r\n    var val = obj[key];\r\n    if (typeof val === 'number') {\r\n      val = val.toString() + 'px';\r\n    }\r\n    element.style[key] = val;\r\n  }\r\n  return element;\r\n}\r\n\r\nDOM.css = function (element, styleNameOrObject, styleValue) {\r\n  if (typeof styleNameOrObject === 'object') {\r\n    // multiple set with object\r\n    return cssMultiSet(element, styleNameOrObject);\r\n  } else {\r\n    if (typeof styleValue === 'undefined') {\r\n      return cssGet(element, styleNameOrObject);\r\n    } else {\r\n      return cssSet(element, styleNameOrObject, styleValue);\r\n    }\r\n  }\r\n};\r\n\r\nDOM.matches = function (element, query) {\r\n  if (typeof element.matches !== 'undefined') {\r\n    return element.matches(query);\r\n  } else {\r\n    if (typeof element.matchesSelector !== 'undefined') {\r\n      return element.matchesSelector(query);\r\n    } else if (typeof element.webkitMatchesSelector !== 'undefined') {\r\n      return element.webkitMatchesSelector(query);\r\n    } else if (typeof element.mozMatchesSelector !== 'undefined') {\r\n      return element.mozMatchesSelector(query);\r\n    } else if (typeof element.msMatchesSelector !== 'undefined') {\r\n      return element.msMatchesSelector(query);\r\n    }\r\n  }\r\n};\r\n\r\nDOM.remove = function (element) {\r\n  if (typeof element.remove !== 'undefined') {\r\n    element.remove();\r\n  } else {\r\n    if (element.parentNode) {\r\n      element.parentNode.removeChild(element);\r\n    }\r\n  }\r\n};\r\n\r\nDOM.queryChildren = function (element, selector) {\r\n  return Array.prototype.filter.call(element.childNodes, function (child) {\r\n    return DOM.matches(child, selector);\r\n  });\r\n};\r\n\r\nmodule.exports = DOM;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/lib/dom.js\n// module id = 1540\n// module chunks = 1 8 9 10 11 12 13 14 15","import React, {PropTypes} from \"react\";\r\nimport Translate from \"react-translate-component\";\r\nimport cnames from \"classnames\";\r\nimport { connect } from \"alt-react\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\n\r\n/**\r\n *  Renders a tab layout, handling switching and optionally persists the currently open tab using the SettingsStore\r\n *\r\n *  props:\r\n *     setting: unique name to be used to remember the active tab of this tabs layout,\r\n *     tabsClass: optional classes for the tabs container div\r\n *     contentClass: optional classes for the content container div\r\n *\r\n *  Usage:\r\n *\r\n *  <Tabs setting=\"mySetting\">\r\n *      <Tab title=\"locale.string.title1\">Tab 1 content</Tab>\r\n *      <Tab title=\"locale.string.title2\">Tab 2 content</Tab>\r\n *  </Tabs>\r\n *\r\n */\r\n\r\nclass Tab extends React.Component {\r\n\r\n    static propTypes = {\r\n        changeTab: PropTypes.func,\r\n        isActive: PropTypes.bool.isRequired,\r\n        index: PropTypes.number.isRequired,\r\n        className: PropTypes.string,\r\n        isLinkTo: PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        isActive: false,\r\n        index: 0,\r\n        className: \"\",\r\n        isLinkTo: \"\"\r\n    };\r\n\r\n    render() {\r\n        let {isActive, index, changeTab, title, className, disabled} = this.props;\r\n        let c = cnames({\"is-active\": isActive}, className);\r\n\r\n        if (this.props.collapsed) {\r\n            return <option value={index} data-is-link-to={this.props.isLinkTo} >{typeof title === \"string\" && title.indexOf(\".\") > 0 ? <Translate className=\"tab-title\" content={title} /> : <span className=\"tab-title\">{title}</span>}</option>;\r\n        }\r\n        return (\r\n            <li className={c} onClick={!disabled ? changeTab.bind(this, index,this.props.isLinkTo) : null}>\r\n                <a>\r\n                    {typeof title === \"string\" && title.indexOf(\".\") > 0 ? <Translate className=\"tab-title\" content={title} /> : <span className=\"tab-title\">{title}</span>}\r\n                    {this.props.subText ? <div className=\"tab-subtext\">{this.props.subText}</div> : null}\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Tabs extends React.Component {\r\n\r\n    static propTypes = {\r\n        setting: PropTypes.string,\r\n        defaultActiveTab: PropTypes.number,\r\n        segmented: PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        active: 0,\r\n        defaultActiveTab: 0,\r\n        segmented: true,\r\n        contentClass: \"\",\r\n        style: {}\r\n    };\r\n\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            activeTab: props.setting ? props.viewSettings.get(props.setting, props.defaultActiveTab) : props.defaultActiveTab,\r\n            width: window.innerWidth\r\n        };\r\n\r\n        this._setDimensions = this._setDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._setDimensions();\r\n        window.addEventListener(\"resize\", this._setDimensions, {capture: false, passive: true});\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let nextSetting = nextProps.viewSettings.get(nextProps.setting);\r\n        if (nextSetting !== this.props.viewSettings.get(this.props.setting)) {\r\n            this.setState({\r\n                activeTab: nextSetting\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this._setDimensions);\r\n    }\r\n\r\n    _setDimensions() {\r\n        let width = window.innerWidth;\r\n\r\n        if (width !== this.state.width) {\r\n            this.setState({width});\r\n        }\r\n    }\r\n\r\n    _changeTab(value,isLinkTo) {\r\n        if (value === this.state.activeTab) return;\r\n        // Persist current tab if desired\r\n\r\n        if (isLinkTo !== \"\") {\r\n            this.context.router.push(isLinkTo);\r\n            return;\r\n        }\r\n\r\n        if (this.props.setting) {\r\n            SettingsActions.changeViewSetting({\r\n                [this.props.setting]: value\r\n            });\r\n        }\r\n        this.setState({activeTab: value});\r\n\r\n        if(this.props.onChangeTab) this.props.onChangeTab(value);\r\n    }\r\n\r\n    render() {\r\n        let {children, contentClass, tabsClass, style, segmented} = this.props;\r\n        const collapseTabs = this.state.width < 900 && React.Children.count(children) > 2;\r\n\r\n        let activeContent = null;\r\n\r\n        let tabIndex = [];\r\n        let tabs = React.Children.map(children, (child, index) => {\r\n            if (!child) {\r\n                return null;\r\n            }\r\n            if (collapseTabs && child.props.disabled) return null;\r\n            let isActive = index === this.state.activeTab;\r\n            if (isActive) {\r\n                activeContent = child.props.children;\r\n            }\r\n\r\n            return React.cloneElement(child, {collapsed: collapseTabs, isActive, changeTab: this._changeTab.bind(this), index: index} );\r\n        }).filter(a => {\r\n            if (a) {\r\n                tabIndex.push(a.props.index);\r\n            }\r\n            return a !== null;\r\n        });\r\n\r\n        if (!activeContent) {\r\n            activeContent = tabs[0].props.children;\r\n        }\r\n\r\n        return (\r\n            <div className={cnames(!!this.props.actionButtons ? \"with-buttons\" : \"\", this.props.className)}>\r\n                <div className=\"service-selector\">\r\n\r\n                    <ul style={style} className={cnames(\"button-group no-margin\", tabsClass, {segmented})}>\r\n                        {collapseTabs ?\r\n                            <li style={{paddingLeft: 10, paddingRight: 10, minWidth: \"15rem\"}}>\r\n                                <select\r\n                                    value={this.state.activeTab}\r\n                                    style={{marginTop: 10, marginBottom: 10}}\r\n                                    className=\"bts-select\"\r\n                                    onChange={(e) => { let ind = parseInt(e.target.value, 10); this._changeTab(ind,e.target[ind].attributes[\"data-is-link-to\"].value);}}\r\n                                >\r\n                                    {tabs}\r\n                                </select>\r\n                            </li> :\r\n                            tabs\r\n                        }\r\n                        {this.props.actionButtons ? <li className=\"tabs-action-buttons\">{this.props.actionButtons}</li> : null}\r\n                    </ul>\r\n                </div>\r\n                <div className={contentClass + \" tab-content\"} >\r\n                    {activeContent}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTabs = connect(Tabs, {\r\n    listenTo() {\r\n        return [SettingsStore];\r\n    },\r\n    getProps() {\r\n        return {viewSettings: SettingsStore.getState().viewSettings};\r\n    }\r\n});\r\n\r\nexport {Tabs, Tab};\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/Tabs.jsx","'use strict';\r\n\r\nfunction oldAdd(element, className) {\r\n  var classes = element.className.split(' ');\r\n  if (classes.indexOf(className) < 0) {\r\n    classes.push(className);\r\n  }\r\n  element.className = classes.join(' ');\r\n}\r\n\r\nfunction oldRemove(element, className) {\r\n  var classes = element.className.split(' ');\r\n  var idx = classes.indexOf(className);\r\n  if (idx >= 0) {\r\n    classes.splice(idx, 1);\r\n  }\r\n  element.className = classes.join(' ');\r\n}\r\n\r\nexports.add = function (element, className) {\r\n  if (element.classList) {\r\n    element.classList.add(className);\r\n  } else {\r\n    oldAdd(element, className);\r\n  }\r\n};\r\n\r\nexports.remove = function (element, className) {\r\n  if (element.classList) {\r\n    element.classList.remove(className);\r\n  } else {\r\n    oldRemove(element, className);\r\n  }\r\n};\r\n\r\nexports.list = function (element) {\r\n  if (element.classList) {\r\n    return Array.prototype.slice.apply(element.classList);\r\n  } else {\r\n    return element.className.split(' ');\r\n  }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/lib/class.js\n// module id = 1543\n// module chunks = 1 8 9 10 11 12 13 14 15","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@babel/runtime/helpers/interopRequireDefault.js\n// module id = 1546\n// module chunks = 1 8 9 10 11 12 13 14","'use strict';\r\n\r\nmodule.exports = require('./src/js/main');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/index.js\n// module id = 1550\n// module chunks = 1 8 9 10 11 12 13 14 15","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/util/inDOM.js\n// module id = 1551\n// module chunks = 1 8 9 10 11 12 13 14","'use strict';\n\nexports.__esModule = true;\nexports.nameShape = undefined;\nexports.transitionTimeout = transitionTimeout;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\n\n        // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar nameShape = exports.nameShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  active: _propTypes2.default.string\n}), _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  enterActive: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  leaveActive: _propTypes2.default.string,\n  appear: _propTypes2.default.string,\n  appearActive: _propTypes2.default.string\n})]);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-transition-group/utils/PropTypes.js\n// module id = 1552\n// module chunks = 1 8 9 10 11 12 13 14","import React from \"react\";\r\nimport CSSTransitionGroup from \"react-transition-group/CSSTransitionGroup\";\r\n\r\nexport default class TransitionWrapper extends React.Component {\r\n\r\n    static defaultProps = {\r\n        component: \"span\",\r\n        enterTimeout: 2000\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            animateEnter: false\r\n        };\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.enableAnimation();\r\n    }\r\n\r\n    resetAnimation() {\r\n        this.setState({\r\n            animateEnter: false\r\n        });\r\n\r\n        this.enableAnimation();\r\n    }\r\n\r\n    enableAnimation() {\r\n        this.timer = setTimeout(() => {\r\n            if (this.timer) {\r\n                this.setState({\r\n                    animateEnter: true\r\n                });\r\n            }\r\n        }, 2000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer);\r\n        this.timer = null;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.children) {\r\n            return React.createElement(this.props.component);\r\n        } else {\r\n            return (\r\n                <CSSTransitionGroup\r\n                    className={this.props.className}\r\n                    component={this.props.component}\r\n                    transitionName={this.props.transitionName}\r\n                    transitionEnterTimeout={this.props.enterTimeout}\r\n                    transitionEnter={this.state.animateEnter}\r\n                    transitionLeave={false}\r\n                >\r\n                    {this.props.children}\r\n                </CSSTransitionGroup>\r\n            );\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/TransitionWrapper.jsx","'use strict';\r\n\r\nvar destroy = require('./plugin/destroy');\r\nvar initialize = require('./plugin/initialize');\r\nvar update = require('./plugin/update');\r\n\r\nmodule.exports = {\r\n  initialize: initialize,\r\n  update: update,\r\n  destroy: destroy\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/main.js\n// module id = 1557\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar _ = require('../lib/helper');\r\nvar dom = require('../lib/dom');\r\nvar instances = require('./instances');\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n\r\n  if (!i) {\r\n    return;\r\n  }\r\n\r\n  i.event.unbindAll();\r\n  dom.remove(i.scrollbarX);\r\n  dom.remove(i.scrollbarY);\r\n  dom.remove(i.scrollbarXRail);\r\n  dom.remove(i.scrollbarYRail);\r\n  _.removePsClasses(element);\r\n\r\n  instances.remove(element);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/destroy.js\n// module id = 1558\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nmodule.exports = {\r\n  handlers: ['click-rail', 'drag-scrollbar', 'keyboard', 'wheel', 'touch'],\r\n  maxScrollbarLength: null,\r\n  minScrollbarLength: null,\r\n  scrollXMarginOffset: 0,\r\n  scrollYMarginOffset: 0,\r\n  suppressScrollX: false,\r\n  suppressScrollY: false,\r\n  swipePropagation: true,\r\n  useBothWheelAxes: false,\r\n  wheelPropagation: false,\r\n  wheelSpeed: 1,\r\n  theme: 'default'\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/default-setting.js\n// module id = 1559\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar EventElement = function (element) {\r\n  this.element = element;\r\n  this.events = {};\r\n};\r\n\r\nEventElement.prototype.bind = function (eventName, handler) {\r\n  if (typeof this.events[eventName] === 'undefined') {\r\n    this.events[eventName] = [];\r\n  }\r\n  this.events[eventName].push(handler);\r\n  this.element.addEventListener(eventName, handler, false);\r\n};\r\n\r\nEventElement.prototype.unbind = function (eventName, handler) {\r\n  var isHandlerProvided = (typeof handler !== 'undefined');\r\n  this.events[eventName] = this.events[eventName].filter(function (hdlr) {\r\n    if (isHandlerProvided && hdlr !== handler) {\r\n      return true;\r\n    }\r\n    this.element.removeEventListener(eventName, hdlr, false);\r\n    return false;\r\n  }, this);\r\n};\r\n\r\nEventElement.prototype.unbindAll = function () {\r\n  for (var name in this.events) {\r\n    this.unbind(name);\r\n  }\r\n};\r\n\r\nvar EventManager = function () {\r\n  this.eventElements = [];\r\n};\r\n\r\nEventManager.prototype.eventElement = function (element) {\r\n  var ee = this.eventElements.filter(function (eventElement) {\r\n    return eventElement.element === element;\r\n  })[0];\r\n  if (typeof ee === 'undefined') {\r\n    ee = new EventElement(element);\r\n    this.eventElements.push(ee);\r\n  }\r\n  return ee;\r\n};\r\n\r\nEventManager.prototype.bind = function (element, eventName, handler) {\r\n  this.eventElement(element).bind(eventName, handler);\r\n};\r\n\r\nEventManager.prototype.unbind = function (element, eventName, handler) {\r\n  this.eventElement(element).unbind(eventName, handler);\r\n};\r\n\r\nEventManager.prototype.unbindAll = function () {\r\n  for (var i = 0; i < this.eventElements.length; i++) {\r\n    this.eventElements[i].unbindAll();\r\n  }\r\n};\r\n\r\nEventManager.prototype.once = function (element, eventName, handler) {\r\n  var ee = this.eventElement(element);\r\n  var onceHandler = function (e) {\r\n    ee.unbind(eventName, onceHandler);\r\n    handler(e);\r\n  };\r\n  ee.bind(eventName, onceHandler);\r\n};\r\n\r\nmodule.exports = EventManager;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/lib/event-manager.js\n// module id = 1560\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nmodule.exports = (function () {\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n               .toString(16)\r\n               .substring(1);\r\n  }\r\n  return function () {\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n           s4() + '-' + s4() + s4() + s4();\r\n  };\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/lib/guid.js\n// module id = 1561\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar _ = require('../lib/helper');\r\nvar cls = require('../lib/class');\r\nvar instances = require('./instances');\r\nvar updateGeometry = require('./update-geometry');\r\n\r\n// Handlers\r\nvar handlers = {\r\n  'click-rail': require('./handler/click-rail'),\r\n  'drag-scrollbar': require('./handler/drag-scrollbar'),\r\n  'keyboard': require('./handler/keyboard'),\r\n  'wheel': require('./handler/mouse-wheel'),\r\n  'touch': require('./handler/touch'),\r\n  'selection': require('./handler/selection')\r\n};\r\nvar nativeScrollHandler = require('./handler/native-scroll');\r\n\r\nmodule.exports = function (element, userSettings) {\r\n  userSettings = typeof userSettings === 'object' ? userSettings : {};\r\n\r\n  cls.add(element, 'ps-container');\r\n\r\n  // Create a plugin instance.\r\n  var i = instances.add(element);\r\n\r\n  i.settings = _.extend(i.settings, userSettings);\r\n  cls.add(element, 'ps-theme-' + i.settings.theme);\r\n\r\n  i.settings.handlers.forEach(function (handlerName) {\r\n    handlers[handlerName](element);\r\n  });\r\n\r\n  nativeScrollHandler(element);\r\n\r\n  updateGeometry(element);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/initialize.js\n// module id = 1562\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar instances = require('../instances');\r\nvar updateGeometry = require('../update-geometry');\r\nvar updateScroll = require('../update-scroll');\r\n\r\nfunction bindClickRailHandler(element, i) {\r\n  function pageOffset(el) {\r\n    return el.getBoundingClientRect();\r\n  }\r\n  var stopPropagation = function (e) { e.stopPropagation(); };\r\n\r\n  i.event.bind(i.scrollbarY, 'click', stopPropagation);\r\n  i.event.bind(i.scrollbarYRail, 'click', function (e) {\r\n    var positionTop = e.pageY - window.pageYOffset - pageOffset(i.scrollbarYRail).top;\r\n    var direction = positionTop > i.scrollbarYTop ? 1 : -1;\r\n\r\n    updateScroll(element, 'top', element.scrollTop + direction * i.containerHeight);\r\n    updateGeometry(element);\r\n\r\n    e.stopPropagation();\r\n  });\r\n\r\n  i.event.bind(i.scrollbarX, 'click', stopPropagation);\r\n  i.event.bind(i.scrollbarXRail, 'click', function (e) {\r\n    var positionLeft = e.pageX - window.pageXOffset - pageOffset(i.scrollbarXRail).left;\r\n    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\r\n\r\n    updateScroll(element, 'left', element.scrollLeft + direction * i.containerWidth);\r\n    updateGeometry(element);\r\n\r\n    e.stopPropagation();\r\n  });\r\n}\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n  bindClickRailHandler(element, i);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/handler/click-rail.js\n// module id = 1563\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar _ = require('../../lib/helper');\r\nvar dom = require('../../lib/dom');\r\nvar instances = require('../instances');\r\nvar updateGeometry = require('../update-geometry');\r\nvar updateScroll = require('../update-scroll');\r\n\r\nfunction bindMouseScrollXHandler(element, i) {\r\n  var currentLeft = null;\r\n  var currentPageX = null;\r\n\r\n  function updateScrollLeft(deltaX) {\r\n    var newLeft = currentLeft + (deltaX * i.railXRatio);\r\n    var maxLeft = Math.max(0, i.scrollbarXRail.getBoundingClientRect().left) + (i.railXRatio * (i.railXWidth - i.scrollbarXWidth));\r\n\r\n    if (newLeft < 0) {\r\n      i.scrollbarXLeft = 0;\r\n    } else if (newLeft > maxLeft) {\r\n      i.scrollbarXLeft = maxLeft;\r\n    } else {\r\n      i.scrollbarXLeft = newLeft;\r\n    }\r\n\r\n    var scrollLeft = _.toInt(i.scrollbarXLeft * (i.contentWidth - i.containerWidth) / (i.containerWidth - (i.railXRatio * i.scrollbarXWidth))) - i.negativeScrollAdjustment;\r\n    updateScroll(element, 'left', scrollLeft);\r\n  }\r\n\r\n  var mouseMoveHandler = function (e) {\r\n    updateScrollLeft(e.pageX - currentPageX);\r\n    updateGeometry(element);\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  };\r\n\r\n  var mouseUpHandler = function () {\r\n    _.stopScrolling(element, 'x');\r\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\r\n  };\r\n\r\n  i.event.bind(i.scrollbarX, 'mousedown', function (e) {\r\n    currentPageX = e.pageX;\r\n    currentLeft = _.toInt(dom.css(i.scrollbarX, 'left')) * i.railXRatio;\r\n    _.startScrolling(element, 'x');\r\n\r\n    i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\r\n    i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  });\r\n}\r\n\r\nfunction bindMouseScrollYHandler(element, i) {\r\n  var currentTop = null;\r\n  var currentPageY = null;\r\n\r\n  function updateScrollTop(deltaY) {\r\n    var newTop = currentTop + (deltaY * i.railYRatio);\r\n    var maxTop = Math.max(0, i.scrollbarYRail.getBoundingClientRect().top) + (i.railYRatio * (i.railYHeight - i.scrollbarYHeight));\r\n\r\n    if (newTop < 0) {\r\n      i.scrollbarYTop = 0;\r\n    } else if (newTop > maxTop) {\r\n      i.scrollbarYTop = maxTop;\r\n    } else {\r\n      i.scrollbarYTop = newTop;\r\n    }\r\n\r\n    var scrollTop = _.toInt(i.scrollbarYTop * (i.contentHeight - i.containerHeight) / (i.containerHeight - (i.railYRatio * i.scrollbarYHeight)));\r\n    updateScroll(element, 'top', scrollTop);\r\n  }\r\n\r\n  var mouseMoveHandler = function (e) {\r\n    updateScrollTop(e.pageY - currentPageY);\r\n    updateGeometry(element);\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  };\r\n\r\n  var mouseUpHandler = function () {\r\n    _.stopScrolling(element, 'y');\r\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\r\n  };\r\n\r\n  i.event.bind(i.scrollbarY, 'mousedown', function (e) {\r\n    currentPageY = e.pageY;\r\n    currentTop = _.toInt(dom.css(i.scrollbarY, 'top')) * i.railYRatio;\r\n    _.startScrolling(element, 'y');\r\n\r\n    i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\r\n    i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  });\r\n}\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n  bindMouseScrollXHandler(element, i);\r\n  bindMouseScrollYHandler(element, i);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/handler/drag-scrollbar.js\n// module id = 1564\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar _ = require('../../lib/helper');\r\nvar dom = require('../../lib/dom');\r\nvar instances = require('../instances');\r\nvar updateGeometry = require('../update-geometry');\r\nvar updateScroll = require('../update-scroll');\r\n\r\nfunction bindKeyboardHandler(element, i) {\r\n  var hovered = false;\r\n  i.event.bind(element, 'mouseenter', function () {\r\n    hovered = true;\r\n  });\r\n  i.event.bind(element, 'mouseleave', function () {\r\n    hovered = false;\r\n  });\r\n\r\n  var shouldPrevent = false;\r\n  function shouldPreventDefault(deltaX, deltaY) {\r\n    var scrollTop = element.scrollTop;\r\n    if (deltaX === 0) {\r\n      if (!i.scrollbarYActive) {\r\n        return false;\r\n      }\r\n      if ((scrollTop === 0 && deltaY > 0) || (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)) {\r\n        return !i.settings.wheelPropagation;\r\n      }\r\n    }\r\n\r\n    var scrollLeft = element.scrollLeft;\r\n    if (deltaY === 0) {\r\n      if (!i.scrollbarXActive) {\r\n        return false;\r\n      }\r\n      if ((scrollLeft === 0 && deltaX < 0) || (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)) {\r\n        return !i.settings.wheelPropagation;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  i.event.bind(i.ownerDocument, 'keydown', function (e) {\r\n    if ((e.isDefaultPrevented && e.isDefaultPrevented()) || e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    var focused = dom.matches(i.scrollbarX, ':focus') ||\r\n                  dom.matches(i.scrollbarY, ':focus');\r\n\r\n    if (!hovered && !focused) {\r\n      return;\r\n    }\r\n\r\n    var activeElement = document.activeElement ? document.activeElement : i.ownerDocument.activeElement;\r\n    if (activeElement) {\r\n      if (activeElement.tagName === 'IFRAME') {\r\n        activeElement = activeElement.contentDocument.activeElement;\r\n      } else {\r\n        // go deeper if element is a webcomponent\r\n        while (activeElement.shadowRoot) {\r\n          activeElement = activeElement.shadowRoot.activeElement;\r\n        }\r\n      }\r\n      if (_.isEditable(activeElement)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var deltaX = 0;\r\n    var deltaY = 0;\r\n\r\n    switch (e.which) {\r\n    case 37: // left\r\n      if (e.metaKey) {\r\n        deltaX = -i.contentWidth;\r\n      } else if (e.altKey) {\r\n        deltaX = -i.containerWidth;\r\n      } else {\r\n        deltaX = -30;\r\n      }\r\n      break;\r\n    case 38: // up\r\n      if (e.metaKey) {\r\n        deltaY = i.contentHeight;\r\n      } else if (e.altKey) {\r\n        deltaY = i.containerHeight;\r\n      } else {\r\n        deltaY = 30;\r\n      }\r\n      break;\r\n    case 39: // right\r\n      if (e.metaKey) {\r\n        deltaX = i.contentWidth;\r\n      } else if (e.altKey) {\r\n        deltaX = i.containerWidth;\r\n      } else {\r\n        deltaX = 30;\r\n      }\r\n      break;\r\n    case 40: // down\r\n      if (e.metaKey) {\r\n        deltaY = -i.contentHeight;\r\n      } else if (e.altKey) {\r\n        deltaY = -i.containerHeight;\r\n      } else {\r\n        deltaY = -30;\r\n      }\r\n      break;\r\n    case 33: // page up\r\n      deltaY = 90;\r\n      break;\r\n    case 32: // space bar\r\n      if (e.shiftKey) {\r\n        deltaY = 90;\r\n      } else {\r\n        deltaY = -90;\r\n      }\r\n      break;\r\n    case 34: // page down\r\n      deltaY = -90;\r\n      break;\r\n    case 35: // end\r\n      if (e.ctrlKey) {\r\n        deltaY = -i.contentHeight;\r\n      } else {\r\n        deltaY = -i.containerHeight;\r\n      }\r\n      break;\r\n    case 36: // home\r\n      if (e.ctrlKey) {\r\n        deltaY = element.scrollTop;\r\n      } else {\r\n        deltaY = i.containerHeight;\r\n      }\r\n      break;\r\n    default:\r\n      return;\r\n    }\r\n\r\n    updateScroll(element, 'top', element.scrollTop - deltaY);\r\n    updateScroll(element, 'left', element.scrollLeft + deltaX);\r\n    updateGeometry(element);\r\n\r\n    shouldPrevent = shouldPreventDefault(deltaX, deltaY);\r\n    if (shouldPrevent) {\r\n      e.preventDefault();\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n  bindKeyboardHandler(element, i);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/handler/keyboard.js\n// module id = 1565\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar instances = require('../instances');\r\nvar updateGeometry = require('../update-geometry');\r\nvar updateScroll = require('../update-scroll');\r\n\r\nfunction bindMouseWheelHandler(element, i) {\r\n  var shouldPrevent = false;\r\n\r\n  function shouldPreventDefault(deltaX, deltaY) {\r\n    var scrollTop = element.scrollTop;\r\n    if (deltaX === 0) {\r\n      if (!i.scrollbarYActive) {\r\n        return false;\r\n      }\r\n      if ((scrollTop === 0 && deltaY > 0) || (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)) {\r\n        return !i.settings.wheelPropagation;\r\n      }\r\n    }\r\n\r\n    var scrollLeft = element.scrollLeft;\r\n    if (deltaY === 0) {\r\n      if (!i.scrollbarXActive) {\r\n        return false;\r\n      }\r\n      if ((scrollLeft === 0 && deltaX < 0) || (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)) {\r\n        return !i.settings.wheelPropagation;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function getDeltaFromEvent(e) {\r\n    var deltaX = e.deltaX;\r\n    var deltaY = -1 * e.deltaY;\r\n\r\n    if (typeof deltaX === \"undefined\" || typeof deltaY === \"undefined\") {\r\n      // OS X Safari\r\n      deltaX = -1 * e.wheelDeltaX / 6;\r\n      deltaY = e.wheelDeltaY / 6;\r\n    }\r\n\r\n    if (e.deltaMode && e.deltaMode === 1) {\r\n      // Firefox in deltaMode 1: Line scrolling\r\n      deltaX *= 10;\r\n      deltaY *= 10;\r\n    }\r\n\r\n    if (deltaX !== deltaX && deltaY !== deltaY/* NaN checks */) {\r\n      // IE in some mouse drivers\r\n      deltaX = 0;\r\n      deltaY = e.wheelDelta;\r\n    }\r\n\r\n    if (e.shiftKey) {\r\n      // reverse axis with shift key\r\n      return [-deltaY, -deltaX];\r\n    }\r\n    return [deltaX, deltaY];\r\n  }\r\n\r\n  function shouldBeConsumedByChild(deltaX, deltaY) {\r\n    var child = element.querySelector('textarea:hover, select[multiple]:hover, .ps-child:hover');\r\n    if (child) {\r\n      if (child.className.match(/ps-must-propagate/)) {\r\n        // force consumption by child\r\n        return true;\r\n      }\r\n      if (!window.getComputedStyle(child).overflow.match(/(scroll|auto)/)) {\r\n        // if not scrollable\r\n        return false;\r\n      }\r\n\r\n\r\n\r\n      var maxScrollTop = child.scrollHeight - child.clientHeight;\r\n      if (maxScrollTop > 0) {\r\n        if (!(child.scrollTop === 0 && deltaY > 0) && !(child.scrollTop === maxScrollTop && deltaY < 0)) {\r\n          return true;\r\n        }\r\n      }\r\n      var maxScrollLeft = child.scrollLeft - child.clientWidth;\r\n      if (maxScrollLeft > 0) {\r\n        if (!(child.scrollLeft === 0 && deltaX < 0) && !(child.scrollLeft === maxScrollLeft && deltaX > 0)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function mousewheelHandler(e) {\r\n    var delta = getDeltaFromEvent(e);\r\n\r\n    var deltaX = delta[0];\r\n    var deltaY = delta[1];\r\n\r\n    if (shouldBeConsumedByChild(deltaX, deltaY)) {\r\n      return;\r\n    }\r\n\r\n    shouldPrevent = false;\r\n    if (!i.settings.useBothWheelAxes) {\r\n      // deltaX will only be used for horizontal scrolling and deltaY will\r\n      // only be used for vertical scrolling - this is the default\r\n      updateScroll(element, 'top', element.scrollTop - (deltaY * i.settings.wheelSpeed));\r\n      updateScroll(element, 'left', element.scrollLeft + (deltaX * i.settings.wheelSpeed));\r\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\r\n      // only vertical scrollbar is active and useBothWheelAxes option is\r\n      // active, so let's scroll vertical bar using both mouse wheel axes\r\n      if (deltaY) {\r\n        updateScroll(element, 'top', element.scrollTop - (deltaY * i.settings.wheelSpeed));\r\n      } else {\r\n        updateScroll(element, 'top', element.scrollTop + (deltaX * i.settings.wheelSpeed));\r\n      }\r\n      shouldPrevent = true;\r\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\r\n      // useBothWheelAxes and only horizontal bar is active, so use both\r\n      // wheel axes for horizontal bar\r\n      if (deltaX) {\r\n        updateScroll(element, 'left', element.scrollLeft + (deltaX * i.settings.wheelSpeed));\r\n      } else {\r\n        updateScroll(element, 'left', element.scrollLeft - (deltaY * i.settings.wheelSpeed));\r\n      }\r\n      shouldPrevent = true;\r\n    }\r\n\r\n    updateGeometry(element);\r\n\r\n    shouldPrevent = (shouldPrevent || shouldPreventDefault(deltaX, deltaY));\r\n    if (shouldPrevent) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  if (typeof window.onwheel !== \"undefined\") {\r\n    i.event.bind(element, 'wheel', mousewheelHandler);\r\n  } else if (typeof window.onmousewheel !== \"undefined\") {\r\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\r\n  }\r\n}\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n  bindMouseWheelHandler(element, i);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/handler/mouse-wheel.js\n// module id = 1566\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar _ = require('../../lib/helper');\r\nvar instances = require('../instances');\r\nvar updateGeometry = require('../update-geometry');\r\nvar updateScroll = require('../update-scroll');\r\n\r\nfunction bindTouchHandler(element, i, supportsTouch, supportsIePointer) {\r\n  function shouldPreventDefault(deltaX, deltaY) {\r\n    var scrollTop = element.scrollTop;\r\n    var scrollLeft = element.scrollLeft;\r\n    var magnitudeX = Math.abs(deltaX);\r\n    var magnitudeY = Math.abs(deltaY);\r\n\r\n    if (magnitudeY > magnitudeX) {\r\n      // user is perhaps trying to swipe up/down the page\r\n\r\n      if (((deltaY < 0) && (scrollTop === i.contentHeight - i.containerHeight)) ||\r\n          ((deltaY > 0) && (scrollTop === 0))) {\r\n        return !i.settings.swipePropagation;\r\n      }\r\n    } else if (magnitudeX > magnitudeY) {\r\n      // user is perhaps trying to swipe left/right across the page\r\n\r\n      if (((deltaX < 0) && (scrollLeft === i.contentWidth - i.containerWidth)) ||\r\n          ((deltaX > 0) && (scrollLeft === 0))) {\r\n        return !i.settings.swipePropagation;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function applyTouchMove(differenceX, differenceY) {\r\n    updateScroll(element, 'top', element.scrollTop - differenceY);\r\n    updateScroll(element, 'left', element.scrollLeft - differenceX);\r\n\r\n    updateGeometry(element);\r\n  }\r\n\r\n  var startOffset = {};\r\n  var startTime = 0;\r\n  var speed = {};\r\n  var easingLoop = null;\r\n  var inGlobalTouch = false;\r\n  var inLocalTouch = false;\r\n\r\n  function globalTouchStart() {\r\n    inGlobalTouch = true;\r\n  }\r\n  function globalTouchEnd() {\r\n    inGlobalTouch = false;\r\n  }\r\n\r\n  function getTouch(e) {\r\n    if (e.targetTouches) {\r\n      return e.targetTouches[0];\r\n    } else {\r\n      // Maybe IE pointer\r\n      return e;\r\n    }\r\n  }\r\n  function shouldHandle(e) {\r\n    if (e.targetTouches && e.targetTouches.length === 1) {\r\n      return true;\r\n    }\r\n    if (e.pointerType && e.pointerType !== 'mouse' && e.pointerType !== e.MSPOINTER_TYPE_MOUSE) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  function touchStart(e) {\r\n    if (shouldHandle(e)) {\r\n      inLocalTouch = true;\r\n\r\n      var touch = getTouch(e);\r\n\r\n      startOffset.pageX = touch.pageX;\r\n      startOffset.pageY = touch.pageY;\r\n\r\n      startTime = (new Date()).getTime();\r\n\r\n      if (easingLoop !== null) {\r\n        clearInterval(easingLoop);\r\n      }\r\n\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n  function touchMove(e) {\r\n    if (!inLocalTouch && i.settings.swipePropagation) {\r\n      touchStart(e);\r\n    }\r\n    if (!inGlobalTouch && inLocalTouch && shouldHandle(e)) {\r\n      var touch = getTouch(e);\r\n\r\n      var currentOffset = {pageX: touch.pageX, pageY: touch.pageY};\r\n\r\n      var differenceX = currentOffset.pageX - startOffset.pageX;\r\n      var differenceY = currentOffset.pageY - startOffset.pageY;\r\n\r\n      applyTouchMove(differenceX, differenceY);\r\n      startOffset = currentOffset;\r\n\r\n      var currentTime = (new Date()).getTime();\r\n\r\n      var timeGap = currentTime - startTime;\r\n      if (timeGap > 0) {\r\n        speed.x = differenceX / timeGap;\r\n        speed.y = differenceY / timeGap;\r\n        startTime = currentTime;\r\n      }\r\n\r\n      if (shouldPreventDefault(differenceX, differenceY)) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  function touchEnd() {\r\n    if (!inGlobalTouch && inLocalTouch) {\r\n      inLocalTouch = false;\r\n\r\n      clearInterval(easingLoop);\r\n      easingLoop = setInterval(function () {\r\n        if (!instances.get(element)) {\r\n          clearInterval(easingLoop);\r\n          return;\r\n        }\r\n\r\n        if (!speed.x && !speed.y) {\r\n          clearInterval(easingLoop);\r\n          return;\r\n        }\r\n\r\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\r\n          clearInterval(easingLoop);\r\n          return;\r\n        }\r\n\r\n        applyTouchMove(speed.x * 30, speed.y * 30);\r\n\r\n        speed.x *= 0.8;\r\n        speed.y *= 0.8;\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  if (supportsTouch) {\r\n    i.event.bind(window, 'touchstart', globalTouchStart);\r\n    i.event.bind(window, 'touchend', globalTouchEnd);\r\n    i.event.bind(element, 'touchstart', touchStart);\r\n    i.event.bind(element, 'touchmove', touchMove);\r\n    i.event.bind(element, 'touchend', touchEnd);\r\n  } else if (supportsIePointer) {\r\n    if (window.PointerEvent) {\r\n      i.event.bind(window, 'pointerdown', globalTouchStart);\r\n      i.event.bind(window, 'pointerup', globalTouchEnd);\r\n      i.event.bind(element, 'pointerdown', touchStart);\r\n      i.event.bind(element, 'pointermove', touchMove);\r\n      i.event.bind(element, 'pointerup', touchEnd);\r\n    } else if (window.MSPointerEvent) {\r\n      i.event.bind(window, 'MSPointerDown', globalTouchStart);\r\n      i.event.bind(window, 'MSPointerUp', globalTouchEnd);\r\n      i.event.bind(element, 'MSPointerDown', touchStart);\r\n      i.event.bind(element, 'MSPointerMove', touchMove);\r\n      i.event.bind(element, 'MSPointerUp', touchEnd);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = function (element) {\r\n  if (!_.env.supportsTouch && !_.env.supportsIePointer) {\r\n    return;\r\n  }\r\n\r\n  var i = instances.get(element);\r\n  bindTouchHandler(element, i, _.env.supportsTouch, _.env.supportsIePointer);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/handler/touch.js\n// module id = 1567\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar _ = require('../../lib/helper');\r\nvar instances = require('../instances');\r\nvar updateGeometry = require('../update-geometry');\r\nvar updateScroll = require('../update-scroll');\r\n\r\nfunction bindSelectionHandler(element, i) {\r\n  function getRangeNode() {\r\n    var selection = window.getSelection ? window.getSelection() :\r\n                    document.getSelection ? document.getSelection() : '';\r\n    if (selection.toString().length === 0) {\r\n      return null;\r\n    } else {\r\n      return selection.getRangeAt(0).commonAncestorContainer;\r\n    }\r\n  }\r\n\r\n  var scrollingLoop = null;\r\n  var scrollDiff = {top: 0, left: 0};\r\n  function startScrolling() {\r\n    if (!scrollingLoop) {\r\n      scrollingLoop = setInterval(function () {\r\n        if (!instances.get(element)) {\r\n          clearInterval(scrollingLoop);\r\n          return;\r\n        }\r\n\r\n        updateScroll(element, 'top', element.scrollTop + scrollDiff.top);\r\n        updateScroll(element, 'left', element.scrollLeft + scrollDiff.left);\r\n        updateGeometry(element);\r\n      }, 50); // every .1 sec\r\n    }\r\n  }\r\n  function stopScrolling() {\r\n    if (scrollingLoop) {\r\n      clearInterval(scrollingLoop);\r\n      scrollingLoop = null;\r\n    }\r\n    _.stopScrolling(element);\r\n  }\r\n\r\n  var isSelected = false;\r\n  i.event.bind(i.ownerDocument, 'selectionchange', function () {\r\n    if (element.contains(getRangeNode())) {\r\n      isSelected = true;\r\n    } else {\r\n      isSelected = false;\r\n      stopScrolling();\r\n    }\r\n  });\r\n  i.event.bind(window, 'mouseup', function () {\r\n    if (isSelected) {\r\n      isSelected = false;\r\n      stopScrolling();\r\n    }\r\n  });\r\n  i.event.bind(window, 'keyup', function () {\r\n    if (isSelected) {\r\n      isSelected = false;\r\n      stopScrolling();\r\n    }\r\n  });\r\n\r\n  i.event.bind(window, 'mousemove', function (e) {\r\n    if (isSelected) {\r\n      var mousePosition = {x: e.pageX, y: e.pageY};\r\n      var containerGeometry = {\r\n        left: element.offsetLeft,\r\n        right: element.offsetLeft + element.offsetWidth,\r\n        top: element.offsetTop,\r\n        bottom: element.offsetTop + element.offsetHeight\r\n      };\r\n\r\n      if (mousePosition.x < containerGeometry.left + 3) {\r\n        scrollDiff.left = -5;\r\n        _.startScrolling(element, 'x');\r\n      } else if (mousePosition.x > containerGeometry.right - 3) {\r\n        scrollDiff.left = 5;\r\n        _.startScrolling(element, 'x');\r\n      } else {\r\n        scrollDiff.left = 0;\r\n      }\r\n\r\n      if (mousePosition.y < containerGeometry.top + 3) {\r\n        if (containerGeometry.top + 3 - mousePosition.y < 5) {\r\n          scrollDiff.top = -5;\r\n        } else {\r\n          scrollDiff.top = -20;\r\n        }\r\n        _.startScrolling(element, 'y');\r\n      } else if (mousePosition.y > containerGeometry.bottom - 3) {\r\n        if (mousePosition.y - containerGeometry.bottom + 3 < 5) {\r\n          scrollDiff.top = 5;\r\n        } else {\r\n          scrollDiff.top = 20;\r\n        }\r\n        _.startScrolling(element, 'y');\r\n      } else {\r\n        scrollDiff.top = 0;\r\n      }\r\n\r\n      if (scrollDiff.top === 0 && scrollDiff.left === 0) {\r\n        stopScrolling();\r\n      } else {\r\n        startScrolling();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n  bindSelectionHandler(element, i);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/handler/selection.js\n// module id = 1568\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar instances = require('../instances');\r\nvar updateGeometry = require('../update-geometry');\r\n\r\nfunction bindNativeScrollHandler(element, i) {\r\n  i.event.bind(element, 'scroll', function () {\r\n    updateGeometry(element);\r\n  });\r\n}\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n  bindNativeScrollHandler(element, i);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/handler/native-scroll.js\n// module id = 1569\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\r\n\r\nvar _ = require('../lib/helper');\r\nvar dom = require('../lib/dom');\r\nvar instances = require('./instances');\r\nvar updateGeometry = require('./update-geometry');\r\nvar updateScroll = require('./update-scroll');\r\n\r\nmodule.exports = function (element) {\r\n  var i = instances.get(element);\r\n\r\n  if (!i) {\r\n    return;\r\n  }\r\n\r\n  // Recalcuate negative scrollLeft adjustment\r\n  i.negativeScrollAdjustment = i.isNegativeScroll ? element.scrollWidth - element.clientWidth : 0;\r\n\r\n  // Recalculate rail margins\r\n  dom.css(i.scrollbarXRail, 'display', 'block');\r\n  dom.css(i.scrollbarYRail, 'display', 'block');\r\n  i.railXMarginWidth = _.toInt(dom.css(i.scrollbarXRail, 'marginLeft')) + _.toInt(dom.css(i.scrollbarXRail, 'marginRight'));\r\n  i.railYMarginHeight = _.toInt(dom.css(i.scrollbarYRail, 'marginTop')) + _.toInt(dom.css(i.scrollbarYRail, 'marginBottom'));\r\n\r\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\r\n  dom.css(i.scrollbarXRail, 'display', 'none');\r\n  dom.css(i.scrollbarYRail, 'display', 'none');\r\n\r\n  updateGeometry(element);\r\n\r\n  // Update top/left scroll to trigger events\r\n  updateScroll(element, 'top', element.scrollTop);\r\n  updateScroll(element, 'left', element.scrollLeft);\r\n\r\n  dom.css(i.scrollbarXRail, 'display', '');\r\n  dom.css(i.scrollbarYRail, 'display', '');\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/perfect-scrollbar/src/js/plugin/update.js\n// module id = 1570\n// module chunks = 1 8 9 10 11 12 13 14 15","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _TransitionGroup = require('./TransitionGroup');\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _CSSTransitionGroupChild = require('./CSSTransitionGroupChild');\n\nvar _CSSTransitionGroupChild2 = _interopRequireDefault(_CSSTransitionGroupChild);\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  transitionName: _PropTypes.nameShape.isRequired,\n\n  transitionAppear: _propTypes2.default.bool,\n  transitionEnter: _propTypes2.default.bool,\n  transitionLeave: _propTypes2.default.bool,\n  transitionAppearTimeout: (0, _PropTypes.transitionTimeout)('Appear'),\n  transitionEnterTimeout: (0, _PropTypes.transitionTimeout)('Enter'),\n  transitionLeaveTimeout: (0, _PropTypes.transitionTimeout)('Leave')\n};\n\nvar defaultProps = {\n  transitionAppear: false,\n  transitionEnter: true,\n  transitionLeave: true\n};\n\nvar CSSTransitionGroup = function (_React$Component) {\n  _inherits(CSSTransitionGroup, _React$Component);\n\n  function CSSTransitionGroup() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {\n      return _react2.default.createElement(_CSSTransitionGroupChild2.default, {\n        name: _this.props.transitionName,\n        appear: _this.props.transitionAppear,\n        enter: _this.props.transitionEnter,\n        leave: _this.props.transitionLeave,\n        appearTimeout: _this.props.transitionAppearTimeout,\n        enterTimeout: _this.props.transitionEnterTimeout,\n        leaveTimeout: _this.props.transitionLeaveTimeout\n      }, child);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // We need to provide this childFactory so that\n  // ReactCSSTransitionGroupChild can receive updates to name, enter, and\n  // leave while it is leaving.\n\n\n  CSSTransitionGroup.prototype.render = function render() {\n    return _react2.default.createElement(_TransitionGroup2.default, _extends({}, this.props, { childFactory: this._wrapChild }));\n  };\n\n  return CSSTransitionGroup;\n}(_react2.default.Component);\n\nCSSTransitionGroup.displayName = 'CSSTransitionGroup';\n\n\nCSSTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nCSSTransitionGroup.defaultProps = defaultProps;\n\nexports.default = CSSTransitionGroup;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-transition-group/CSSTransitionGroup.js\n// module id = 1571\n// module chunks = 1 8 9 10 11 12 13 14","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _chainFunction = require('chain-function');\n\nvar _chainFunction2 = _interopRequireDefault(_chainFunction);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _ChildMapping = require('./utils/ChildMapping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  component: _propTypes2.default.any,\n  childFactory: _propTypes2.default.func,\n  children: _propTypes2.default.node\n};\n\nvar defaultProps = {\n  component: 'span',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n\nvar TransitionGroup = function (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    _classCallCheck(this, TransitionGroup);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.performAppear = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillAppear) {\n        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));\n      } else {\n        _this._handleDoneAppearing(key, component);\n      }\n    };\n\n    _this._handleDoneAppearing = function (key, component) {\n      if (component.componentDidAppear) {\n        component.componentDidAppear();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully appeared. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performEnter = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillEnter) {\n        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));\n      } else {\n        _this._handleDoneEntering(key, component);\n      }\n    };\n\n    _this._handleDoneEntering = function (key, component) {\n      if (component.componentDidEnter) {\n        component.componentDidEnter();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully entered. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performLeave = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillLeave) {\n        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));\n      } else {\n        // Note that this is somewhat dangerous b/c it calls setState()\n        // again, effectively mutating the component before all the work\n        // is done.\n        _this._handleDoneLeaving(key, component);\n      }\n    };\n\n    _this._handleDoneLeaving = function (key, component) {\n      if (component.componentDidLeave) {\n        component.componentDidLeave();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n        // This entered again before it fully left. Add it again.\n        _this.keysToEnter.push(key);\n      } else {\n        _this.setState(function (state) {\n          var newChildren = _extends({}, state.children);\n          delete newChildren[key];\n          return { children: newChildren };\n        });\n      }\n    };\n\n    _this.childRefs = Object.create(null);\n\n    _this.state = {\n      children: (0, _ChildMapping.getChildMapping)(props.children)\n    };\n    return _this;\n  }\n\n  TransitionGroup.prototype.componentWillMount = function componentWillMount() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  };\n\n  TransitionGroup.prototype.componentDidMount = function componentDidMount() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key, this.childRefs[key]);\n      }\n    }\n  };\n\n  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)\n    });\n\n    for (var key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (var _key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);\n      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {\n        this.keysToLeave.push(_key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  };\n\n  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {\n    var _this2 = this;\n\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(function (key) {\n      return _this2.performEnter(key, _this2.childRefs[key]);\n    });\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(function (key) {\n      return _this2.performLeave(key, _this2.childRefs[key]);\n    });\n  };\n\n  TransitionGroup.prototype.render = function render() {\n    var _this3 = this;\n\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n\n    var _loop = function _loop(key) {\n      var child = _this3.state.children[key];\n      if (child) {\n        var isCallbackRef = typeof child.ref !== 'string';\n        var factoryChild = _this3.props.childFactory(child);\n        var ref = function ref(r) {\n          _this3.childRefs[key] = r;\n        };\n\n        process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;\n\n        // Always chaining the refs leads to problems when the childFactory\n        // wraps the child. The child ref callback gets called twice with the\n        // wrapper and the child. So we only need to chain the ref if the\n        // factoryChild is not different from child.\n        if (factoryChild === child && isCallbackRef) {\n          ref = (0, _chainFunction2.default)(child.ref, ref);\n        }\n\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(_react2.default.cloneElement(factoryChild, {\n          key: key,\n          ref: ref\n        }));\n      }\n    };\n\n    for (var key in this.state.children) {\n      _loop(key);\n    }\n\n    // Do not forward TransitionGroup props to primitive DOM nodes\n    var props = _extends({}, this.props);\n    delete props.transitionLeave;\n    delete props.transitionName;\n    delete props.transitionAppear;\n    delete props.transitionEnter;\n    delete props.childFactory;\n    delete props.transitionLeaveTimeout;\n    delete props.transitionEnterTimeout;\n    delete props.transitionAppearTimeout;\n    delete props.component;\n\n    return _react2.default.createElement(this.props.component, props, childrenToRender);\n  };\n\n  return TransitionGroup;\n}(_react2.default.Component);\n\nTransitionGroup.displayName = 'TransitionGroup';\n\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nexports.default = TransitionGroup;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-transition-group/TransitionGroup.js\n// module id = 1572\n// module chunks = 1 8 9 10 11 12 13 14","\nmodule.exports = function chain(){\n  var len = arguments.length\n  var args = [];\n\n  for (var i = 0; i < len; i++)\n    args[i] = arguments[i]\n\n  args = args.filter(function(fn){ return fn != null })\n\n  if (args.length === 0) return undefined\n  if (args.length === 1) return args[0]\n\n  return args.reduce(function(current, next){\n    return function chainedFunction() {\n      current.apply(this, arguments);\n      next.apply(this, arguments);\n    };\n  })\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chain-function/index.js\n// module id = 1573\n// module chunks = 1 8 9 10 11 12 13 14","'use strict';\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\n\nvar _react = require('react');\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children) {\n  if (!children) {\n    return children;\n  }\n  var result = {};\n  _react.Children.map(children, function (child) {\n    return child;\n  }).forEach(function (child) {\n    result[child.key] = child;\n  });\n  return result;\n}\n\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    if (next.hasOwnProperty(key)) {\n      return next[key];\n    }\n\n    return prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextKeysPending = {};\n\n  var pendingKeys = [];\n  for (var prevKey in prev) {\n    if (next.hasOwnProperty(prevKey)) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i = void 0;\n  var childMapping = {};\n  for (var nextKey in next) {\n    if (nextKeysPending.hasOwnProperty(nextKey)) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-transition-group/utils/ChildMapping.js\n// module id = 1574\n// module chunks = 1 8 9 10 11 12 13 14","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _addClass = require('dom-helpers/class/addClass');\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = require('dom-helpers/class/removeClass');\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _requestAnimationFrame = require('dom-helpers/util/requestAnimationFrame');\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _properties = require('dom-helpers/transition/properties');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar events = [];\nif (_properties.transitionEnd) events.push(_properties.transitionEnd);\nif (_properties.animationEnd) events.push(_properties.animationEnd);\n\nfunction addEndListener(node, listener) {\n  if (events.length) {\n    events.forEach(function (e) {\n      return node.addEventListener(e, listener, false);\n    });\n  } else {\n    setTimeout(listener, 0);\n  }\n\n  return function () {\n    if (!events.length) return;\n    events.forEach(function (e) {\n      return node.removeEventListener(e, listener, false);\n    });\n  };\n}\n\nvar propTypes = {\n  children: _propTypes2.default.node,\n  name: _PropTypes.nameShape.isRequired,\n\n  // Once we require timeouts to be specified, we can remove the\n  // boolean flags (appear etc.) and just accept a number\n  // or a bool for the timeout flags (appearTimeout etc.)\n  appear: _propTypes2.default.bool,\n  enter: _propTypes2.default.bool,\n  leave: _propTypes2.default.bool,\n  appearTimeout: _propTypes2.default.number,\n  enterTimeout: _propTypes2.default.number,\n  leaveTimeout: _propTypes2.default.number\n};\n\nvar CSSTransitionGroupChild = function (_React$Component) {\n  _inherits(CSSTransitionGroupChild, _React$Component);\n\n  function CSSTransitionGroupChild() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroupChild);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.componentWillAppear = function (done) {\n      if (_this.props.appear) {\n        _this.transition('appear', done, _this.props.appearTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillEnter = function (done) {\n      if (_this.props.enter) {\n        _this.transition('enter', done, _this.props.enterTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillLeave = function (done) {\n      if (_this.props.leave) {\n        _this.transition('leave', done, _this.props.leaveTimeout);\n      } else {\n        done();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {\n    this.classNameAndNodeQueue = [];\n    this.transitionTimeouts = [];\n  };\n\n  CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounted = true;\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.transitionTimeouts.forEach(function (timeout) {\n      clearTimeout(timeout);\n    });\n\n    this.classNameAndNodeQueue.length = 0;\n  };\n\n  CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {\n    var node = (0, _reactDom.findDOMNode)(this);\n\n    if (!node) {\n      if (finishCallback) {\n        finishCallback();\n      }\n      return;\n    }\n\n    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\n    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\n    var timer = null;\n    var removeListeners = void 0;\n\n    (0, _addClass2.default)(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClassAndNode(activeClassName, node);\n\n    // Clean-up the animation after the specified delay\n    var finish = function finish(e) {\n      if (e && e.target !== node) {\n        return;\n      }\n\n      clearTimeout(timer);\n      if (removeListeners) removeListeners();\n\n      (0, _removeClass2.default)(node, className);\n      (0, _removeClass2.default)(node, activeClassName);\n\n      if (removeListeners) removeListeners();\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      if (finishCallback) {\n        finishCallback();\n      }\n    };\n\n    if (timeout) {\n      timer = setTimeout(finish, timeout);\n      this.transitionTimeouts.push(timer);\n    } else if (_properties.transitionEnd) {\n      removeListeners = addEndListener(node, finish);\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.queueClassAndNode = function queueClassAndNode(className, node) {\n    var _this2 = this;\n\n    this.classNameAndNodeQueue.push({\n      className: className,\n      node: node\n    });\n\n    if (!this.rafHandle) {\n      this.rafHandle = (0, _requestAnimationFrame2.default)(function () {\n        return _this2.flushClassNameAndNodeQueue();\n      });\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.flushClassNameAndNodeQueue = function flushClassNameAndNodeQueue() {\n    if (!this.unmounted) {\n      this.classNameAndNodeQueue.forEach(function (obj) {\n        // This is for to force a repaint,\n        // which is necessary in order to transition styles when adding a class name.\n        /* eslint-disable no-unused-expressions */\n        obj.node.scrollTop;\n        /* eslint-enable no-unused-expressions */\n        (0, _addClass2.default)(obj.node, obj.className);\n      });\n    }\n    this.classNameAndNodeQueue.length = 0;\n    this.rafHandle = null;\n  };\n\n  CSSTransitionGroupChild.prototype.render = function render() {\n    var props = _extends({}, this.props);\n    delete props.name;\n    delete props.appear;\n    delete props.enter;\n    delete props.leave;\n    delete props.appearTimeout;\n    delete props.enterTimeout;\n    delete props.leaveTimeout;\n    delete props.children;\n    return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), props);\n  };\n\n  return CSSTransitionGroupChild;\n}(_react2.default.Component);\n\nCSSTransitionGroupChild.displayName = 'CSSTransitionGroupChild';\n\n\nCSSTransitionGroupChild.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\n\nexports.default = CSSTransitionGroupChild;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-transition-group/CSSTransitionGroupChild.js\n// module id = 1575\n// module chunks = 1 8 9 10 11 12 13 14","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = addClass;\n\nvar _hasClass = _interopRequireDefault(require(\"./hasClass\"));\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\n\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/class/addClass.js\n// module id = 1576\n// module chunks = 1 8 9 10 11 12 13 14","\"use strict\";\n\nexports.__esModule = true;\nexports.default = hasClass;\n\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\n\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/class/hasClass.js\n// module id = 1577\n// module chunks = 1 8 9 10 11 12 13 14","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/class/removeClass.js\n// module id = 1578\n// module chunks = 1 8 9 10 11 12 13 14","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inDOM = _interopRequireDefault(require(\"./inDOM\"));\n\nvar vendors = ['', 'webkit', 'moz', 'o', 'ms'];\nvar cancel = 'clearTimeout';\nvar raf = fallback;\nvar compatRaf;\n\nvar getKey = function getKey(vendor, k) {\n  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';\n};\n\nif (_inDOM.default) {\n  vendors.some(function (vendor) {\n    var rafKey = getKey(vendor, 'request');\n\n    if (rafKey in window) {\n      cancel = getKey(vendor, 'cancel');\n      return raf = function raf(cb) {\n        return window[rafKey](cb);\n      };\n    }\n  });\n}\n/* https://github.com/component/raf */\n\n\nvar prev = new Date().getTime();\n\nfunction fallback(fn) {\n  var curr = new Date().getTime(),\n      ms = Math.max(0, 16 - (curr - prev)),\n      req = setTimeout(fn, ms);\n  prev = curr;\n  return req;\n}\n\ncompatRaf = function compatRaf(cb) {\n  return raf(cb);\n};\n\ncompatRaf.cancel = function (id) {\n  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);\n};\n\nvar _default = compatRaf;\nexports.default = _default;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/util/requestAnimationFrame.js\n// module id = 1579\n// module chunks = 1 8 9 10 11 12 13 14","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = void 0;\n\nvar _inDOM = _interopRequireDefault(require(\"../util/inDOM\"));\n\nvar transform = 'transform';\nexports.transform = transform;\nvar prefix, transitionEnd, animationEnd;\nexports.animationEnd = animationEnd;\nexports.transitionEnd = transitionEnd;\nvar transitionProperty, transitionDuration, transitionTiming, transitionDelay;\nexports.transitionDelay = transitionDelay;\nexports.transitionTiming = transitionTiming;\nexports.transitionDuration = transitionDuration;\nexports.transitionProperty = transitionProperty;\nvar animationName, animationDuration, animationTiming, animationDelay;\nexports.animationDelay = animationDelay;\nexports.animationTiming = animationTiming;\nexports.animationDuration = animationDuration;\nexports.animationName = animationName;\n\nif (_inDOM.default) {\n  var _getTransitionPropert = getTransitionProperties();\n\n  prefix = _getTransitionPropert.prefix;\n  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;\n  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;\n  exports.transform = transform = prefix + \"-\" + transform;\n  exports.transitionProperty = transitionProperty = prefix + \"-transition-property\";\n  exports.transitionDuration = transitionDuration = prefix + \"-transition-duration\";\n  exports.transitionDelay = transitionDelay = prefix + \"-transition-delay\";\n  exports.transitionTiming = transitionTiming = prefix + \"-transition-timing-function\";\n  exports.animationName = animationName = prefix + \"-animation-name\";\n  exports.animationDuration = animationDuration = prefix + \"-animation-duration\";\n  exports.animationTiming = animationTiming = prefix + \"-animation-delay\";\n  exports.animationDelay = animationDelay = prefix + \"-animation-timing-function\";\n}\n\nvar _default = {\n  transform: transform,\n  end: transitionEnd,\n  property: transitionProperty,\n  timing: transitionTiming,\n  delay: transitionDelay,\n  duration: transitionDuration\n};\nexports.default = _default;\n\nfunction getTransitionProperties() {\n  var style = document.createElement('div').style;\n  var vendorMap = {\n    O: function O(e) {\n      return \"o\" + e.toLowerCase();\n    },\n    Moz: function Moz(e) {\n      return e.toLowerCase();\n    },\n    Webkit: function Webkit(e) {\n      return \"webkit\" + e;\n    },\n    ms: function ms(e) {\n      return \"MS\" + e;\n    }\n  };\n  var vendors = Object.keys(vendorMap);\n  var transitionEnd, animationEnd;\n  var prefix = '';\n\n  for (var i = 0; i < vendors.length; i++) {\n    var vendor = vendors[i];\n\n    if (vendor + \"TransitionProperty\" in style) {\n      prefix = \"-\" + vendor.toLowerCase();\n      transitionEnd = vendorMap[vendor]('TransitionEnd');\n      animationEnd = vendorMap[vendor]('AnimationEnd');\n      break;\n    }\n  }\n\n  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';\n  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';\n  style = null;\n  return {\n    animationEnd: animationEnd,\n    transitionEnd: transitionEnd,\n    prefix: prefix\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/transition/properties.js\n// module id = 1580\n// module chunks = 1 8 9 10 11 12 13 14","import React from \"react\";\r\nimport Translate from \"react-translate-component\";\r\nimport {saveAs} from \"file-saver\";\r\nimport Operation from \"../Blockchain/Operation\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport utils from \"common/utils\";\r\nimport {ChainTypes as grapheneChainTypes} from \"seerjs/es\";\r\nimport TransitionWrapper from \"../Utility/TransitionWrapper\";\r\nimport ps from \"perfect-scrollbar\";\r\nimport counterpart from \"counterpart\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport cnames from \"classnames\";\r\n\r\nconst {operations} = grapheneChainTypes;\r\nconst alignLeft = {textAlign: \"left\"};\r\nconst alignRight = {textAlign: \"right\"};\r\n\r\nfunction compareOps(b, a) {\r\n    if (a.block_num === b.block_num) {\r\n        return a.virtual_op - b.virtual_op;\r\n    } else {\r\n        return a.block_num - b.block_num;\r\n    }\r\n}\r\n\r\nfunction textContent(n) {\r\n    return n ? `\"${n.textContent.replace(/[\\s\\t\\r\\n]/gi, \" \")}\"` : \"\";\r\n}\r\n\r\nclass RecentTransactions extends React.Component {\r\n\r\n    static propTypes = {\r\n        accountsList: ChainTypes.ChainAccountsList.isRequired,\r\n        compactView: React.PropTypes.bool,\r\n        limit: React.PropTypes.number,\r\n        maxHeight: React.PropTypes.number,\r\n        fullHeight: React.PropTypes.bool,\r\n        showFilters: React.PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        limit: 25,\r\n        maxHeight: 500,\r\n        fullHeight: false,\r\n        showFilters: false\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            limit: props.limit || 20,\r\n            csvExport: false,\r\n            headerHeight: 85,\r\n            filter: \"all\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.fullHeight) {\r\n            let t = this.refs.transactions;\r\n            ps.initialize(t);\r\n\r\n            this._setHeaderHeight();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _setHeaderHeight() {\r\n        let height = this.refs.header.offsetHeight;\r\n\r\n        if (height !== this.state.headerHeight) {\r\n            this.setState({\r\n                headerHeight: height\r\n            });\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(!utils.are_equal_shallow(this.props.accountsList, nextProps.accountsList)) return true;\r\n        if(this.props.maxHeight !== nextProps.maxHeight) return true;\r\n        if(this.state.headerHeight !== nextState.headerHeight) return true;\r\n        if(this.state.filter !== nextState.filter) return true;\r\n        if (this.props.customFilter) {\r\n            if(!utils.are_equal_shallow(this.props.customFilter.fields, nextProps.customFilter.fields) ||\r\n                !utils.are_equal_shallow(this.props.customFilter.values, nextProps.customFilter.values)) {\r\n                return true;\r\n            };\r\n        }\r\n\r\n        if(this.props.maxHeight !== nextProps.maxHeight) return true;\r\n        if (nextState.limit !== this.state.limit || nextState.csvExport !== this.state.csvExport) return true;\r\n        for(let key = 0; key < nextProps.accountsList.length; ++key) {\r\n            let npa = nextProps.accountsList[key];\r\n            let nsa = this.props.accountsList[key];\r\n            if(npa && nsa && (npa.get(\"history\") !== nsa.get(\"history\"))) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.csvExport) {\r\n            this.state.csvExport = false;\r\n            const csv_export_container = document.getElementById(\"csv_export_container\");\r\n            const nodes = csv_export_container.childNodes;\r\n            let csv = \"\";\r\n            for (const n of nodes) {\r\n                //console.log(\"-- RecentTransactions._downloadCSV -->\", n);\r\n                const cn = n.childNodes;\r\n                if (csv !== \"\") csv += \"\\n\";\r\n                csv += [textContent(cn[0]), textContent(cn[1]), textContent(cn[2]), textContent(cn[3])].join(\",\");\r\n            }\r\n            var blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\r\n            var today = new Date();\r\n            saveAs(blob, ('btshist-' + today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2) + '-' + ('0' + today.getHours()).slice(-2) + ('0' + today.getMinutes()).slice(-2) + '.csv'));\r\n        }\r\n\r\n        if (!this.props.fullHeight) {\r\n            let t = this.refs.transactions;\r\n            ps.update(t);\r\n\r\n            this._setHeaderHeight();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    _onIncreaseLimit() {\r\n        this.setState({\r\n            limit: this.state.limit + 30\r\n        });\r\n    }\r\n\r\n    _getHistory(accountsList, filterOp, customFilter) {\r\n        let history = [];\r\n        let seen_ops = new Set();\r\n        for (let account of accountsList) {\r\n            if(account) {\r\n                let h = account.get(\"history\");\r\n                if (h) history = history.concat(h.toJS().filter(op => !seen_ops.has(op.id) && seen_ops.add(op.id)));\r\n            }\r\n        }\r\n        if (filterOp) {\r\n            history = history.filter(a => {\r\n                return a.op[0] === operations[filterOp];\r\n            });\r\n        }\r\n\r\n        if (customFilter) {\r\n            history = history.filter(a => {\r\n                let finalValue = customFilter.fields.reduce((final, filter) => {\r\n                    switch (filter) {\r\n                        case \"asset_id\":\r\n                            return final && a.op[1][\"amount\"][filter] === customFilter.values[filter];\r\n                            break;\r\n                        default:\r\n                            return final && a.op[1][filter] === customFilter.values[filter];\r\n                            break;\r\n                    }\r\n                }, true)\r\n                return finalValue;\r\n            });\r\n        }\r\n        return history;\r\n    }\r\n\r\n    _downloadCSV() {\r\n        this.setState({csvExport: true});\r\n    }\r\n\r\n    _onChangeFilter(e) {\r\n        this.setState({\r\n            filter: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {accountsList, compactView, filter, customFilter, style, maxHeight} = this.props;\r\n        let {limit, headerHeight} = this.state;\r\n        let current_account_id = accountsList.length === 1 && accountsList[0] ? accountsList[0].get(\"id\") : null;\r\n        let history = this._getHistory(accountsList, this.props.showFilters && this.state.filter !== \"all\" ?  this.state.filter : filter, customFilter).sort(compareOps);\r\n        let historyCount = history.length;\r\n\r\n        style = style ? style : {};\r\n        style.width = \"100%\";\r\n        style.height = \"100%\";\r\n\r\n        let options = null;\r\n        if (true || this.props.showFilters) {\r\n            options = [\"all\", \"transfer\", \"limit_order_create\", \"limit_order_cancel\", \"fill_order\", \"account_create\", \"account_update\", \"asset_create\",\r\n            \"witness_withdraw_pay\", \"vesting_balance_withdraw\"]\r\n            .map(type => {\r\n                return <option value={type} key={type}>{counterpart.translate(\"transaction.trxTypes.\" + type)}</option>;\r\n            });\r\n        }\r\n\r\n        let display_history = history.length ?\r\n            history.slice(0, limit)\r\n            .map(o => {\r\n                return (\r\n                    <Operation\r\n                        style={alignLeft}\r\n                        key={o.id}\r\n                        op={o.op}\r\n                        result={o.result}\r\n                        block={o.block_num}\r\n                        current={current_account_id}\r\n                        hideFee\r\n                        inverted={false}\r\n                        hideOpLabel={compactView}\r\n                    />\r\n                );\r\n            }) : [<tr key=\"no_recent\"><td colSpan={compactView ? \"2\" : \"3\"}><Translate content=\"operation.no_recent\" /></td></tr>];\r\n        display_history.push(\r\n            <tr className=\"total-value\" key=\"total_value\">\r\n                <td className=\"column-hide-tiny\">\r\n                </td>\r\n                <td style={alignRight}>\r\n                    {historyCount > 0 ?\r\n                    <span>\r\n                        <a\r\n                            className=\"inline-block\"\r\n                            onClick={this._downloadCSV.bind(this)}\r\n                            data-tip={counterpart.translate(\"transaction.csv_tip\")}\r\n                            data-place=\"bottom\"\r\n                        >\r\n                            <Icon name=\"excel\" className=\"icon-14px\" />\r\n                        </a>\r\n\r\n                    </span> : null}\r\n                </td>\r\n                <td style={{textAlign: \"center\"}}>\r\n                    &nbsp;{this.props.showMore && historyCount > this.props.limit || 20 && limit < historyCount ? (\r\n                        <a onClick={this._onIncreaseLimit.bind(this)}>\r\n                            <Icon name=\"chevron-down\" className=\"icon-14px\" />\r\n                        </a>\r\n                    ) : null}\r\n                </td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"recent-transactions no-overflow\" style={style}>\r\n                <div className=\"generic-bordered-box\">\r\n                    {this.props.dashboard ? null : <div ref=\"header\">\r\n                        <div className=\"block-content-header\">\r\n                            <span>{this.props.title ? this.props.title : <Translate content=\"account.recent\" />}</span>\r\n                        </div>\r\n                    </div>}\r\n                    <div className=\"header-selector\">\r\n                        <div className=\"selector\">\r\n                            <div className={cnames(\"inline-block\")}>\r\n                                {this.props.showFilters ? (\r\n                                    <select data-place=\"left\" data-tip={counterpart.translate(\"tooltip.filter_ops\")} style={{paddingTop: 5, width: \"auto\"}} className=\"bts-select no-margin\" value={this.state.filter} onChange={this._onChangeFilter.bind(this)}>{options}</select>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"box-content grid-block no-margin\"\r\n                        style={!this.props.fullHeight ? {\r\n                            maxHeight: maxHeight - headerHeight\r\n                        } : null}\r\n                        ref=\"transactions\">\r\n                        \r\n\r\n                        <table className={\"table table-striped \" + (compactView ? \"compact\" : \"\") + (this.props.dashboard ? \" dashboard-table table-hover\" : \"\")}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"column-hide-tiny\" style={{...alignLeft,paddingLeft:\"20px\"}}><Translate content=\"account.transactions.type\" /></th>\r\n                                    <th style={alignLeft}><Translate content=\"account.transactions.info\" /></th>\r\n                                    <th style={alignLeft}><Translate content=\"account.transactions.time\" /></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <TransitionWrapper\r\n                                component=\"tbody\"\r\n                                transitionName=\"newrow\"\r\n                            >\r\n                                {display_history}\r\n                            </TransitionWrapper>\r\n                        </table>\r\n                    </div>\r\n                {\r\n                    historyCount > 0 && this.state.csvExport &&\r\n                    <div id=\"csv_export_container\" style={{display: \"none\"}}>\r\n                        <div>\r\n                            <div>DATE</div>\r\n                            <div>OPERATION</div>\r\n                            <div>MEMO</div>\r\n                            <div>AMOUNT</div>\r\n                        </div>\r\n                        {\r\n                            history.map(o => {\r\n                                return (\r\n                                    <Operation\r\n                                        key={o.id}\r\n                                        op={o.op}\r\n                                        result={o.result}\r\n                                        block={o.block_num}\r\n                                        inverted={false}\r\n                                        csvExportMode\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nRecentTransactions = BindToChainState(RecentTransactions, {keep_updating: true});\r\n\r\nclass TransactionWrapper extends React.Component {\r\n\r\n    static propTypes = {\r\n        asset: ChainTypes.ChainAsset.isRequired,\r\n        to: ChainTypes.ChainAccount.isRequired,\r\n        fromAccount: ChainTypes.ChainAccount.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        asset: \"1.3.0\"\r\n    };\r\n\r\n    render() {\r\n        return <span className=\"wrapper\">{this.props.children(this.props)}</span>;\r\n    }\r\n}\r\nTransactionWrapper = BindToChainState(TransactionWrapper);\r\n\r\nexport {RecentTransactions, TransactionWrapper};\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Account/RecentTransactions.jsx","import React from \"react\";\r\nimport FormattedAsset from \"./FormattedAsset\";\r\nimport ChainTypes from \"./ChainTypes\";\r\nimport BindToChainState from \"./BindToChainState\";\r\nimport utils from \"common/utils\";\r\nimport { connect } from \"alt-react\";\r\nimport MarketsStore from \"stores/MarketsStore\";\r\nimport Translate from \"react-translate-component\";\r\nimport counterpart from \"counterpart\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {MarketStatsCheck} from \"../Utility/EquivalentPrice\";\r\n\r\n/**\r\n *  Given an asset amount, displays the equivalent value in baseAsset if possible\r\n *\r\n *  Expects three properties\r\n *  -'toAsset' which should be a asset id\r\n *  -'fromAsset' which is the asset id of the original asset amount\r\n *  -'amount' which is the amount to convert\r\n *  -'fullPrecision' boolean to tell if the amount uses the full precision of the asset\r\n */\r\n\r\nclass ValueComponent extends MarketStatsCheck {\r\n\r\n    static propTypes = {\r\n        toAsset: ChainTypes.ChainAsset.isRequired,\r\n        fromAsset: ChainTypes.ChainAsset.isRequired,\r\n        coreAsset: ChainTypes.ChainAsset.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        toAsset: \"1.3.0\",\r\n        fullPrecision: true,\r\n        noDecimals: false,\r\n        fullDecimals: false,\r\n        hide_asset: false,\r\n        coreAsset: \"1.3.0\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        ReactTooltip.rebuild();\r\n    }\r\n\r\n    shouldComponentUpdate(np) {\r\n        return (\r\n            super.shouldComponentUpdate(np) ||\r\n            np.toAsset !== this.props.toAsset ||\r\n            np.fromAsset !== this.props.fromAsset ||\r\n            np.amount !== this.props.amount\r\n        );\r\n    }\r\n\r\n    getValue() {\r\n        let {amount, toAsset, fromAsset, fullPrecision, marketStats, coreAsset} = this.props;\r\n        let toStats, fromStats;\r\n\r\n        let toID = toAsset.get(\"id\");\r\n        let toSymbol = toAsset.get(\"symbol\");\r\n        let fromID = fromAsset.get(\"id\");\r\n        let fromSymbol = fromAsset.get(\"symbol\");\r\n\r\n        if (!fullPrecision) {\r\n            amount = utils.get_asset_amount(amount, fromAsset);\r\n        }\r\n\r\n        if (coreAsset && marketStats) {\r\n            let coreSymbol = coreAsset.get(\"symbol\");\r\n            toStats = marketStats.get(toSymbol + \"_\" + coreSymbol);\r\n            fromStats = marketStats.get(fromSymbol + \"_\" + coreSymbol);\r\n        }\r\n\r\n        let price = utils.convertPrice(fromStats && fromStats.close ? fromStats.close :\r\n                                        fromID === \"1.3.0\" || fromAsset.has(\"bitasset\") ? fromAsset : null,\r\n                                        toStats && toStats.close ? toStats.close :\r\n                                        (toID === \"1.3.0\" || toAsset.has(\"bitasset\")) ? toAsset : null,\r\n                                        fromID,\r\n                                        toID);\r\n\r\n        let eqValue = price ? utils.convertValue(price, amount, fromAsset, toAsset) : null;\r\n        return eqValue;\r\n    }\r\n\r\n    render() {\r\n        let {amount, toAsset, fromAsset, fullPrecision} = this.props;\r\n\r\n        let toID = toAsset.get(\"id\");\r\n        let toSymbol = toAsset.get(\"symbol\");\r\n\r\n        if (!fullPrecision) {\r\n            amount = utils.get_asset_amount(amount, fromAsset);\r\n        }\r\n\r\n        let eqValue = this.getValue();\r\n\r\n        if (!eqValue && eqValue !== 0) {\r\n            return <div className=\"tooltip inline-block\" data-place=\"bottom\" data-tip={counterpart.translate(\"tooltip.no_price\")} style={{fontSize: \"0.9rem\"}}><Translate content=\"account.no_price\" /></div>;\r\n        }\r\n\r\n        return <FormattedAsset hide_asset={this.props.hide_asset} noPrefix amount={eqValue} asset={toID} decimalOffset={toSymbol.indexOf(\"BTC\") !== -1 ? 4 : this.props.fullDecimals ? 0 : this.props.noDecimals ? toAsset.get(\"precision\") : (toAsset.get(\"precision\") - 2)}/>;\r\n    }\r\n}\r\nValueComponent = BindToChainState(ValueComponent, {keep_updating: true});\r\n\r\nclass EquivalentValueComponent extends React.Component {\r\n    render() {\r\n        let {refCallback, ...others} = this.props;\r\n\r\n        return <ValueComponent {...others} ref={refCallback} />;\r\n    }\r\n}\r\n\r\nEquivalentValueComponent = connect(EquivalentValueComponent, {\r\n    listenTo() {\r\n        return [MarketsStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            marketStats: MarketsStore.getState().allMarketStats\r\n        };\r\n    }\r\n});\r\n\r\nclass BalanceValueComponent extends React.Component {\r\n\r\n    static propTypes = {\r\n        balance: ChainTypes.ChainObject.isRequired\r\n    }\r\n\r\n    render() {\r\n        const {balance} = this.props;\r\n        const isBalanceObject = !!balance.getIn([\"balance\", \"amount\"]);\r\n\r\n        let amount = Number(isBalanceObject ? balance.getIn([\"balance\", \"amount\"]) : balance.get(\"balance\"));\r\n        let fromAsset = isBalanceObject ? balance.getIn([\"balance\", \"asset_id\"]) : balance.get(\"asset_type\");\r\n        if (isNaN(amount)) return <span>--</span>;\r\n        return <EquivalentValueComponent refCallback={this.props.refCallback} hide_asset={this.props.hide_asset} amount={amount} fromAsset={fromAsset} noDecimals={true} toAsset={this.props.toAsset}/>;\r\n    }\r\n}\r\nBalanceValueComponent = BindToChainState(BalanceValueComponent, {keep_updating: true});\r\nexport {EquivalentValueComponent, BalanceValueComponent};\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/EquivalentValueComponent.jsx","import React from \"react\";\r\nimport utils from \"common/utils\";\r\n\r\nclass PriceText extends React.Component {\r\n\r\n    render() {\r\n        let {price, preFormattedPrice, quote, base, component} = this.props;\r\n\r\n        let formattedPrice = preFormattedPrice ? preFormattedPrice : utils.price_to_text(price, quote, base);\r\n        \r\n        if (formattedPrice.full >= 1) {\r\n            return (\r\n                <span>\r\n                    <span className=\"price-integer\">{formattedPrice.int}.</span>\r\n                    {formattedPrice.dec ? <span className=\"price-integer\">{formattedPrice.dec}</span> : null}\r\n                    {formattedPrice.trailing ? <span className=\"price-decimal\">{formattedPrice.trailing}</span> : null}\r\n                </span>\r\n            )\r\n        } else if (formattedPrice.full >= 0.1) {\r\n            return (\r\n                <span>\r\n                    <span className=\"price-decimal\">{formattedPrice.int}.</span>\r\n                    {formattedPrice.dec ? <span className=\"price-integer\">{formattedPrice.dec}</span> : null}\r\n                    {formattedPrice.trailing ? <span className=\"price-decimal\">{formattedPrice.trailing}</span> : null}\r\n                </span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span>\r\n                    <span className=\"price-decimal\">{formattedPrice.int}.</span>\r\n                    {formattedPrice.dec ? <span className=\"price-decimal\">{formattedPrice.dec}</span> : null}\r\n                    {formattedPrice.trailing ? <span className=\"price-integer\">{formattedPrice.trailing}</span> : null}\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default PriceText;\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/PriceText.jsx","module.exports = function browserLocale () {\n  var lang\n\n  if (navigator.languages && navigator.languages.length) {\n    // latest versions of Chrome and Firefox set this correctly\n    lang = navigator.languages[0]\n  } else if (navigator.userLanguage) {\n    // IE only\n    lang = navigator.userLanguage\n  } else {\n    // latest versions of Chrome, Firefox, and Safari set this correctly\n    lang = navigator.language\n  }\n\n  return lang\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/browser-locale/index.js\n// module id = 1611\n// module chunks = 9 11","import React from \"react\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport cnames from \"classnames\";\r\nimport MarketsActions from \"actions/MarketsActions\";\r\nimport MarketsStore from \"stores/MarketsStore\";\r\nimport { connect } from \"alt-react\";\r\nimport utils from \"common/utils\";\r\nimport FormattedPrice from \"./FormattedPrice\";\r\nimport marketUtils from \"common/market_utils\";\r\n\r\nclass MarketStats extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.statsInterval = null;\r\n        const {marketID, first, second} = marketUtils.getMarketID(props.base, props.quote);\r\n        this.state = {\r\n            marketID,\r\n            first,\r\n            second\r\n        };\r\n    }\r\n\r\n    _checkStats(newStats = {close: {}}, oldStats = {close: {}}) {\r\n        return (\r\n            newStats.volumeBase !== oldStats.volumeBase ||\r\n            !utils.are_equal_shallow(newStats.close && newStats.close.base, oldStats.close && oldStats.close.base) ||\r\n            !utils.are_equal_shallow(newStats.close && newStats.close.quote, oldStats.close && oldStats.close.quote)\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(np) {\r\n        return (\r\n            this._checkStats(np.allMarketStats.get(this.state.marketID), this.props.allMarketStats.get(this.state.marketID)) ||\r\n            np.base.get(\"id\") !== this.props.base.get(\"id\") ||\r\n            np.quote.get(\"id\") !== this.props.quote.get(\"id\")\r\n        );\r\n    }\r\n\r\n    componentWillMount() {\r\n        MarketsActions.getMarketStats.defer(this.state.second, this.state.first);\r\n        this.statsChecked = new Date();\r\n        this.statsInterval = setInterval(MarketsActions.getMarketStats.bind(this, this.state.second, this.state.first), 35 * 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.statsInterval);\r\n    }\r\n}\r\n\r\nclass MarketPriceInner extends MarketStats {\r\n\r\n    static propTypes = {\r\n        quote: ChainTypes.ChainAsset.isRequired,\r\n        base: ChainTypes.ChainAsset.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate(np) {\r\n        return (\r\n            super.shouldComponentUpdate(np)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let {allMarketStats} = this.props;\r\n        const {marketID} = this.state;\r\n        const marketStats = allMarketStats.get(marketID);\r\n        let price = marketStats && marketStats.price ? marketStats.price : null;\r\n        // if (!price && marketStatsInverted && marketStatsInverted.price) {\r\n        //     price = marketStatsInverted.price.invert();\r\n        // }\r\n\r\n        return (\r\n            <span className={cnames(\"\", this.props.className)}>\r\n                {price ?\r\n                    <FormattedPrice\r\n                        base_amount={price.base.amount} base_asset={price.base.asset_id}\r\n                        quote_amount={price.quote.amount} quote_asset={price.quote.asset_id}\r\n                        force_direction={this.props.force_direction}\r\n                        hide_symbols={this.props.hide_symbols}\r\n                    />\r\n                    : \"n/a\"\r\n                }\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nMarketPriceInner = BindToChainState(MarketPriceInner);\r\n\r\nclass MarketPrice extends React.Component {\r\n    render() {\r\n        return (\r\n            <MarketPriceInner {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nMarketPrice = connect(MarketPrice, {\r\n    listenTo() {\r\n        return [MarketsStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            allMarketStats: MarketsStore.getState().allMarketStats\r\n        };\r\n    }\r\n});\r\n\r\nexport {\r\n    MarketPrice,\r\n    MarketStats\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/MarketPrice.jsx","import React from \"react\";\r\nimport {PropTypes} from \"react\";\r\nimport utils from \"common/utils\";\r\nimport Translate from \"react-translate-component\";\r\nimport AssetName from \"../Utility/AssetName\";\r\nimport counterpart from \"counterpart\";\r\nimport getLocale from \"browser-locale\";\r\nimport TransitionWrapper from \"../Utility/TransitionWrapper\";\r\n\r\n\r\nclass TableHeader extends React.Component {\r\n\r\n    render() {\r\n        let {baseSymbol, quoteSymbol} = this.props;\r\n\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    <th style={{textAlign: \"right\"}}><Translate content=\"exchange.price\" /><br/>{baseSymbol ? <span className=\"header-sub-title\">(<AssetName name={baseSymbol} />/<AssetName name={quoteSymbol} />)</span> : null}</th>\r\n                    <th style={{textAlign: \"right\"}}><Translate content=\"transfer.amount\" /><br/>{quoteSymbol ? <span className=\"header-sub-title\">(<AssetName name={quoteSymbol} />)</span> : null}</th>\r\n                    <th style={{textAlign: \"right\"}}><Translate content=\"transaction.settlement_date\" /><br/><span style={{visibility: \"hidden\"}} className=\"header-sub-title\">d</span></th>\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n\r\nTableHeader.defaultProps = {\r\n    quoteSymbol: null,\r\n    baseSymbol: null\r\n};\r\n\r\nclass SettleOrderRow extends React.Component {\r\n\r\n    render() {\r\n        let {base, quote, order, showSymbols} = this.props;\r\n\r\n        let price = base.get(\"id\") == \"1.3.0\" ? order.getPrice()/(1 + (order.offset_percent / (10000))) : order.getPrice()*(1 + (order.offset_percent / (10000)));\r\n        let amountSymbol = showSymbols ? \" \" + quote.get(\"symbol\") : null;\r\n\r\n        return (\r\n            <tr style={{paddingRight: 5}}>\r\n                <td style={{textAlign: \"right\", width: \"25%\"}}>{utils.format_number(price, quote.get(\"precision\"))} {amountSymbol}</td>\r\n                <td style={{textAlign: \"right\", width: \"25%\"}}>\r\n                    {utils.format_number(order[!order.isBid() ? \"amountForSale\" : \"amountToReceive\"]().getAmount({real: true}), quote.get(\"precision\"))}\r\n                </td>\r\n                <td style={{textAlign: \"right\", width: \"25%\"}}>\r\n                    {utils.format_number(order[!order.isBid() ? \"amountToReceive\" : \"amountForSale\"]().getAmount({real: true}), base.get(\"precision\"))}\r\n                </td>\r\n                <td style={{textAlign: \"right\", width: \"25%\"}} className=\"tooltip\" data-tip={new Date(order.settlement_date)}>\r\n                    {counterpart.localize(new Date(order.settlement_date), {type: \"date\", format: getLocale().toLowerCase().indexOf(\"en-us\") !== -1 ? \"market_history_us\" : \"market_history\"})}\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nSettleOrderRow.defaultProps = {\r\n    showSymbols: false,\r\n    invert: false\r\n};\r\n\r\n\r\nclass OpenSettleOrders extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return (\r\n            nextProps.currentAccount !== this.props.currentAccount ||\r\n            nextProps.orders !== this.props.orders\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let {orders, base, quote} = this.props;\r\n        \r\n        let activeOrders = null;\r\n        \r\n        if(orders.size > 0 && base && quote) {\r\n            let index = 0;\r\n\r\n            activeOrders = orders\r\n            .sort((a, b) => {\r\n                return a.isBefore(b) ? -1 : 1;\r\n            }).map(order => {\r\n                return Date.now() < order.settlement_date ? <SettleOrderRow key={index++} order={order} base={base} quote={quote}/> : null;\r\n            }).toArray();\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <TransitionWrapper component=\"tbody\" transitionName=\"newrow\">\r\n                {activeOrders}\r\n            </TransitionWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nOpenSettleOrders.defaultProps = {\r\n    base: {},\r\n    quote: {},\r\n    orders: {},\r\n    quoteSymbol: \"\",\r\n    baseSymbol: \"\"\r\n};\r\n\r\nOpenSettleOrders.propTypes = {\r\n    base: PropTypes.object.isRequired,\r\n    quote: PropTypes.object.isRequired,\r\n    orders: PropTypes.object.isRequired,\r\n    quoteSymbol: PropTypes.string.isRequired,\r\n    baseSymbol: PropTypes.string.isRequired\r\n};\r\n\r\nexport default OpenSettleOrders;\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Exchange/OpenSettleOrders.jsx","import React from \"react\";\r\nimport {PropTypes} from \"react\";\r\nimport { Link } from \"react-router\";\r\nimport counterpart from \"counterpart\";\r\nimport Ps from \"perfect-scrollbar\";\r\nimport OpenSettleOrders from \"./OpenSettleOrders\";\r\nimport utils from \"common/utils\";\r\nimport Translate from \"react-translate-component\";\r\nimport PriceText from \"../Utility/PriceText\";\r\nimport TransitionWrapper from \"../Utility/TransitionWrapper\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport AssetName from \"../Utility/AssetName\";\r\nimport cnames from \"classnames\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport { ChainStore } from \"seerjs/es\";\r\nimport { LimitOrder, CallOrder } from \"common/MarketClasses\";\r\nimport { EquivalentValueComponent } from \"../Utility/EquivalentValueComponent\";\r\nimport {MarketPrice} from \"../Utility/MarketPrice\";\r\nimport FormattedPrice from \"../Utility/FormattedPrice\";\r\nconst leftAlign = {textAlign: \"left\"};\r\n\r\nclass TableHeader extends React.Component {\r\n\r\n    render() {\r\n        let {baseSymbol, quoteSymbol, dashboard, isMyAccount, settings} = this.props;\r\n        let preferredUnit = settings ? settings.get(\"unit\") : \"1.3.0\";\r\n\r\n        return !dashboard ? (\r\n            <thead>\r\n                <tr>\r\n                    <th style={{textAlign: this.props.leftAlign ? \"left\" : \"\"}}><Translate className=\"header-sub-title\" content=\"exchange.price\" /></th>\r\n                    <th style={this.props.leftAlign ? {textAlign: \"left\"} : null}>{baseSymbol ? <span className=\"header-sub-title\"><AssetName dataPlace=\"top\" name={quoteSymbol} /></span> : null}</th>\r\n                    <th style={this.props.leftAlign ? {textAlign: \"left\"} : null}>{baseSymbol ? <span className=\"header-sub-title\"><AssetName dataPlace=\"top\" name={baseSymbol} /></span> : null}</th>\r\n                    <th style={{textAlign: this.props.leftAlign ? \"left\" : \"\"}}><Translate className=\"header-sub-title\" content=\"transaction.expiration\" /></th>\r\n                    <th style={{width: \"6%\"}} />\r\n                </tr>\r\n            </thead>\r\n        ) : (\r\n            <thead>\r\n                <tr>\r\n                    <th style={leftAlign} colSpan=\"5\"><Translate content=\"exchange.description\" /></th>\r\n                    <th style={leftAlign}><Translate content=\"exchange.price\" /></th>\r\n                    <th style={leftAlign}><Translate content=\"exchange.price_market\" /></th>\r\n                    <th style={{textAlign: \"right\"}}><Translate content=\"exchange.value\" /></th>\r\n                    {/* <th><Translate content=\"transaction.expiration\" /></th> */}\r\n                    <th><Translate content=\"account.trade\" /></th>\r\n                    {isMyAccount ? <th id=\"cancelAllOrders\" style={{cursor: \"pointer\"}}><Translate content=\"wallet.cancel\" /></th> : null}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n\r\nTableHeader.defaultProps = {\r\n    quoteSymbol: null,\r\n    baseSymbol: null\r\n};\r\n\r\nclass OrderRow extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return (\r\n            nextProps.order.for_sale !== this.props.order.for_sale ||\r\n            nextProps.order.id !== this.props.order.id ||\r\n            nextProps.quote !== this.props.quote ||\r\n            nextProps.base !== this.props.base ||\r\n            nextProps.order.market_base !== this.props.order.market_base\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let {base, quote, order, showSymbols, dashboard, isMyAccount, settings} = this.props;\r\n        const isBid = order.isBid();\r\n        const isCall = order.isCall();\r\n        let tdClass = isCall ? \"orderHistoryCall\" : isBid ? \"orderHistoryBid\" : \"orderHistoryAsk\";\r\n\r\n        let priceSymbol = showSymbols ? <span>{` ${base.get(\"symbol\")}/${quote.get(\"symbol\")}`}</span> : null;\r\n        let valueSymbol = showSymbols ? \" \" + base.get(\"symbol\") : null;\r\n        let amountSymbol = showSymbols ? \" \" + quote.get(\"symbol\") : null;\r\n        let preferredUnit = settings ? settings.get(\"unit\") : \"1.3.0\";\r\n        let quoteColor = !isBid ? \"value negative\" : \"value positive\";\r\n        let baseColor = isBid ? \"value negative\" : \"value positive\";\r\n\r\n        return !dashboard ? (\r\n            <tr key={order.id}>\r\n                <td className={tdClass} style={{paddingLeft: 10}}>\r\n                    <PriceText price={order.getPrice()} base={base} quote={quote} />\r\n                    {priceSymbol}\r\n                </td>\r\n                <td>{utils.format_number(order[!isBid ? \"amountForSale\" : \"amountToReceive\"]().getAmount({real: true}), quote.get(\"precision\"))} {amountSymbol}</td>\r\n                <td>{utils.format_number(order[!isBid ? \"amountToReceive\" : \"amountForSale\"]().getAmount({real: true}), base.get(\"precision\"))} {valueSymbol}</td>\r\n                <td style={{width: \"25%\", textAlign: \"right\"}} className=\"tooltip\" data-tip={new Date(order.expiration)}>\r\n                    {counterpart.localize(new Date(order.expiration), {type: \"date\", format: \"short_custom\"})}\r\n                </td>\r\n                <td className=\"text-center\" style={{width: \"6%\"}}>\r\n                    {isCall ? null : <a style={{marginRight: 0}} className=\"order-cancel\" onClick={this.props.onCancel}>\r\n                        <Icon name=\"cross-circle\" className=\"icon-14px\" />\r\n                    </a>}\r\n                </td>\r\n            </tr>\r\n        ) : (\r\n            <tr key={order.id} className=\"clickable\">\r\n                <td colSpan=\"5\" style={leftAlign} onClick={this.props.onFlip}>\r\n                    {isBid ?\r\n                        <Translate\r\n                            content=\"exchange.buy_description\"\r\n                            baseAsset={utils.format_number(order[isBid ? \"amountToReceive\" : \"amountForSale\"]().getAmount({real: true}), base.get(\"precision\"), false)}\r\n                            quoteAsset={utils.format_number(order[isBid ? \"amountForSale\" : \"amountToReceive\"]().getAmount({real: true}), quote.get(\"precision\"), false)}\r\n                            baseName={<AssetName noTip customClass={quoteColor} name={quote.get(\"symbol\")} />}\r\n                            quoteName={<AssetName noTip customClass={baseColor} name={base.get(\"symbol\")} />}\r\n                            /> :\r\n                        <Translate\r\n                            content=\"exchange.sell_description\"\r\n                            baseAsset={utils.format_number(order[isBid ? \"amountToReceive\" : \"amountForSale\"]().getAmount({real: true}), base.get(\"precision\"), false)}\r\n                            quoteAsset={utils.format_number(order[isBid ? \"amountForSale\" : \"amountToReceive\"]().getAmount({real: true}), quote.get(\"precision\"), false)}\r\n                            baseName={<AssetName noTip customClass={quoteColor} name={quote.get(\"symbol\")} />}\r\n                            quoteName={<AssetName noTip customClass={baseColor} name={base.get(\"symbol\")} />}\r\n                        />}\r\n                </td>\r\n                <td style={leftAlign} onClick={this.props.onFlip}>\r\n                    <FormattedPrice\r\n                        base_amount={order.sellPrice().base.amount} base_asset={order.sellPrice().base.asset_id}\r\n                        quote_amount={order.sellPrice().quote.amount} quote_asset={order.sellPrice().quote.asset_id}\r\n                        force_direction={base.get(\"symbol\")}\r\n                        hide_symbols\r\n                    />\r\n                </td>\r\n                <td style={leftAlign} onClick={this.props.onFlip}>\r\n                    {isBid ?\r\n                        <MarketPrice\r\n                            base={base.get(\"id\")}\r\n                            quote={quote.get(\"id\")}\r\n                            force_direction={base.get(\"symbol\")}\r\n                            hide_symbols\r\n                            hide_asset\r\n                        />\r\n                        :\r\n                        <MarketPrice\r\n                            base={base.get(\"id\")}\r\n                            quote={quote.get(\"id\")}\r\n                            force_direction={base.get(\"symbol\")}\r\n                            hide_symbols\r\n                            hide_asset\r\n                        />\r\n                    }\r\n                </td>\r\n                <td style={{textAlign: \"right\"}} onClick={this.props.onFlip}>\r\n                    <EquivalentValueComponent hide_asset amount={order.amountForSale().getAmount()} fromAsset={order.amountForSale().asset_id} noDecimals={true} toAsset={preferredUnit}/> <AssetName name={preferredUnit} />\r\n                </td>\r\n                {/* <td>\r\n                    {isCall ? null : <FormattedDate\r\n                        value={order.expiration}\r\n                        format=\"short\"\r\n                    />}\r\n                    </td> */}\r\n                <td><Link to={`/market/${quote.get(\"symbol\")}_${base.get(\"symbol\")}`}><Icon name=\"trade\" className=\"icon-14px\" /></Link></td>\r\n                {isMyAccount ? <td className=\"text-center\" style={{ padding: \"2px 5px\"}}>\r\n                    {isCall ? null : <span style={{marginRight: 0}} className=\"order-cancel\">\r\n                        <input type=\"checkbox\" className=\"orderCancel\" onChange={this.props.onCheckCancel} />\r\n                    </span>}\r\n                </td> : null}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nOrderRow.defaultProps = {\r\n    showSymbols: false\r\n};\r\n\r\n\r\nclass MyOpenOrders extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            activeTab: props.activeTab\r\n        };\r\n        this._getOrders = this._getOrders.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let contentContainer = this.refs.container;\r\n        if (contentContainer) Ps.initialize(contentContainer);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let contentContainer = this.refs.container;\r\n        if (contentContainer) Ps.update(contentContainer);\r\n    }\r\n\r\n    _getOrders() {\r\n        const { currentAccount, base, quote, feedPrice } = this.props;\r\n        const orders = currentAccount.get(\"orders\"), call_orders = currentAccount.get(\"call_orders\");\r\n        const baseID = base.get(\"id\"), quoteID = quote.get(\"id\");\r\n        const assets = {\r\n            [base.get(\"id\")]: {precision: base.get(\"precision\")},\r\n            [quote.get(\"id\")]: {precision: quote.get(\"precision\")}\r\n        };\r\n        let limitOrders = orders.toArray().map(order => {\r\n            let o = ChainStore.getObject(order);\r\n            if (!o) return null;\r\n            let sellBase = o.getIn([\"sell_price\", \"base\", \"asset_id\"]), sellQuote = o.getIn([\"sell_price\", \"quote\", \"asset_id\"]);\r\n            if (sellBase === baseID && sellQuote === quoteID ||\r\n                sellBase === quoteID && sellQuote === baseID\r\n            ) {\r\n                return new LimitOrder(o.toJS(), assets, quote.get(\"id\"));\r\n            }\r\n        }).filter(a => !!a);\r\n\r\n        let callOrders = call_orders.toArray().map(order => {\r\n            try {\r\n                let o = ChainStore.getObject(order);\r\n                if (!o) return null;\r\n                let sellBase = o.getIn([\"call_price\", \"base\", \"asset_id\"]), sellQuote = o.getIn([\"call_price\", \"quote\", \"asset_id\"]);\r\n                if (sellBase === baseID && sellQuote === quoteID ||\r\n                    sellBase === quoteID && sellQuote === baseID\r\n                ) {\r\n                    return feedPrice ? new CallOrder(o.toJS(), assets, quote.get(\"id\"), feedPrice) : null;\r\n                }\r\n            } catch(e) {\r\n                return null;\r\n            }\r\n        }).filter(a => !!a).filter(a => {\r\n            try {\r\n                return a.isMarginCalled();\r\n            } catch(err) {\r\n                return false;\r\n            }\r\n        });\r\n        return limitOrders.concat(callOrders);\r\n    }\r\n\r\n    _changeTab(tab) {\r\n        SettingsActions.changeViewSetting({\r\n            ordersTab: tab\r\n        });\r\n        this.setState({\r\n            activeTab: tab\r\n        });\r\n\r\n        // Ensure that focus goes back to top of scrollable container when tab is changed\r\n        let contentContainer = this.refs.container;\r\n        contentContainer.scrollTop = 0;\r\n        Ps.update(contentContainer);\r\n\r\n        setTimeout(ReactTooltip.rebuild, 1000);\r\n    }\r\n\r\n    render() {\r\n        let {base, quote, quoteSymbol, baseSymbol, settleOrders} = this.props;\r\n        let {activeTab} = this.state;\r\n\r\n        if (!base || !quote) return null;\r\n        \r\n        let contentContainer;\r\n\r\n        // Is asset a BitAsset with Settlements\r\n        let baseIsBitAsset = base.get(\"bitasset_data_id\") && settleOrders.size > 0 ? true : false;\r\n        let quoteIsBitAsset = quote.get(\"bitasset_data_id\") && settleOrders.size > 0 ? true : false;\r\n\r\n        // Default Tab\r\n        if(!activeTab || (!baseIsBitAsset && !quoteIsBitAsset)) { activeTab = \"my_orders\"; }\r\n\r\n        {/* Users Open Orders Tab (default) */}\r\n        if(activeTab == \"my_orders\") {\r\n            const orders = this._getOrders();\r\n            let emptyRow = <tr><td style={{textAlign: \"center\"}} colSpan=\"5\"><Translate content=\"account.no_orders\" /></td></tr>;\r\n    \r\n            let bids = orders.filter(a => {\r\n                return a.isBid();\r\n            }).sort((a, b) => {\r\n                return b.getPrice() - a.getPrice();\r\n            }).map(order => {\r\n                let price = order.getPrice();\r\n                return <OrderRow price={price} key={order.id} order={order} base={base} quote={quote} onCancel={this.props.onCancel.bind(this, order.id)}/>;\r\n            });\r\n    \r\n            let asks = orders.filter(a => {\r\n                return !a.isBid();\r\n            }).sort((a, b) => {\r\n                return a.getPrice() - b.getPrice();\r\n            }).map(order => {\r\n                let price = order.getPrice();\r\n                return <OrderRow price={price} key={order.id} order={order} base={base} quote={quote} onCancel={this.props.onCancel.bind(this, order.id)}/>;\r\n            });\r\n    \r\n            let rows = [];\r\n    \r\n            if (asks.length) {\r\n                rows = rows.concat(asks);\r\n            }\r\n    \r\n            if (bids.length) {\r\n                rows = rows.concat(bids);\r\n            }\r\n    \r\n            rows.sort((a, b) => {\r\n                return a.props.price - b.props.price;\r\n            });\r\n\r\n            contentContainer = (<TransitionWrapper component=\"tbody\" transitionName=\"newrow\">{rows.length ? rows : emptyRow}</TransitionWrapper>);\r\n        } \r\n        \r\n        {/* Open Settle Orders */}\r\n        \r\n        if(activeTab && activeTab == \"open_settlement\") {\r\n            contentContainer = \r\n                <OpenSettleOrders \r\n                    key=\"settle_orders\"\r\n                    orders={settleOrders}\r\n                    base={base}\r\n                    quote={quote}\r\n                    baseSymbol={baseSymbol}\r\n                    quoteSymbol={quoteSymbol}\r\n                />;\r\n        }\r\n\r\n        let hc = \"mymarkets-header clickable\";\r\n        let myOrdersClass = cnames(hc, {inactive: activeTab !== \"my_orders\"});\r\n        let openSettlementClass = cnames(hc, {inactive: activeTab !== \"open_settlement\"});\r\n        let myOrdersWidth = baseIsBitAsset || quoteIsBitAsset ? \"50%\" : \"100%\";\r\n        let openSettlementWidth = baseIsBitAsset || quoteIsBitAsset ? \"inherit\" : \"none\";\r\n\r\n        return (\r\n            <div \r\n                style={{marginBottom: \"15px\"}}\r\n                key=\"open_orders\"\r\n                className={this.props.className}\r\n            >\r\n                <div className=\"exchange-bordered small-12\" style={{height: 266}}>\r\n                    <div className=\"grid-block shrink left-orderbook-header\">\r\n                        <div style={{width: myOrdersWidth}} className={myOrdersClass} onClick={this._changeTab.bind(this, \"my_orders\")}>\r\n                            <Translate content=\"exchange.my_orders\" />\r\n                        </div>\r\n                        <div style={{display: openSettlementWidth}} className={openSettlementClass} onClick={this._changeTab.bind(this, \"open_settlement\")}>\r\n                            <Translate content=\"exchange.settle_orders\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid-block shrink left-orderbook-header market-right-padding-only\">\r\n                        <table className=\"table order-table text-right fixed-table market-right-padding\">\r\n                            {activeTab == \"my_orders\" ? \r\n                                <TableHeader rightAlign type=\"sell\" baseSymbol={baseSymbol} quoteSymbol={quoteSymbol} />\r\n                                :\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th><Translate className=\"header-sub-title\" content=\"exchange.price\" /></th>\r\n                                        <th><span className=\"header-sub-title\"><AssetName dataPlace=\"top\" name={quoteSymbol} /></span></th>\r\n                                        <th><span className=\"header-sub-title\"><AssetName dataPlace=\"top\" name={baseSymbol} /></span></th>\r\n                                        <th><Translate className=\"header-sub-title\" content=\"explorer.block.date\" /></th>\r\n                                    </tr>\r\n                                </thead>\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                    \r\n                    <div className=\"table-container grid-block market-right-padding-only no-overflow\" ref=\"container\" style={{overflow: \"hidden\", maxHeight: 200}}>\r\n                        <table className=\"table order-table text-right fixed-table market-right-padding\">\r\n                            {contentContainer}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMyOpenOrders.defaultProps = {\r\n    base: {},\r\n    quote: {},\r\n    orders: {},\r\n    quoteSymbol: \"\",\r\n    baseSymbol: \"\"\r\n};\r\n\r\nMyOpenOrders.propTypes = {\r\n    base: PropTypes.object.isRequired,\r\n    quote: PropTypes.object.isRequired,\r\n    orders: PropTypes.object.isRequired,\r\n    quoteSymbol: PropTypes.string.isRequired,\r\n    baseSymbol: PropTypes.string.isRequired\r\n};\r\n\r\nexport { OrderRow, TableHeader, MyOpenOrders };\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Exchange/MyOpenOrders.jsx","import React from \"react\";\r\nimport ZfApi from \"react-foundation-apps/src/utils/foundation-api\";\r\nimport BaseModal from \"../Modal/BaseModal\";\r\nimport Translate from \"react-translate-component\";\r\nimport { Asset } from \"common/MarketClasses\";\r\nimport utils from \"common/utils\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport AccountActions from \"actions/AccountActions\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport counterpart from \"counterpart\";\r\nimport {requestDepositAddress, validateAddress, WithdrawAddresses, getDepositAddress} from \"common/blockTradesMethods\";\r\nimport CopyButton from \"../Utility/CopyButton\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\nimport { checkFeeStatusAsync, checkBalance } from \"common/trxHelper\";\r\nimport AssetName from \"../Utility/AssetName\";\r\nimport { ChainStore } from \"seerjs/es\";\r\nimport { debounce } from \"lodash\";\r\nimport {DecimalChecker} from \"../Exchange/ExchangeInput\";\r\nimport { blockTradesAPIs } from \"api/apiConfig\";\r\n\r\n// import DepositFiatOpenLedger from \"components/DepositWithdraw/openledger/DepositFiatOpenLedger\";\r\n// import WithdrawFiatOpenLedger from \"components/DepositWithdraw/openledger/WithdrawFiatOpenLedger\";\r\n\r\nclass DepositWithdrawContent extends DecimalChecker {\r\n\r\n    static propTypes = {\r\n        sender: ChainTypes.ChainAccount.isRequired,\r\n        asset: ChainTypes.ChainAsset.isRequired,\r\n        coreAsset: ChainTypes.ChainAsset.isRequired,\r\n        globalObject: ChainTypes.ChainAsset.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        coreAsset: \"1.3.0\",\r\n        globalObject: \"2.0.0\",\r\n    }\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            toAddress: WithdrawAddresses.getLast(props.walletType),\r\n            withdrawValue:\"\",\r\n            amountError: null,\r\n            symbol:props.asset.get(\"symbol\"),\r\n            to_withdraw: new Asset({\r\n                asset_id: props.asset.get(\"id\"),\r\n                precision: props.asset.get(\"precision\")\r\n            }),\r\n            fee_asset_id: \"1.3.0\",\r\n            feeStatus: {},\r\n            loading: false,\r\n            emptyAddressDeposit: false\r\n        };\r\n\r\n        this._validateAddress(this.state.toAddress, props);\r\n\r\n        this.addDepositAddress = this.addDepositAddress.bind(this);\r\n        this._checkFeeStatus = this._checkFeeStatus.bind(this);\r\n        this._checkBalance = this._checkBalance.bind(this);\r\n        this._getCurrentBalance = this._getCurrentBalance.bind(this);\r\n        this._getFee = this._getFee.bind(this);\r\n        this._updateFee = debounce(this._updateFee.bind(this), 250);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._getDepositAddress();\r\n\r\n        this._updateFee();\r\n        this._checkFeeStatus();\r\n    }\r\n\r\n    componentWillReceiveProps(np) {\r\n        if ((np.asset && this.props.asset) && np.asset.get(\"id\") !== this.props.asset.get(\"id\")) {\r\n            this.setState({\r\n                to_withdraw: new Asset({\r\n                    asset_id: np.asset.get(\"id\"),\r\n                    precision: np.asset.get(\"precision\")\r\n                }),\r\n                gateFee: np.asset.get(\"gateFee\"),\r\n                intermediateAccount: np.asset.get(\"intermediateAccount\"),\r\n                symbol:np.asset.get(\"symbol\"),\r\n                memo: \"\",\r\n                withdrawValue: \"\",\r\n                receive_address: null,\r\n                toAddress: WithdrawAddresses.getLast(np.walletType)\r\n            }, this._getDepositAddress);\r\n        }\r\n    }\r\n\r\n    _getDepositAddress() {\r\n        if (!this.props.backingCoinType) return;\r\n\r\n        let receive_address =  getDepositAddress({coin: `open.${(this.props.backingCoinType).toLowerCase()}`,  account: this.props.account,  stateCallback: this.addDepositAddress})\r\n\r\n        if (!receive_address) {\r\n            requestDepositAddress(this._getDepositObject());\r\n        } else {\r\n            this.setState({\r\n                receive_address\r\n            });\r\n        }\r\n    }\r\n\r\n    _getDepositObject() {\r\n        return {\r\n            inputCoinType: this.props.backingCoinType.toLowerCase(),\r\n            outputCoinType: this.props.symbol.toLowerCase(),\r\n            outputAddress: this.props.sender.get(\"name\"),\r\n            stateCallback: this.addDepositAddress\r\n        };\r\n    }\r\n\r\n    requestDepositAddressLoad(){\r\n        this.setState({\r\n            loading: true,\r\n            emptyAddressDeposit: false\r\n        });\r\n        requestDepositAddress(this._getDepositObject());\r\n    }\r\n\r\n    addDepositAddress( receive_address ) {\r\n        if(receive_address.error){\r\n            receive_address.error.message === \"no_address\" ? this.setState({emptyAddressDeposit: true}) : this.setState({emptyAddressDeposit: false})\r\n        };\r\n\r\n        this.setState({\r\n            receive_address,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        ReactTooltip.rebuild();\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.state.to_withdraw.getAmount() === 0) {\r\n            return this.setState({\r\n                amountError: \"transfer.errors.pos\"\r\n            });\r\n        }\r\n\r\n        if (!this.props.intermediateAccount) return;\r\n\r\n        const fee = this._getFee();\r\n        const gateFee = this._getGateFee();\r\n\r\n        let sendAmount = this.state.to_withdraw.clone();\r\n\r\n        let balanceAmount = sendAmount.clone(this._getCurrentBalance().get(\"balance\"));\r\n\r\n        sendAmount.plus(gateFee);\r\n\r\n        /* Insufficient balance */\r\n        if (balanceAmount.lt(sendAmount)) {\r\n            // Send the originally entered amount\r\n            sendAmount = this.state.to_withdraw.clone();\r\n        }\r\n\r\n        AccountActions.transfer(\r\n            this.props.sender.get(\"id\"),\r\n            this.props.intermediateAccount,\r\n            this.state.to_withdraw.getAmount(),\r\n            this.state.to_withdraw.asset_id,\r\n            this.props.backingCoinType.toLowerCase() + \":\" + this.state.toAddress + (this.state.memo ? \":\" + new Buffer(this.state.memo, \"utf-8\") : \"\"),\r\n            null,\r\n            fee.asset_id\r\n        );\r\n    }\r\n\r\n    _updateAmount() {\r\n        const feeAmount = this._getFee();\r\n        const currentBalance = this._getCurrentBalance();\r\n\r\n        let total = new Asset({\r\n            amount: currentBalance ? currentBalance.get(\"balance\") : 0,\r\n            asset_id: this.props.asset.get(\"id\"),\r\n            precision: this.props.asset.get(\"precision\")\r\n        });\r\n\r\n        // Subtract the fee if it is using the same asset\r\n        if(total.asset_id === feeAmount.asset_id) {\r\n            total.minus(feeAmount);\r\n        }\r\n\r\n        this.state.to_withdraw.setAmount({sats: total.getAmount()});\r\n        this.setState({\r\n            withdrawValue: total.getAmount({real: true}),\r\n            amountError: null\r\n        }, this._checkBalance);\r\n    }\r\n\r\n    _checkFeeStatus(account = this.props.sender) {\r\n        if (!account) return;\r\n\r\n        const assets = [\"1.3.0\", this.state.to_withdraw.asset_id];\r\n        let feeStatus = {};\r\n        let p = [];\r\n        assets.forEach(a => {\r\n            p.push(checkFeeStatusAsync({\r\n                accountID: account.get(\"id\"),\r\n                feeID: a,\r\n                options: [\"price_per_kbyte\"],\r\n                data: {\r\n                    type: \"memo\",\r\n                    content: this.props.backingCoinType.toLowerCase() + \":\" + this.state.toAddress + (this.state.memo ? \":\" + this.state.memo : \"\")\r\n                }\r\n            }));\r\n        });\r\n        Promise.all(p).then(status => {\r\n            assets.forEach((a, idx) => {\r\n                feeStatus[a] = status[idx];\r\n            });\r\n            if (!utils.are_equal_shallow(this.state.feeStatus, feeStatus)) {\r\n                this.setState({\r\n                    feeStatus\r\n                });\r\n            }\r\n            this._checkBalance();\r\n        }).catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    _updateFee(fee_asset_id = this.state.fee_asset_id) {\r\n        if (!this.props.sender) return null;\r\n        checkFeeStatusAsync({\r\n            accountID: this.props.sender.get(\"id\"),\r\n            feeID: fee_asset_id,\r\n            options: [\"price_per_kbyte\"],\r\n            data: {\r\n                type: \"memo\",\r\n                content: this.props.backingCoinType.toLowerCase() + \":\" + this.state.toAddress + (this.state.memo ? \":\" + this.state.memo : \"\")\r\n            }\r\n        })\r\n        .then(({fee, hasBalance, hasPoolBalance}) => {\r\n            this.setState({\r\n                feeAmount: fee,\r\n                hasBalance,\r\n                hasPoolBalance,\r\n                error: (!hasBalance || !hasPoolBalance)\r\n            }, this._checkFeeStatus);\r\n        });\r\n    }\r\n\r\n    _getCurrentBalance() {\r\n        return this.props.balances.find(b => {\r\n            return b && b.get(\"asset_type\") === this.props.asset.get(\"id\");\r\n        });\r\n    }\r\n\r\n    _checkBalance() {\r\n        const {feeAmount, to_withdraw} = this.state;\r\n        const {asset} = this.props;\r\n        const balance = this._getCurrentBalance();\r\n        if (!balance || !feeAmount) return;\r\n        const hasBalance = checkBalance(to_withdraw.getAmount({real: true}), asset, this._getFee(), balance, this._getGateFee());\r\n        if (hasBalance === null) return;\r\n        if (this.state.balanceError !== !hasBalance)\r\n            this.setState({balanceError: !hasBalance});\r\n\r\n        return hasBalance;\r\n    }\r\n\r\n    _getFee() {\r\n        const defaultFee = {getAmount: function() {return 0;}, asset_id: this.state.fee_asset_id};\r\n\r\n        if (!this.state.feeStatus || !this.state.feeAmount) return defaultFee;\r\n\r\n        const coreStatus = this.state.feeStatus[\"1.3.0\"];\r\n        const withdrawAssetStatus = this.state.feeStatus[this.state.to_withdraw.asset_id];\r\n        // Use core asset to pay the fees if present and balance is sufficient since it's cheapest\r\n        if (coreStatus && coreStatus.hasBalance) return coreStatus.fee;\r\n        // Use same asset as withdraw if not\r\n        if (coreStatus && !coreStatus.hasBalance && withdrawAssetStatus && withdrawAssetStatus.hasBalance) {\r\n            return withdrawAssetStatus.fee;\r\n        }\r\n        return coreStatus ? coreStatus.fee : defaultFee;\r\n    }\r\n\r\n    _onInputAmount(e) {\r\n        try {\r\n            this.state.to_withdraw.setAmount({\r\n                real: parseFloat(e.target.value || 0)\r\n            });\r\n            this.setState({\r\n                withdrawValue: e.target.value,\r\n                amountError: null\r\n            }, this._checkBalance);\r\n        } catch(err) {\r\n            console.error(\"err:\", err);\r\n        }\r\n    }\r\n\r\n    _onInputTo(e) {\r\n        let toAddress = e.target.value.trim();\r\n\r\n        this.setState({\r\n            withdraw_address_check_in_progress: true,\r\n            withdraw_address_selected: toAddress,\r\n            validAddress: null,\r\n            toAddress: toAddress\r\n        });\r\n\r\n        this._validateAddress(toAddress);\r\n    }\r\n\r\n    _onMemoChanged(e) {\r\n        this.setState({memo: e.target.value}, this._updateFee);\r\n    }\r\n\r\n    _validateAddress(address, props = this.props) {\r\n        validateAddress({url: blockTradesAPIs.BASE_OL, walletType: props.walletType, newAddress: address})\r\n            .then(isValid => {\r\n                if (this.state.toAddress === address) {\r\n                    this.setState({\r\n                        withdraw_address_check_in_progress: false,\r\n                        validAddress: !!isValid\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                console.error(\"Error when validating address:\", err);\r\n            });\r\n    }\r\n\r\n    _openRegistrarSite(e) {\r\n        e.preventDefault();\r\n        let newWnd = window.open(SettingsStore.site_registr, \"_blank\");\r\n        newWnd.opener = null;\r\n    }\r\n\r\n    _getGateFee() {\r\n        const {gateFee, asset} = this.props;\r\n        return new Asset({\r\n            real: parseFloat(gateFee ? gateFee.replace(\",\", \"\") : 0),\r\n            asset_id: asset.get(\"id\"),\r\n            precision: asset.get(\"precision\")\r\n        });\r\n    }\r\n\r\n    _renderWithdraw() {\r\n        const {amountError} = this.state;\r\n        const {name: assetName} = utils.replaceName(this.props.asset.get(\"symbol\"), !!this.props.asset.get(\"bitasset\"));\r\n        let tabIndex = 1;\r\n        const {supportsMemos} = this.props;\r\n\r\n        // if(this.props.fiatModal){\r\n        //     if(~this.props.fiatModal.indexOf('canFiatWith')){\r\n        //         return (<WithdrawFiatOpenLedger\r\n        //             account={this.props.account}\r\n        //             issuer_account=\"openledger-fiat\"\r\n        //             deposit_asset={this.props.asset.get(\"symbol\").split('OPEN.').join('')}\r\n        //             receive_asset={this.props.asset.get(\"symbol\")}\r\n        //             rpc_url={SettingsStore.rpc_url}\r\n        //         />);\r\n        //     }else{\r\n        //         return (<p>Click <a href='#' onClick={this._openRegistrarSite} >here</a> to register for deposits </p>);\r\n        //     }\r\n        // }\r\n\r\n        const currentFee = this._getFee();\r\n        const gateFee = this._getGateFee();\r\n        const feeStatus = this.state.feeStatus[currentFee.asset_id];\r\n        const feeAsset = ChainStore.getAsset(currentFee.asset_id);\r\n\r\n        const disableSubmit =\r\n            (feeStatus && !feeStatus.hasBalance) ||\r\n            this.state.balanceError ||\r\n            !this.state.toAddress ||\r\n            !this.state.withdrawValue;\r\n\r\n        return (\r\n            <div>\r\n                <p><Translate content=\"gateway.withdraw_funds\" asset={assetName} /></p>\r\n\r\n                {this._renderCurrentBalance()}\r\n\r\n                <div className=\"SimpleTrade__withdraw-row\">\r\n                        <label className=\"left-label\">{counterpart.translate(\"modal.withdraw.amount\")}</label>\r\n                        <div className=\"inline-label input-wrapper\">\r\n                            <input\r\n                                tabIndex={tabIndex++}\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onKeyPress={this.onKeyPress.bind(this)}\r\n                                value={this.state.withdrawValue}\r\n                                onChange={this._onInputAmount.bind(this)}\r\n                            />\r\n                            <div className=\"form-label select floating-dropdown\">\r\n                                <div className=\"dropdown-wrapper inactive\">\r\n                                    <div>{assetName}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    {amountError ? <p className=\"has-error no-margin\" style={{paddingTop: 10}}><Translate content={amountError} /></p>:null}\r\n                    {this.state.balanceError ? <p className=\"has-error no-margin\" style={{paddingTop: 10}}><Translate content=\"transfer.errors.insufficient\" /></p>:null}\r\n                </div>\r\n\r\n                <div className=\"SimpleTrade__withdraw-row\">\r\n                    <label className=\"left-label\">{counterpart.translate(\"transfer.fee\")}</label>\r\n                        <div className=\"inline-label input-wrapper\">\r\n                            <input type=\"text\" disabled value={currentFee.getAmount({real: true})} />\r\n\r\n                            <div className=\"form-label select floating-dropdown\">\r\n                                <div className=\"dropdown-wrapper inactive\">\r\n                                    <div>{feeAsset ? <AssetName name={feeAsset.get(\"symbol\")} /> : null}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    {feeStatus && !feeStatus.hasBalance ? <p className=\"has-error no-margin\" style={{paddingTop: 10}}><Translate content=\"transfer.errors.insufficient\" /></p>:null}\r\n                </div>\r\n\r\n                <div className=\"SimpleTrade__withdraw-row\">\r\n                    <label className=\"left-label\">{counterpart.translate(\"gateway.fee\")}</label>\r\n                        <div className=\"inline-label input-wrapper\">\r\n                            <input type=\"text\" disabled value={gateFee.getAmount({real: true})} />\r\n\r\n                            <div className=\"form-label select floating-dropdown\">\r\n                                <div className=\"dropdown-wrapper inactive\">\r\n                                    <div><AssetName name={this.props.asset.get(\"symbol\")} /></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    {feeStatus && !feeStatus.hasBalance ? <p className=\"has-error no-margin\" style={{paddingTop: 10}}><Translate content=\"transfer.errors.insufficient\" /></p>:null}\r\n                </div>\r\n\r\n                <div className=\"SimpleTrade__withdraw-row\">\r\n                    <label className=\"left-label\">{counterpart.translate(\"modal.withdraw.address\")}</label>\r\n                        <div className=\"inline-label input-wrapper\">\r\n                            <input placeholder={counterpart.translate(\"gateway.withdraw_placeholder\", {asset: assetName})} tabIndex={tabIndex++} type=\"text\" value={this.state.toAddress} onChange={this._onInputTo.bind(this)} />\r\n\r\n                            <div className=\"form-label select floating-dropdown\">\r\n                                <div className=\"dropdown-wrapper inactive\">\r\n                                    <div data-place=\"right\" data-tip={counterpart.translate(\"tooltip.withdraw_address\", {asset: assetName})}>\r\n                                        ?\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    {!this.state.validAddress && this.state.toAddress ? <div className=\"has-error\" style={{paddingTop: 10}}><Translate content=\"gateway.valid_address\" coin_type={assetName} /></div> : null}\r\n                </div>\r\n\r\n                {supportsMemos ? (\r\n                    <div className=\"SimpleTrade__withdraw-row\">\r\n                        <label className=\"left-label\">{counterpart.translate(\"transfer.memo\")}</label>\r\n                            <div className=\"inline-label input-wrapper\">\r\n                                <textarea rows=\"3\" value={this.state.memo} tabIndex={tabIndex++} onChange={this._onMemoChanged.bind(this)} />\r\n                            </div>\r\n                        {!this.state.validAddress && this.state.toAddress ? <div className=\"has-error\" style={{paddingTop: 10}}><Translate content=\"gateway.valid_address\" coin_type={assetName} /></div> : null}\r\n                    </div>\r\n                ) : null}\r\n\r\n                <div className=\"button-group SimpleTrade__withdraw-row\">\r\n                    <button tabIndex={tabIndex++} className={\"button\" + (disableSubmit ? \" disabled\" : \"\")} onClick={this.onSubmit.bind(this)} type=\"submit\" >\r\n                        <Translate content=\"gateway.withdraw_now\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _renderDeposit() {\r\n        const {receive_address, loading, emptyAddressDeposit} = this.state;\r\n        const {name: assetName} = utils.replaceName(this.props.asset.get(\"symbol\"), !!this.props.asset.get(\"bitasset\"));\r\n        const hasMemo = receive_address && \"memo\" in receive_address && receive_address.memo;\r\n        const addressValue = receive_address && receive_address.address || \"\";\r\n        let tabIndex = 1;\r\n\r\n        // if(this.props.fiatModal){\r\n        //     if(~this.props.fiatModal.indexOf('canFiatDep')){\r\n        //         return (<DepositFiatOpenLedger\r\n        //             account={this.props.account}\r\n        //             issuer_account=\"openledger-fiat\"\r\n        //             deposit_asset={this.props.asset.get(\"symbol\").split('OPEN.').join('')}\r\n        //             receive_asset={this.props.asset.get(\"symbol\")}\r\n        //             rpc_url={SettingsStore.rpc_url}\r\n        //         />);\r\n        //     }else{\r\n        //         return (<p>Click <a href='#' onClick={this._openRegistrarSite} >here</a> to register for deposits </p>);\r\n        //     }\r\n        // }\r\n        return (\r\n            <div className={!addressValue ? \"no-overflow\" : \"\"}>\r\n                <p><Translate unsafe content=\"gateway.add_funds\" account={this.props.sender.get(\"name\")} /></p>\r\n\r\n                {this._renderCurrentBalance()}\r\n\r\n                <div className=\"SimpleTrade__withdraw-row\">\r\n                    <p style={{marginBottom: 10}} data-place=\"right\" data-tip={counterpart.translate(\"tooltip.deposit_tip\", {asset: assetName})}>\r\n                        <Translate className=\"help-tooltip\" content=\"gateway.deposit_to\" asset={assetName} />:\r\n                        <label className=\"fz_12 left-label\"><Translate content=\"gateway.deposit_notice_delay\" /></label>\r\n                    </p>\r\n                    {!addressValue ? <LoadingIndicator type=\"three-bounce\"/> :<label>\r\n                       {emptyAddressDeposit ? <Translate content=\"gateway.please_generate_address\" /> : <span className=\"inline-label\"><input readOnly type=\"text\" value={addressValue} /><CopyButton text={addressValue} /> </span> }\r\n                    </label>}\r\n                    {hasMemo ?\r\n                        <label>\r\n                            <span className=\"inline-label\">\r\n                                <input readOnly type=\"text\" value={counterpart.translate(\"transfer.memo\") + \": \" + receive_address.memo} />\r\n\r\n                                <CopyButton\r\n                                    text={receive_address.memo}\r\n                                />\r\n                            </span>\r\n                        </label> : null}\r\n\r\n                    {receive_address && receive_address.error ?\r\n                        <div className=\"has-error\" style={{paddingTop: 10}}>\r\n                            {receive_address.error.message}\r\n                        </div> : null}\r\n                </div>\r\n\r\n                <div className=\"button-group SimpleTrade__withdraw-row\">\r\n                    <button tabIndex={tabIndex++} className=\"button spinner-button-circle\" onClick={this.requestDepositAddressLoad.bind(this)} type=\"submit\" >\r\n                        {loading ? <LoadingIndicator type=\"circle\" /> : null}<Translate content=\"gateway.generate_new\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _renderCurrentBalance() {\r\n        const {name: assetName} = utils.replaceName(this.props.asset.get(\"symbol\"), !!this.props.asset.get(\"bitasset\"));\r\n        const isDeposit = this.props.action === \"deposit\";\r\n\r\n        let currentBalance = this._getCurrentBalance();\r\n\r\n        let asset = currentBalance ? new Asset({\r\n            asset_id: currentBalance.get(\"asset_type\"),\r\n            precision: this.props.asset.get(\"precision\"),\r\n            amount: currentBalance.get(\"balance\")\r\n        }) : null;\r\n\r\n        // TEMP //\r\n        // asset = new Asset({\r\n        //     asset_id: this.props.asset.get(\"id\"),\r\n        //     precision: this.props.asset.get(\"precision\"),\r\n        //     amount: 65654645\r\n        // });\r\n\r\n        const applyBalanceButton = isDeposit ?\r\n            <span style={{border: \"2px solid black\", borderLeft: \"none\"}} className=\"form-label\">{assetName}</span> :\r\n        (\r\n            <button\r\n                data-place=\"right\" data-tip={counterpart.translate(\"tooltip.withdraw_full\")}\r\n                className=\"button\"\r\n                style={{border: \"2px solid black\", borderLeft: \"none\"}}\r\n                onClick={this._updateAmount.bind(this, !currentBalance ? 0 : parseInt(currentBalance.get(\"balance\"), 10))}\r\n            >\r\n                <Icon name=\"clippy\" />\r\n            </button>\r\n        );\r\n\r\n        return (\r\n            <div className=\"SimpleTrade__withdraw-row\" style={{fontSize: \"1rem\"}}>\r\n                <label style={{fontSize: \"1rem\"}}>\r\n                    {counterpart.translate(\"gateway.balance_asset\", {asset: assetName})}:\r\n                    <span className=\"inline-label\">\r\n                        <input\r\n                            disabled\r\n                            style={{color: \"black\", border: \"2px solid black\", padding: 10, width: \"100%\"}}\r\n                            value={!asset ? 0 : asset.getAmount({real: true})}\r\n                        />\r\n                        {applyBalanceButton}\r\n                    </span>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let {asset, action} = this.props;\r\n        let isDeposit = action === \"deposit\";\r\n\r\n        if (!asset) {\r\n            return null;\r\n        }\r\n\r\n        const {name: assetName} = utils.replaceName(asset.get(\"symbol\"), true);\r\n\r\n        let content = this.props.isDown ?\r\n            <div><Translate className=\"txtlabel cancel\" content=\"gateway.unavailable_OPEN\" component=\"p\" /></div> :\r\n            !this.props.isAvailable ?\r\n            <div><Translate className=\"txtlabel cancel\" content=\"gateway.unavailable\" component=\"p\" /></div> :\r\n            isDeposit ? this._renderDeposit() : this._renderWithdraw();\r\n\r\n        return (\r\n            <div className=\"SimpleTrade__modal\">\r\n                <div className=\"Modal__header\">\r\n                    <h3><Translate content={isDeposit ? \"gateway.deposit\" : \"modal.withdraw.submit\"} /> {assetName}</h3>\r\n                </div>\r\n                <div className=\"Modal__divider\"></div>\r\n\r\n                <div\r\n                    className=\"grid-block vertical no-overflow\"\r\n                    style={{\r\n                        zIndex: 1002,\r\n                        paddingLeft: \"2rem\",\r\n                        paddingRight: \"2rem\",\r\n                        paddingTop: \"1rem\"\r\n                    }}>\r\n\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nDepositWithdrawContent = BindToChainState(DepositWithdrawContent);\r\n\r\nexport default class SimpleDepositWithdrawModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {open: false};\r\n    }\r\n\r\n    show() {\r\n        this.setState({open: true}, () => {\r\n            ZfApi.publish(this.props.modalId, \"open\");\r\n        });\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BaseModal className=\"test\" onClose={this.onClose.bind(this)} overlay={true} id={this.props.modalId}>\r\n                {this.state.open ? <DepositWithdrawContent {...this.props} open={this.state.open} /> : null}\r\n            </BaseModal>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Dashboard/SimpleDepositWithdraw.jsx","import React from \"react\";\r\nimport ZfApi from \"react-foundation-apps/src/utils/foundation-api\";\r\nimport BaseModal from \"../Modal/BaseModal\";\r\nimport Translate from \"react-translate-component\";\r\nimport { Asset } from \"common/MarketClasses\";\r\nimport utils from \"common/utils\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport counterpart from \"counterpart\";\r\nimport {requestDepositAddress, validateAddress, WithdrawAddresses, getDepositLimit, estimateOutput, estimateInput} from \"common/blockTradesMethods\";\r\nimport BlockTradesDepositAddressCache from \"common/BlockTradesDepositAddressCache\";\r\nimport CopyButton from \"../Utility/CopyButton\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\nimport {blockTradesAPIs} from \"api/apiConfig\";\r\nimport FloatingDropdown from \"../Utility/FloatingDropdown\";\r\nimport {connect} from \"alt-react\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\n// import DepositFiatOpenLedger from \"components/DepositWithdraw/openledger/DepositFiatOpenLedger\";\r\n// import WithdrawFiatOpenLedger from \"components/DepositWithdraw/openledger/WithdrawFiatOpenLedger\";\r\n\r\nclass SimpleDepositBlocktradesBridge extends React.Component {\r\n\r\n    static propTypes = {\r\n        sender: ChainTypes.ChainAccount.isRequired,\r\n        asset: ChainTypes.ChainAsset.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            toAddress: WithdrawAddresses.getLast(props.walletType),\r\n            withdrawValue:\"\",\r\n            amountError: null,\r\n            inputAmount: 0,\r\n            receiveLoading: false,\r\n            limitLoading: true,\r\n            apiError: false\r\n        };\r\n\r\n        this._validateAddress(this.state.toAddress, props);\r\n\r\n        this.deposit_address_cache = new BlockTradesDepositAddressCache();\r\n    }\r\n\r\n    onClose() {\r\n        ZfApi.publish(this.props.modalId, \"close\");\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._getDepositAddress();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._getDepositLimit();\r\n        this._estimateOutput();\r\n    }\r\n\r\n    componentWillReceiveProps(np) {\r\n        if (np.inputCoinType !== this.props.inputCoinType || np.outputCoinType !== this.props.outputCoinType) {\r\n            this._getDepositLimit(np);\r\n            this._estimateOutput(np);\r\n            this._getDepositAddress(np);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(np, ns) {\r\n        return (\r\n            np.inputCoinType !== this.props.inputCoinType ||\r\n            np.outputCoinType !== this.props.outputCoinType ||\r\n            np.sender !== this.props.sender ||\r\n            np.asset !== this.props.asset ||\r\n            np.isAvailable !== this.props.isAvailable ||\r\n            np.isDown !== this.props.isDown ||\r\n            !utils.are_equal_shallow(ns, this.state)\r\n        );\r\n    }\r\n\r\n    _getDepositLimit(props = this.props) {\r\n        this.setState({limitLoading: true});\r\n        getDepositLimit(props.inputCoinType, props.outputCoinType).then(res => {\r\n            this.setState({\r\n                depositLimit: res.depositLimit,\r\n                limitLoading: false\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"deposit limit error:\", err);\r\n            this.setState({\r\n                depositLimit: null,\r\n                limitLoading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    _onAmountChange(value, e) {\r\n        const regexp_numeral = new RegExp(/[[:digit:]]/);\r\n        const target = e.target;\r\n\r\n        // Ensure input is valid\r\n        if(!regexp_numeral.test(target.value)) {\r\n            target.value = target.value.replace(/[^0-9.]/g, \"\");\r\n        }\r\n\r\n        // Catch initial decimal input\r\n        if(target.value.charAt(0) == \".\") { \r\n            target.value = \"0.\"; \r\n        }\r\n\r\n        // Catch double decimal and remove if invalid\r\n        if(target.value.charAt(target.value.length) != target.value.search(\".\")) { \r\n            target.value.substr(1);\r\n        }\r\n\r\n        target.value = utils.limitByPrecision(target.value, 8);\r\n\r\n        switch(value) {\r\n            case \"input\":\r\n                this.setState({inputAmount: target.value}, this._estimateOutput.bind(this));\r\n                break;\r\n\r\n            case \"output\":\r\n                this.setState({outputAmount: target.value}, this._estimateInput.bind(this));\r\n                break;\r\n        }\r\n    }\r\n\r\n    _estimateOutput(props = this.props) {\r\n        this.setState({receiveAmount: 0, sendAmount: this.state.inputAmount});\r\n        if(!this.state.inputAmount) { return; }\r\n\r\n        this.setState({receiveLoading: true});\r\n        estimateOutput(this.state.inputAmount, props.inputCoinType, props.outputCoinType).then(res => {\r\n            this.setState({\r\n                inputAmount: res.inputAmount,\r\n                receiveAmount: res.outputAmount,\r\n                receiveLoading: false\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"receive amount err:\", err);\r\n            this.setState({receiveLoading: false, apiError: true});\r\n        });\r\n    }\r\n\r\n    _estimateInput(props = this.props) {\r\n        this.setState({receiveAmount: this.state.outputAmount, sendAmount: 0});\r\n        if(!this.state.outputAmount) { return; }\r\n\r\n        this.setState({receiveLoading: true});\r\n        estimateInput(this.state.outputAmount, props.inputCoinType, props.outputCoinType).then(res => {\r\n            this.setState({\r\n                inputAmount: res.inputAmount,\r\n                sendAmount: utils.limitByPrecision(res.inputAmount,8),\r\n                receiveLoading: false\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"send amount err:\", err);\r\n            this.setState({receiveLoading: false, apiError: true});\r\n        });\r\n    }\r\n\r\n    _getDepositAddress(props = this.props) {\r\n        if (!props.inputCoinType) return;\r\n        let receive_address;\r\n\r\n        /* Always generate new address/memo for increased security */\r\n        /*let account_name = props.sender.get(\"name\");\r\n        let receive_address = this.deposit_address_cache.getCachedInputAddress(\r\n            \"blocktrades\",\r\n            account_name,\r\n            props.inputCoinType.toLowerCase(),\r\n            props.outputCoinType.toLowerCase()\r\n        );*/\r\n        if (!receive_address) {\r\n            this.setState({receive_address: null});\r\n            requestDepositAddress(this._getDepositObject(props));\r\n        } else {\r\n            this.setState({\r\n                receive_address\r\n            });\r\n        }\r\n    }\r\n\r\n    _getDepositObject(props = this.props) {\r\n        return {\r\n            inputCoinType: props.inputCoinType.toLowerCase(),\r\n            outputCoinType: props.outputCoinType.toLowerCase(),\r\n            outputAddress: props.sender.get(\"name\"),\r\n            url: blockTradesAPIs.BASE,\r\n            stateCallback: (receive_address) => {\r\n                this.addDepositAddress(\r\n                    props.inputCoinType.toLowerCase(),\r\n                    props.outputCoinType.toLowerCase(),\r\n                    props.sender.get(\"name\"),\r\n                    receive_address\r\n                );\r\n            }\r\n        };\r\n    }\r\n\r\n    addDepositAddress( input_coin_type, output_coin_type, account, receive_address ) {\r\n        this.deposit_address_cache.cacheInputAddress(\r\n            \"blocktrades\",\r\n            account,\r\n            input_coin_type,\r\n            output_coin_type,\r\n            receive_address.address,\r\n            receive_address.memo\r\n        );\r\n        this.setState({\r\n            receive_address\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        ReactTooltip.rebuild();\r\n    }\r\n\r\n    _validateAddress(address, props = this.props) {\r\n        validateAddress({walletType: props.walletType, newAddress: address})\r\n            .then(isValid => {\r\n                if (this.state.toAddress === address) {\r\n                    this.setState({\r\n                        withdraw_address_check_in_progress: false,\r\n                        validAddress: isValid\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                console.error(\"Error when validating address:\", err);\r\n            });\r\n    }\r\n\r\n    _openRegistrarSite(e) {\r\n        e.preventDefault();\r\n        let newWnd = window.open(SettingsStore.site_registr, \"_blank\");\r\n        newWnd.opener = null;\r\n    }\r\n\r\n\r\n    _onDropDownSelect(e) {\r\n        SettingsActions.changeViewSetting({preferredBridge: e});\r\n    }\r\n\r\n    onBlockTradesContact() {\r\n        console.log(\"Open New Tab\");\r\n        let win = window.open(\"https://www.blocktrades.us/contact\", \"_blank\");\r\n        win.focus();\r\n    }\r\n\r\n    _renderDeposit() {\r\n        const {name: assetName, prefix} = utils.replaceName(this.props.asset.get(\"symbol\"), !!this.props.asset.get(\"bitasset\"));\r\n        const {receive_address, apiError} = this.state;\r\n        const hasMemo = receive_address && \"memo\" in receive_address && receive_address.memo;\r\n        const addressValue = receive_address && receive_address.address || \"\";\r\n        const QR = <div className=\"SimpleTrade__QR\"><QRCode size={140} value={addressValue}/></div>;\r\n\r\n        let bridgeAssets = Object.keys(this.props.bridges.toJS());\r\n\r\n        const inputName = this.props.inputCoinType.toUpperCase();\r\n        const receiveName = (prefix ? prefix : \"\") + assetName;\r\n\r\n        let price = (this.state.receiveAmount / this.state.inputAmount).toFixed(4);\r\n        let priceSuffix = receiveName + \"/\" + inputName;\r\n\r\n        const aboveLimit = this.state.inputAmount > parseFloat(this.state.depositLimit) || this.state.sendAmount > parseFloat(this.state.depositLimit);\r\n        const aboveLimitStyle = aboveLimit ? {border: \"1px solid #a94442\"} : null;\r\n\r\n        return (\r\n            <div className={!addressValue ? \"no-overflow\" : \"\"}>\r\n                <div className=\"SimpleTrade__withdraw-row\">\r\n                    <label className=\"left-label\">ASSET</label>\r\n                    <div className=\"inline-label input-wrapper\">\r\n                        <input disabled type=\"text\" defaultValue={receiveName} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"SimpleTrade__withdraw-row\">\r\n                    <div className=\"grid-block\">\r\n                        <label className=\"left-label\">BRIDGE</label>\r\n                        <span data-tip={counterpart.translate(\"tooltip.bridge_TRADE\")} className=\"inline-block tooltip\" onClick={this.onBlockTradesContact.bind(this)}>\r\n                            &nbsp;<Icon style={{position: \"relative\", top: 0}} name=\"question-circle\" />\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"inline-label input-wrapper\">\r\n                        <input disabled type=\"text\" defaultValue={\"BLOCKTRADES\"} /> {/* Change this when we gain more brdiges */}\r\n                    </div>\r\n                </div>\r\n                <span style={!apiError ? {display: \"\"} : {display: \"none\"}}>\r\n                    <div className=\"SimpleTrade__withdraw-row\">\r\n                        <div className=\"no-margin no-padding\">\r\n                            <div className=\"small-6\" style={{paddingRight: 10}}>\r\n                                <div className=\"grid-block\">\r\n                                    <label className=\"left-label\"><Translate content=\"transfer.send\" /></label>\r\n                                    {aboveLimit ? \r\n                                        <div className=\"error-msg inline-block tooltip\" data-tip={counterpart.translate(\"tooltip.over_limit\")}>\r\n                                            <Translate content=\"gateway.over_limit\" />&nbsp;<Icon name=\"question-circle\" />\r\n                                        </div> : null}\r\n                                </div>\r\n                                <div className=\"inline-label input-wrapper\">\r\n                                    <input style={aboveLimitStyle} type=\"text\" value={this.state.sendAmount} onInput={this._onAmountChange.bind(this, \"input\")}/>\r\n                                    <div className=\"form-label select floating-dropdown\">\r\n                                        <FloatingDropdown\r\n                                            entries={bridgeAssets}\r\n                                            values={bridgeAssets.reduce((map, a) => {if (a) map[a] = a; return map;}, {})}\r\n                                            singleEntry={bridgeAssets[0]}\r\n                                            value={this.props.preferredBridge || bridgeAssets[0]}\r\n                                            onChange={this._onDropDownSelect}\r\n                                            upperCase\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"small-6\" style={{paddingLeft: 10}}>\r\n                                <label className=\"left-label\"><Translate content=\"gateway.deposit_limit\" /></label>\r\n                                <div className=\"inline-label input-wrapper\">\r\n                                    <input disabled type=\"number\" value={this.state.depositLimit && parseFloat(this.state.depositLimit).toFixed(4) || 0}/>\r\n                                    <div className=\"input-right-symbol\">{inputName}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"SimpleTrade__withdraw-row\">\r\n                        <div className=\"no-margin no-padding\">\r\n                            <div className=\"small-6\" style={{paddingRight: 10}}>\r\n                                <label className=\"left-label\"><Translate content=\"exchange.receive\" /></label>\r\n                                <div className=\"inline-label input-wrapper\">\r\n                                    <input style={aboveLimitStyle} type=\"text\" value={this.state.receiveAmount} onInput={this._onAmountChange.bind(this, \"output\")} />\r\n                                    <div className=\"input-right-symbol\">{receiveName}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"small-6\" style={{paddingLeft: 10}}>\r\n                                <div className=\"grid-block\">\r\n                                    <label className=\"left-label\"><Translate content=\"exchange.price\" />\r\n                                    &nbsp;&nbsp;{this.state.receiveLoading ? <Translate content=\"footer.loading\" /> : \"\"}</label>\r\n                                </div>\r\n                                <div className=\"inline-label input-wrapper\">\r\n                                    <input disabled type=\"number\" value={aboveLimit ? 0 : price} />\r\n                                    <div className=\"input-right-symbol\">{priceSuffix}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {!addressValue ? <div style={{textAlign: \"center\"}}><LoadingIndicator type=\"three-bounce\"/></div> :\r\n                        <div className=\"SimpleTrade__withdraw-row\" style={{textAlign: \"center\"}}>\r\n                            {hasMemo ? null : QR}\r\n                            <div className=\"grid-block SimpleTrade__deposit-info\">\r\n                                <div className=\"copyIcon\">\r\n                                    <CopyButton text={addressValue} className={\"SimpleTrade__copyIcon\"} />\r\n                                </div>\r\n                                <div className=\"deposit-details\">\r\n                                    <div><Translate content=\"gateway.purchase_notice\" inputAsset={inputName} outputAsset={receiveName} /></div>\r\n                                    <div>{addressValue}</div>\r\n                                </div>\r\n                            </div>\r\n                            {hasMemo ?\r\n                                <div className=\"grid-block SimpleTrade__deposit-info\" style={{marginTop: \"10px\"}}>\r\n                                    <div className=\"copyIcon\">\r\n                                        <CopyButton text={receive_address.memo} className={\"SimpleTrade__copyIcon\"} />\r\n                                    </div>\r\n                                    <div className=\"deposit-details\">\r\n                                        <div><Translate unsafe content=\"gateway.purchase_notice_memo\" /></div>\r\n                                        <div>{receive_address.memo}</div>\r\n                                    </div>\r\n                                </div> : null}\r\n                        </div>}\r\n                    <div className=\"SimpleTrade__withdraw-row\" style={{textAlign: \"center\", paddingBottom: \"2rem\"}}>\r\n                        <div className=\"no-margin no-padding\">\r\n                            <button className=\"ActionButton_Close\" onClick={this.onClose.bind(this)}>\r\n                                <Translate content=\"transfer.close\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n                <span style={apiError ? {display: \"\"} : {display: \"none\"}}>\r\n                    <div className=\"SimpleTrade__withdraw-row\" style={{textAlign: \"center\", paddingBottom: \"2rem\", color: \"#bb2926\"}}>\r\n                        <Translate className=\"txtlabel cancel\" content=\"gateway.unavailable_TRADE\" component=\"p\" />\r\n                        <button className=\"ActionButton_Close\" onClick={this.onClose.bind(this)}>\r\n                            <Translate content=\"transfer.close\" />\r\n                        </button>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _renderCurrentBalance() {\r\n        const {name: assetName} = utils.replaceName(this.props.asset.get(\"symbol\"), !!this.props.asset.get(\"bitasset\"));\r\n        const isDeposit = this.props.action === \"deposit\";\r\n\r\n        let currentBalance = this.props.balances.find(b => {\r\n            return b && b.get(\"asset_type\") === this.props.asset.get(\"id\");\r\n        });\r\n\r\n        let asset = currentBalance ? new Asset({\r\n            asset_id: currentBalance.get(\"asset_type\"),\r\n            precision: this.props.asset.get(\"precision\"),\r\n            amount: currentBalance.get(\"balance\")\r\n        }) : null;\r\n\r\n        const applyBalanceButton = isDeposit ?\r\n            <span style={{border: \"2px solid black\", borderLeft: \"none\"}} className=\"form-label\">{assetName}</span> :\r\n        (\r\n            <button\r\n                data-place=\"right\" data-tip={counterpart.translate(\"tooltip.withdraw_full\")}\r\n                className=\"button\"\r\n                style={{border: \"2px solid black\", borderLeft: \"none\"}}\r\n                onClick={this._updateAmount.bind(this, !currentBalance ? 0 : parseInt(currentBalance.get(\"balance\"), 10))}\r\n            >\r\n                <Icon name=\"clippy\" />\r\n            </button>\r\n        );\r\n\r\n        return (\r\n            <div className=\"SimpleTrade__withdraw-row\" style={{fontSize: \"1rem\"}}>\r\n                <label style={{fontSize: \"1rem\"}}>\r\n                    {counterpart.translate(\"gateway.balance_asset\", {asset: assetName})}:\r\n                    <span className=\"inline-label\">\r\n                        <input\r\n                            disabled\r\n                            style={{color: \"black\", border: \"2px solid black\", padding: 10, width: \"100%\"}}\r\n                            value={!asset ? 0 : asset.getAmount({real: true})}\r\n                        />\r\n                        {applyBalanceButton}\r\n                    </span>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let {asset} = this.props;\r\n\r\n        if (!asset) {\r\n            return null;\r\n        }\r\n        \r\n        let logo = require(\"assets/logo-ico-blue.png\");\r\n\r\n        return (\r\n            <div className=\"SimpleTrade__modal\">\r\n                <div className=\"Modal__header\" style={{background: \"none\"}}></div>\r\n                \r\n                <div\r\n                    className=\"grid-block vertical no-overflow\"\r\n                    style={{\r\n                        zIndex: 1002,\r\n                        paddingLeft: \"2rem\",\r\n                        paddingRight: \"2rem\",\r\n                    }}>\r\n\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <img style={{margin: 0, height: 80}} src={logo} /><br />\r\n                        <p style={{fontSize: \"1.8rem\", fontWeight: \"bold\", marginBottom: 0}}>Buy</p>\r\n                    </div>\r\n\r\n                    {this.props.isDown ?\r\n                        <div style={{textAlign: \"center\"}}><Translate className=\"txtlabel cancel\" content=\"gateway.unavailable_TRADE\" component=\"p\" /></div> :\r\n                        !this.props.isAvailable ? <div style={{textAlign: \"center\"}}><Translate className=\"txtlabel cancel\" content=\"gateway.unavailable\" component=\"p\" /></div> :\r\n                        this._renderDeposit()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nSimpleDepositBlocktradesBridge = BindToChainState(SimpleDepositBlocktradesBridge);\r\n\r\nclass StoreWrapper extends React.Component {\r\n    render() {\r\n        let {preferredBridge, ...others} = this.props;\r\n        let currentBridge = this.props.bridges.get(this.props.preferredBridge);\r\n        if (!currentBridge) {\r\n            currentBridge = this.props.bridges.first();\r\n            preferredBridge = currentBridge.inputCoinType;\r\n        }\r\n        return <SimpleDepositBlocktradesBridge {...others} preferredBridge={preferredBridge} {...currentBridge.toJS()} />;\r\n    }\r\n}\r\n\r\nStoreWrapper = connect(StoreWrapper, {\r\n    listenTo() {\r\n        return [SettingsStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            preferredBridge: SettingsStore.getState().viewSettings.get(\"preferredBridge\", \"btc\")\r\n        };\r\n    }\r\n});\r\n\r\nexport default class SimpleDepositBlocktradesBridgeModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    show() {\r\n        this.setState({open: true}, () => {\r\n            ZfApi.publish(this.props.modalId, \"open\");\r\n        });\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({open: false});\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.bridges) return null;\r\n\r\n        return (\r\n            <BaseModal className=\"test\" onClose={this.onClose.bind(this)} id={this.props.modalId} overlay={true}>\r\n                {this.state.open ? <StoreWrapper {...this.props} open={this.state.open} /> : null}\r\n            </BaseModal>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Dashboard/SimpleDepositBlocktradesBridge.jsx","import React, {PropTypes} from \"react\";\r\nimport {isFinite} from \"lodash\";\r\nimport ZfApi from \"react-foundation-apps/src/utils/foundation-api\";\r\nimport BaseModal from \"./BaseModal\";\r\nimport Trigger from \"react-foundation-apps/src/trigger\";\r\nimport Translate from \"react-translate-component\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport FormattedAsset from \"../Utility/FormattedAsset\";\r\nimport utils from \"common/utils\";\r\nimport classNames from \"classnames\";\r\nimport AmountSelector from \"../Utility/AmountSelector\";\r\nimport BalanceComponent from \"../Utility/BalanceComponent\";\r\nimport WalletApi from \"api/WalletApi\";\r\nimport WalletDb from \"stores/WalletDb\";\r\nimport FormattedPrice from \"../Utility/FormattedPrice\";\r\nimport counterpart from \"counterpart\";\r\nimport HelpContent from \"../Utility/HelpContent\";\r\nimport Immutable from \"immutable\";\r\nimport {ChainStore} from \"seerjs/es\";\r\n\r\n/**\r\n *  Given an account and an asset id, render a modal allowing modification of a margin position for that asset\r\n *\r\n *  Expected Properties:\r\n *     quote_asset:  asset id, must be a bitasset\r\n *     account: full_account object for the account to use\r\n *\r\n */\r\n\r\nclass BorrowModalContent extends React.Component {\r\n\r\n    static propTypes = {\r\n        quote_asset: ChainTypes.ChainAsset.isRequired,\r\n        bitasset_balance: ChainTypes.ChainObject,\r\n        backing_asset: ChainTypes.ChainAsset.isRequired,\r\n        backing_balance: ChainTypes.ChainObject,\r\n        call_orders: ChainTypes.ChainObjectsList,\r\n        hasCallOrders: PropTypes.bool\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = this._initialState(props);\r\n    }\r\n\r\n    _initialState(props) {\r\n        let currentPosition = props ? this._getCurrentPosition(props) : {};\r\n\r\n        if (currentPosition.collateral) {\r\n            let debt = utils.get_asset_amount(currentPosition.debt, props.quote_asset);\r\n            let collateral = utils.get_asset_amount(currentPosition.collateral, props.backing_asset);\r\n            return {\r\n                short_amount: debt ? debt.toString() : null,\r\n                collateral: collateral ? collateral.toString() : null,\r\n                collateral_ratio: this._getCollateralRatio(debt, collateral),\r\n                errors: this._getInitialErrors(),\r\n                isValid: false,\r\n                original_position: {\r\n                    debt: debt,\r\n                    collateral: collateral\r\n                }\r\n            };\r\n        } else {\r\n            return {\r\n                short_amount: 0,\r\n                collateral: 0,\r\n                collateral_ratio: this._getInitialCollateralRatio(props),\r\n                errors: this._getInitialErrors(),\r\n                isValid: false,\r\n                original_position: {\r\n                    debt: 0,\r\n                    collateral: 0\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let newState = this._initialState(this.props);\r\n\r\n        this.setState(newState);\r\n        this._setUpdatedPosition(newState);\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (\r\n            !utils.are_equal_shallow(nextState, this.state) ||\r\n            !Immutable.is(nextProps.quote_asset, this.props.quote_asset) ||\r\n            !nextProps.backing_asset.get(\"symbol\") === this.props.backing_asset.get(\"symbol\") ||\r\n            !Immutable.is(nextProps.account, this.props.account) ||\r\n            !Immutable.is(nextProps.call_orders, this.props.call_orders)\r\n        );\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { short_amount, collateral, collateral_ratio } = this.state;\r\n\r\n        if (nextProps.account !== this.props.account ||\r\n            nextProps.hasCallOrders !== this.props.hasCallOrders ||\r\n            nextProps.quote_asset.get(\"id\") !== this.props.quote_asset.get(\"id\")\r\n            ) {\r\n\r\n            let newState = this._initialState(nextProps);\r\n\r\n            let revalidate = false;\r\n            if(short_amount || collateral || collateral_ratio){\r\n                newState.short_amount = short_amount;\r\n                newState.collateral = collateral;\r\n                newState.collateral_ratio = collateral_ratio;\r\n                revalidate = true;\r\n            }\r\n\r\n            this.setState(newState);\r\n\r\n            if(revalidate){\r\n                this._validateFields(newState);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getInitialErrors() {\r\n        return {\r\n            collateral_balance: null,\r\n            ratio_too_high: null\r\n        };\r\n    }\r\n\r\n    confirmClicked(e) {\r\n        e.preventDefault();\r\n        ZfApi.publish(this.props.modalId, \"close\");\r\n    }\r\n\r\n    _onBorrowChange(e) {\r\n        let feed_price = this._getFeedPrice();\r\n        let amount = e.amount.replace( /,/g, \"\" );\r\n        let newState = {\r\n            short_amount: amount,\r\n            collateral: (this.state.collateral_ratio * (amount / feed_price)).toFixed(this.props.backing_asset.get(\"precision\")),\r\n            collateral_ratio: this.state.collateral_ratio\r\n        };\r\n\r\n        this.setState(newState);\r\n        this._validateFields(newState);\r\n        this._setUpdatedPosition(newState);\r\n    }\r\n\r\n    _onCollateralChange(e) {\r\n        let amount = e.amount.replace( /,/g, \"\" );\r\n\r\n        let feed_price = this._getFeedPrice();\r\n        const collateralRatio = amount / (this.state.short_amount / feed_price);\r\n\r\n        let newState = this._isPredictionMarket(this.props) ? {\r\n            short_amount: amount,\r\n            collateral: amount,\r\n            collateral_ratio: 1\r\n        } : {\r\n            short_amount: this.state.short_amount,\r\n            collateral: amount,\r\n            collateral_ratio: isFinite(collateralRatio) ? collateralRatio : this._getInitialCollateralRatio(this.props),\r\n        };\r\n\r\n        this.setState(newState);\r\n        this._validateFields(newState);\r\n        this._setUpdatedPosition(newState);\r\n    }\r\n\r\n    _onRatioChange(e) {\r\n        let feed_price = this._getFeedPrice();\r\n\r\n        let ratio = e.target.value;\r\n\r\n        let newState = {\r\n            short_amount: this.state.short_amount,\r\n            collateral: ((this.state.short_amount / feed_price) * ratio).toFixed(this.props.backing_asset.get(\"precision\")),\r\n            collateral_ratio: ratio\r\n        };\r\n\r\n        this.setState(newState);\r\n        this._validateFields(newState);\r\n        this._setUpdatedPosition(newState);\r\n    }\r\n\r\n    _maximizeCollateral() {\r\n        let currentPosition = this.props ? this._getCurrentPosition(this.props) : {};\r\n        let initialCollateral = 0;\r\n\r\n        if (currentPosition.collateral) {\r\n            initialCollateral = utils.get_asset_amount(currentPosition.collateral, this.props.backing_asset);\r\n        }\r\n\r\n        // Make sure we don't go over the maximum collateral ratio of\r\n        let maximizedCollateral = Math.floor(Math.min(\r\n          this.props.backing_balance.get(\"balance\") / utils.get_asset_precision(this.props.backing_asset) + initialCollateral - 10,\r\n          (this.state.short_amount / this._getFeedPrice()) * 1000.0\r\n        ));\r\n\r\n        this._onCollateralChange(new Object({ amount: maximizedCollateral.toString() }));\r\n    }\r\n\r\n    _setUpdatedPosition(newState) {\r\n        this.setState({\r\n            newPosition: (parseFloat(newState.short_amount) / parseFloat(newState.collateral))\r\n        });\r\n    }\r\n\r\n\r\n    _validateFields(newState) {\r\n        let errors = this._getInitialErrors();\r\n        let {original_position} = this.state;\r\n        let backing_balance = !this.props.backing_balance ? {balance: 0} : this.props.backing_balance.toJS();\r\n\r\n\r\n        if ( (parseFloat(newState.collateral)-original_position.collateral) > utils.get_asset_amount(backing_balance.balance, this.props.backing_asset.toJS())) {\r\n            errors.collateral_balance = counterpart.translate(\"borrow.errors.collateral\");\r\n        }\r\n        let isValid = (newState.short_amount >= 0 && newState.collateral >= 0) && (newState.short_amount != original_position.debt || newState.collateral != original_position.collateral);\r\n\r\n        // let sqp = this.props.quote_asset.getIn([\"bitasset\", \"current_feed\", \"maximum_short_squeeze_ratio\"]) / 1000;\r\n        let mcr = this.props.quote_asset.getIn([\"bitasset\", \"current_feed\", \"maintenance_collateral_ratio\"]) / 1000;\r\n        if (parseFloat(newState.collateral_ratio) < (this._isPredictionMarket(this.props) ? 1 : mcr)) {\r\n            errors.below_maintenance = counterpart.translate(\"borrow.errors.below\", {mr: mcr});\r\n            isValid = false;\r\n        } else if (parseFloat(newState.collateral_ratio) < (this._isPredictionMarket(this.props) ? 1 : (mcr + 0.5))) {\r\n            errors.close_maintenance = counterpart.translate(\"borrow.errors.close\", {mr: mcr});\r\n            isValid = true;\r\n        }\r\n\r\n        this.setState({errors, isValid});\r\n    }\r\n\r\n    _onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let quotePrecision = utils.get_asset_precision(this.props.quote_asset.get(\"precision\"));\r\n        let backingPrecision = utils.get_asset_precision(this.props.backing_asset.get(\"precision\"));\r\n        let currentPosition = this._getCurrentPosition(this.props);\r\n\r\n        var tr = WalletApi.new_transaction();\r\n        tr.add_type_operation(\"call_order_update\", {\r\n            \"fee\": {\r\n                amount: 0,\r\n                asset_id: 0\r\n            },\r\n            \"funding_account\": this.props.account.get(\"id\"),\r\n            \"delta_collateral\": {\r\n                \"amount\": parseInt(this.state.collateral * backingPrecision - currentPosition.collateral, 10),\r\n                \"asset_id\": this.props.backing_asset.get(\"id\")\r\n            },\r\n            \"delta_debt\": {\r\n                \"amount\": parseInt(this.state.short_amount * quotePrecision - currentPosition.debt, 10),\r\n                \"asset_id\": this.props.quote_asset.get(\"id\")\r\n            }});\r\n        WalletDb.process_transaction(tr, null, true).catch(err => {\r\n            // console.log(\"unlock failed:\", err);\r\n        });\r\n\r\n        ZfApi.publish(this.props.modalId, \"close\");\r\n    }\r\n\r\n    _getCurrentPosition(props) {\r\n        let currentPosition = {\r\n            collateral: null,\r\n            debt: null\r\n        };\r\n\r\n\r\n        if (props && props.hasCallOrders && props.call_orders) {\r\n            for (let key in props.call_orders) {\r\n                if (props.call_orders.hasOwnProperty(key) && props.call_orders[key]) {\r\n                    if (props.quote_asset.get(\"id\") === props.call_orders[key].getIn([\"call_price\", \"quote\", \"asset_id\"])) {\r\n                        currentPosition = props.call_orders[key].toJS();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return currentPosition;\r\n    }\r\n\r\n    _getFeedPrice() {\r\n        if (!this.props) {\r\n            return 1;\r\n        }\r\n\r\n        if (this._isPredictionMarket(this.props)) {\r\n            return 1;\r\n        }\r\n\r\n        return 1 / utils.get_asset_price(\r\n            this.props.quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"quote\", \"amount\"]),\r\n            this.props.backing_asset,\r\n            this.props.quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"base\", \"amount\"]),\r\n            this.props.quote_asset\r\n        );\r\n    }\r\n\r\n    _getInitialCollateralRatio(props) {\r\n        return this._isPredictionMarket(props) ? 1 : 0;\r\n    }\r\n\r\n    _getCollateralRatio(debt, collateral) {\r\n        return collateral / (debt / this._getFeedPrice());\r\n    }\r\n\r\n    _isPredictionMarket(props) {\r\n        return props.quote_asset.getIn([\"bitasset\", \"is_prediction_market\"]);\r\n    }\r\n\r\n    render() {\r\n        let {quote_asset, bitasset_balance, backing_asset, backing_balance} = this.props;\r\n        let {short_amount, collateral, collateral_ratio, errors, isValid} = this.state;\r\n        let quotePrecision = utils.get_asset_precision(this.props.quote_asset.get(\"precision\"));\r\n        let backingPrecision = utils.get_asset_precision(this.props.backing_asset.get(\"precision\"));\r\n\r\n        if (!collateral_ratio || isNaN(collateral_ratio) || !(collateral_ratio > 0.0 && collateral_ratio < 1000.0)) collateral_ratio = 0;\r\n        bitasset_balance = !bitasset_balance ? {balance: 0, id: null} : bitasset_balance.toJS();\r\n        backing_balance = !backing_balance ? {balance: 0, id: null} : backing_balance.toJS();\r\n\r\n        let collateralClass = classNames(\"form-group\", {\"has-error\": errors.collateral_balance});\r\n        let collateralRatioClass = classNames(\"form-group\", {\"has-error\": errors.below_maintenance}, {\"has-warning\": errors.close_maintenance});\r\n        let buttonClass = classNames(\"button\", {disabled: errors.collateral_balance || !isValid}, {success: isValid});\r\n\r\n        // Dynamically update user's remaining collateral\r\n        let currentPosition = this._getCurrentPosition(this.props);\r\n        let backingBalance = backing_balance.id ? ChainStore.getObject(backing_balance.id) : null;\r\n        let backingAmount = backingBalance ? backingBalance.get(\"balance\") : 0;\r\n        let collateralChange = parseInt(this.state.collateral * backingPrecision - currentPosition.collateral, 10);\r\n        let remainingBalance = backingAmount - collateralChange;\r\n\r\n        let bitAssetBalanceText = <span><Translate component=\"span\" content=\"transfer.available\"/>: {bitasset_balance.id ? <BalanceComponent balance={bitasset_balance.id}/> : <FormattedAsset amount={0} asset={quote_asset.get(\"id\")} />}</span>;\r\n        let backingBalanceText = <span><Translate component=\"span\" content=\"transfer.available\"/>: {backing_balance.id ? <FormattedAsset amount={remainingBalance} asset={backing_asset.get(\"id\")} /> : <FormattedAsset amount={0} asset={backing_asset.get(\"id\")} />}</span>;\r\n\r\n        let feed_price = this._getFeedPrice();\r\n\r\n        let maintenanceRatio = this.props.quote_asset.getIn([\"bitasset\", \"current_feed\", \"maintenance_collateral_ratio\"]) / 1000;\r\n        let squeezeRatio = this.props.quote_asset.getIn([\"bitasset\", \"current_feed\", \"maximum_short_squeeze_ratio\"]) / 1000;\r\n\r\n        let isPredictionMarket = this._isPredictionMarket(this.props);\r\n\r\n        if (!isPredictionMarket && isNaN(feed_price)) {\r\n            return (\r\n                <div>\r\n                    <form className=\"grid-container text-center no-overflow\" noValidate>\r\n                        <Translate component=\"h3\" content=\"borrow.no_valid\" asset_symbol={quote_asset.get(\"symbol\")} />\r\n                    </form>\r\n                    <div className=\"grid-content button-group text-center no-overflow\">\r\n                        <Trigger close={this.props.modalId}>\r\n                            <div className=\" button warning\"><Translate content=\"account.perm.cancel\" /></div>\r\n                        </Trigger>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <form className=\"grid-container small-10 small-offset-1 no-overflow\" noValidate>\r\n                    <Translate component=\"h3\" content=\"borrow.title\" asset_symbol={quote_asset.get(\"symbol\")} />\r\n                    <div style={{textAlign: \"left\"}}>\r\n\r\n                        {this.props.hide_help ? null :\r\n                            <HelpContent\r\n                                path={\"components/\" +(isPredictionMarket ? \"BorrowModalPrediction\" : \"BorrowModal\")}\r\n                                debt={quote_asset.get(\"symbol\")}\r\n                                collateral={backing_asset.get(\"symbol\")}\r\n                                borrower={this.props.account.get(\"name\")}\r\n                                mr={maintenanceRatio}\r\n                            />}\r\n\r\n                        {!isPredictionMarket ? (\r\n                            <div style={{paddingBottom: \"1rem\"}} >\r\n                                <div className=\"borrow-price-feeds\">\r\n                                    <span className=\"borrow-price-label\"><Translate content=\"transaction.feed_price\" />:&nbsp;</span>\r\n                                    <FormattedPrice\r\n                                        noPopOver\r\n                                        quote_amount={quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"base\", \"amount\"])}\r\n                                        quote_asset={quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"base\", \"asset_id\"])}\r\n                                        base_asset={quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"quote\", \"asset_id\"])}\r\n                                        base_amount={quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"quote\", \"amount\"])}\r\n                                        />\r\n                            </div>\r\n                            {/* <div className=\"borrow-price-feeds\">\r\n                                <span\r\n                                    className=\"inline-block tooltip borrow-price-label\"\r\n                                    data-place=\"bottom\"\r\n                                    data-tip={counterpart.translate(\"tooltip.margin_price\")}\r\n                                ><Translate content=\"exchange.squeeze\" />:&nbsp;</span>\r\n                                <FormattedPrice\r\n                                    decimals={2}\r\n                                    callPrice\r\n                                    noPopOver\r\n                                    quote_amount={quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"base\", \"amount\"])}\r\n                                    quote_asset={quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"base\", \"asset_id\"])}\r\n                                    base_asset={quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"quote\", \"asset_id\"])}\r\n                                    base_amount={squeezeRatio * quote_asset.getIn([\"bitasset\", \"current_feed\", \"settlement_price\", \"quote\", \"amount\"])}\r\n                                    />\r\n                            </div> */}\r\n                            <b/>\r\n                            <div className={\"borrow-price-final \" + (errors.below_maintenance ? \"has-error\" : errors.close_maintenance ? \"has-warning\" : \"\")}>\r\n                                <span className=\"borrow-price-label\"><Translate content=\"exchange.your_price\" />:&nbsp;</span>\r\n                                {this.state.newPosition ?\r\n                                    <FormattedPrice\r\n                                        noPopOver\r\n                                        quote_amount={maintenanceRatio * this.state.short_amount * quotePrecision}\r\n                                        quote_asset={quote_asset.get(\"id\")}\r\n                                        base_asset={backing_asset.get(\"id\")}\r\n                                        base_amount={this.state.collateral * backingPrecision}\r\n                                    /> : null}\r\n                            </div>\r\n                        </div>) : null}\r\n\r\n                        <div className=\"form-group\">\r\n                            <AmountSelector label=\"transaction.borrow_amount\"\r\n                                            amount={short_amount.toString()}\r\n                                            onChange={this._onBorrowChange.bind(this)}\r\n                                            asset={quote_asset.get(\"id\")}\r\n                                            assets={[quote_asset.get(\"id\")]}\r\n                                            display_balance={bitAssetBalanceText}\r\n                                            placeholder=\"0.0\"\r\n                                            tabIndex={1}/>\r\n                        </div>\r\n                        <div className={collateralClass}>\r\n                            <AmountSelector label=\"transaction.collateral\"\r\n                                            amount={collateral.toString()}\r\n                                            onChange={this._onCollateralChange.bind(this)}\r\n                                            asset={backing_asset.get(\"id\")}\r\n                                            assets={[backing_asset.get(\"id\")]}\r\n                                            display_balance={backingBalanceText}\r\n                                            placeholder=\"0.0\"\r\n                                            tabIndex={1}/>\r\n                            {errors.collateral_balance ? <div style={{paddingTop: \"0.5rem\"}}>{errors.collateral_balance}</div> : null}\r\n                        </div>\r\n                        {!isPredictionMarket ? (\r\n                            <div>\r\n                                <div className={collateralRatioClass}>\r\n                                    <Translate component=\"label\" content=\"borrow.coll_ratio\" />\r\n                                    <input min=\"0\" max=\"6\" step=\"0.01\" onChange={this._onRatioChange.bind(this)} value={collateral_ratio} type=\"range\" disabled={!short_amount}/>\r\n                                    <div className=\"inline-block\">{utils.format_number(collateral_ratio, 2)}</div>\r\n                                    {errors.below_maintenance || errors.close_maintenance ? <div style={{maxWidth: \"calc(100% - 50px)\"}} className=\"float-right\">{errors.below_maintenance}{errors.close_maintenance}</div> : null}\r\n                                </div>\r\n                            </div>\r\n                          ) : null}\r\n                        <div className=\"no-padding grid-content button-group no-overflow\">\r\n                            <div onClick={this._onSubmit.bind(this)} href className={buttonClass}><Translate content=\"borrow.adjust\" /></div>\r\n                            <div onClick={(e) => {e.preventDefault(); this.setState(this._initialState(this.props));}} href className=\"button info\"><Translate content=\"wallet.reset\" /></div>\r\n                            {/*<Trigger close={this.props.modalId}>\r\n                                <div className=\"button\"><Translate content=\"account.perm.cancel\" /></div>\r\n                            </Trigger>*/}\r\n                            <div href className=\"float-right button info\" onClick={this._maximizeCollateral.bind(this)}>Maximize Collateral</div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nBorrowModalContent = BindToChainState(BorrowModalContent, {keep_updating: true});\r\n\r\n/* This wrapper class appears to be necessary because the decorator eats the show method from refs */\r\nexport default class ModalWrapper extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            smallScreen: false\r\n        };\r\n    }\r\n\r\n    show() {\r\n        let modalId = \"borrow_modal_\" + this.props.quote_asset;\r\n        ZfApi.publish(modalId, \"open\");\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            smallScreen: window.innerHeight <= 800\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {quote_asset, backing_asset, account} = this.props;\r\n        let modalId = \"borrow_modal_\" + quote_asset;\r\n        let accountBalance = account.get(\"balances\").toJS();\r\n        let coreBalance, bitAssetBalance;\r\n\r\n        if (accountBalance) {\r\n            for (var id in accountBalance) {\r\n\r\n                if (id === backing_asset) {\r\n                    coreBalance = accountBalance[id];\r\n                }\r\n\r\n                if (id === quote_asset) {\r\n                    bitAssetBalance = accountBalance[id];\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <BaseModal id={modalId} overlay={true} ref={modalId}>\r\n                <div className=\"grid-block vertical\">\r\n                    <BorrowModalContent\r\n                        quote_asset={quote_asset}\r\n                        call_orders={account.get(\"call_orders\")}\r\n                        hasCallOrders={account.get(\"call_orders\") && account.get(\"call_orders\").size > 0}\r\n                        modalId={modalId}\r\n                        bitasset_balance={bitAssetBalance}\r\n                        backing_balance={coreBalance}\r\n                        backing_asset={backing_asset}\r\n                        hide_help={this.state.smallScreen}\r\n                        account={account}\r\n                    />\r\n                </div>\r\n            </BaseModal>\r\n            );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Modal/BorrowModal.jsx","import React from \"react\";\r\nimport ZfApi from \"react-foundation-apps/src/utils/foundation-api\";\r\nimport BaseModal from \"./BaseModal\";\r\nimport Translate from \"react-translate-component\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport utils from \"common/utils\";\r\nimport BalanceComponent from \"../Utility/BalanceComponent\";\r\nimport WalletApi from \"api/WalletApi\";\r\nimport WalletDb from \"stores/WalletDb\";\r\nimport counterpart from \"counterpart\";\r\nimport {ChainStore} from \"seerjs/es\";\r\nimport AmountSelector from \"../Utility/AmountSelector\";\r\n\r\nclass ModalContent extends React.Component {\r\n    static propTypes = {\r\n        asset: ChainTypes.ChainAsset.isRequired,\r\n        account: ChainTypes.ChainAccount.isRequired\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            amount: 0\r\n        };\r\n    }\r\n\r\n    onAmountChanged({amount,asset}) {\r\n        this.setState({amount: amount});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        ZfApi.publish(\"settlement_modal\", \"close\");\r\n\r\n        let precision = utils.get_asset_precision(this.props.asset.get(\"precision\"));\r\n        let amount = this.state.amount.replace(/,/g, \"\");\r\n        amount *= precision;\r\n\r\n        var tr = WalletApi.new_transaction();\r\n        tr.add_type_operation(\"asset_settle\", {\r\n            fee: {\r\n                amount: 0,\r\n                asset_id: 0\r\n            },\r\n            \"account\": this.props.account.get(\"id\"),\r\n            \"amount\": {\r\n                \"amount\": amount,\r\n                \"asset_id\": this.props.asset.get(\"id\")\r\n            }\r\n        });\r\n        return WalletDb.process_transaction(tr, null, true).then(result => {\r\n            // console.log(\"asset settle result:\", result);\r\n            // this.dispatch(account_id);\r\n            return true;\r\n        }).catch(error => {\r\n            console.error(\"asset settle error: \", error);\r\n            return false;\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let {asset, account} = this.props;\r\n        let {amount} = this.state;\r\n\r\n        if (!asset) {\r\n            return null;\r\n        }\r\n\r\n        let assetID = asset.get('id');\r\n\r\n        let account_balances = account.get(\"balances\");\r\n\r\n        let currentBalance = null, balanceAmount = 0;\r\n\r\n        account_balances && account_balances.forEach( balance => {\r\n            let balanceObject = ChainStore.getObject(balance);\r\n            if (!balanceObject.get(\"balance\")) {\r\n                return null;\r\n            }\r\n            if (balanceObject.get(\"asset_type\") === assetID) {\r\n                currentBalance = balance;\r\n                balanceAmount = balanceObject.get(\"balance\");\r\n            }\r\n        })\r\n\r\n        let precision = utils.get_asset_precision(asset.get(\"precision\"));\r\n        let parsedAmount = amount ? amount.replace(/,/g, \"\") : 0;\r\n        let submit_btn_class = parseFloat(parsedAmount) > 0 && parseFloat(parsedAmount) * precision <= parseFloat(balanceAmount) ? \"button success\" : \"button disabled\";\r\n\r\n        let balanceText = currentBalance ? (\r\n            <span>\r\n                <Translate content=\"exchange.balance\"/>:&nbsp;\r\n                <BalanceComponent balance={currentBalance}/>\r\n            </span>) : null;\r\n\r\n        return (\r\n            <form className=\"grid-block vertical full-width-content\">\r\n                <Translate component=\"h3\" content=\"modal.settle.title\" asset={asset.get(\"symbol\")} />\r\n                <div className=\"grid-container \" style={{paddingTop: \"2rem\"}}>\r\n                    <div className=\"content-block\" style={{maxWidth: \"25rem\"}}>\r\n                        <AmountSelector label=\"modal.settle.amount\"\r\n                                        amount={amount}\r\n                                        onChange={this.onAmountChanged.bind(this)}\r\n                                        display_balance={balanceText}\r\n                                        asset={ assetID  }\r\n                                        assets={[assetID]}\r\n                                        tabIndex={1}/>\r\n                    </div>\r\n                    <div className=\"content-block\">\r\n                        <input type=\"submit\" className={submit_btn_class}\r\n                               onClick={this.onSubmit.bind(this)}\r\n                               value={counterpart.translate(\"modal.settle.submit\")}/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nModalContent = BindToChainState(ModalContent, {keep_updating: true});\r\n\r\nclass SettleModal extends React.Component {\r\n\r\n    show() {\r\n        ZfApi.publish(\"settlement_modal\", \"open\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BaseModal id=\"settlement_modal\" overlay={true} ref=\"settlement_modal\">\r\n                <div className=\"grid-block vertical\">\r\n                    <ModalContent {...this.props} />\r\n                </div>\r\n            </BaseModal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettleModal;\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Modal/SettleModal.jsx","import React from \"react\";\r\nimport {FormattedNumber} from \"react-intl\";\r\nimport ChainTypes from \"./ChainTypes\";\r\nimport BindToChainState from \"./BindToChainState\";\r\nimport { connect } from \"alt-react\";\r\nimport MarketsStore from \"stores/MarketsStore\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {MarketStats} from \"../Utility/MarketPrice\";\r\n\r\n/**\r\n *  Displays change in market value for an asset\r\n *\r\n *  Expects three properties\r\n *  -'quote' which should be a asset id\r\n *  -'base' which is the asset id of the original asset amount\r\n */\r\n\r\nclass MarketChangeComponent extends MarketStats {\r\n\r\n    static propTypes = {\r\n        quote: ChainTypes.ChainAsset.isRequired,\r\n        base: ChainTypes.ChainAsset.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        quote: \"1.3.0\",\r\n        fullPrecision: false,\r\n        noDecimals: false,\r\n        hide_asset: false,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        ReactTooltip.rebuild();\r\n    }\r\n\r\n    shouldComponentUpdate(np) {\r\n        return (\r\n            super.shouldComponentUpdate(np) ||\r\n            np.base !== this.props.base\r\n        );\r\n    }\r\n\r\n    getValue() {\r\n        let {marketStats} = this.props;\r\n        return marketStats && marketStats.change ? marketStats.change : 0;\r\n    }\r\n\r\n    render() {\r\n        let marketChangeValue = this.getValue();\r\n        let dayChangeClass = parseFloat(marketChangeValue) === 0 ? \"\" : parseFloat(marketChangeValue) < 0 ? \"change-down\" : \"change-up\";\r\n        let marketChangeFormattedValue = <FormattedNumber\r\n            style=\"decimal\"\r\n            value={marketChangeValue}\r\n            minimumFractionDigits={2}\r\n            maximumFractionDigits={2}\r\n        />;\r\n\r\n        return <span className={\"value \" + dayChangeClass}>{marketChangeFormattedValue}%</span>;\r\n    }\r\n}\r\nMarketChangeComponent = BindToChainState(MarketChangeComponent, {keep_updating: true});\r\n\r\nclass Market24HourChangeComponent extends React.Component {\r\n    render() {\r\n        let {refCallback, ...others} = this.props;\r\n\r\n        return <MarketChangeComponent {...others} ref={refCallback} />;\r\n    }\r\n}\r\n\r\nMarket24HourChangeComponent = connect(Market24HourChangeComponent, {\r\n    listenTo() {\r\n        return [MarketsStore];\r\n    },\r\n    getProps(props) {\r\n        return {\r\n            marketStats: MarketsStore.getState().allMarketStats.get(props.marketId),\r\n            allMarketStats: MarketsStore.getState().allMarketStats\r\n        };\r\n    }\r\n});\r\n\r\nexport {Market24HourChangeComponent};\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/MarketChangeComponent.jsx","import {ChainStore} from \"seerjs/es\";\r\nimport Immutable from \"immutable\";\r\n\r\nlet KeyAuth = function(auth) {\r\n    this.id = auth.toJS ? auth.get(0) : auth[0];\r\n    this.weight = auth.toJS ? auth.get(1) : auth[1];\r\n\r\n    this.isAvailable = (auths) => {\r\n        return auths.includes ? auths.includes(this.id) : auths.indexOf(this) !== -1;\r\n    };\r\n};\r\n\r\nlet permissionUtils = {\r\n\r\n    AccountPermission: function(account, weight, type) {\r\n        this.id = account.get(\"id\");\r\n        this.weight = weight;\r\n        this.threshold = account.getIn([type, \"weight_threshold\"]);\r\n        this.accounts = [];\r\n        this.keys = account.getIn([type, \"key_auths\"]).map(auth => {\r\n            return new KeyAuth(auth);\r\n        }).toArray();\r\n\r\n        this.isAvailable = (auths) => {\r\n            return auths.includes ? auths.includes(this.id) : auths.indexOf(this) !== -1;\r\n        };\r\n\r\n        this._sumWeights = (auths) => {\r\n\r\n            if (!this.isNested() && !this.isMultiSig()) {\r\n                return this.isAvailable(auths) ? this.weight : 0;\r\n            } else {\r\n                let sum = this.accounts.reduce((status, account) => {\r\n                    return status + (account._sumWeights(auths) ? account.weight : 0);\r\n                }, 0);\r\n\r\n                return Math.floor((sum / this.threshold));\r\n            }\r\n        };\r\n\r\n        this.getStatus = (auths, keyAuths) => {\r\n            if (!this.isNested()) {\r\n                let sum = this._sumWeights(auths);\r\n                if (this.isMultiSig()) {\r\n                    sum += this.sumKeys(keyAuths);\r\n                }\r\n                return sum;\r\n            } else {\r\n                let sum = this.accounts.reduce((status, account) => {\r\n                    return status + account._sumWeights(auths);\r\n                }, 0);\r\n\r\n                if (this.keys.length) {\r\n                    sum += this.sumKeys(keyAuths);\r\n                }\r\n\r\n                return sum;\r\n            }\r\n        };\r\n\r\n        this.sumKeys = (keyAuths) => {\r\n            let keySum = this.keys.reduce((s, key) => {\r\n                return s + (key.isAvailable(keyAuths) ? key.weight : 0);\r\n            }, 0);\r\n            return keySum;\r\n        };\r\n\r\n        this.isNested = () => {\r\n            return this.accounts.length > 0;\r\n        };\r\n\r\n        this.isMultiSig = () => {\r\n            return this.keys.reduce((final, key) => {\r\n                return final || key.weight < this.threshold;\r\n            }, false);\r\n        };\r\n\r\n        this.getMissingSigs = (auths) => {\r\n            let missing  = [];\r\n            let nested = [];\r\n            if (this.isNested()) {\r\n                nested = this.accounts.reduce((a, account) => {\r\n                    return a.concat(account.getMissingSigs(auths));\r\n                }, []);\r\n            } else if (!this.isAvailable(auths)) {\r\n                missing.push(this.id);\r\n            }\r\n\r\n            return missing.concat(nested);\r\n        };\r\n\r\n        this.getMissingKeys = (auths) => {\r\n            let missing = [];\r\n            let nested = [];\r\n            if (this.keys.length && (this.isNested() || this.isMultiSig())) {\r\n                this.keys.forEach(key => {\r\n                    if (!key.isAvailable(auths)) {\r\n                        missing.push(key.id);\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (this.isNested()) {\r\n                nested = this.accounts.reduce((a, account) => {\r\n                    return a.concat(account.getMissingKeys(auths));\r\n                }, []);\r\n            };\r\n\r\n            return missing.concat(nested);\r\n        }\r\n    },\r\n\r\n    listToIDs: function(accountList) {\r\n        let allAccounts = [];\r\n\r\n        accountList.forEach(account => {\r\n            if (account) {\r\n                allAccounts.push(account.get ? account.get(\"id\") : account);\r\n            }\r\n        });\r\n\r\n        return allAccounts;\r\n    },\r\n\r\n    unravel: function(accountPermission, type, recursive_count = 0) {\r\n        if (recursive_count < 3) {\r\n            let account = ChainStore.getAccount(accountPermission.id);\r\n            if (account && account.getIn([type, \"account_auths\"]).size) {\r\n                account.getIn([type, \"account_auths\"]).forEach(auth => {\r\n                    let nestedAccount = ChainStore.getAccount(auth.get(0));\r\n                    if (nestedAccount) {\r\n                        accountPermission.accounts.push(this.unravel(new this.AccountPermission(nestedAccount, auth.get(1), type), type, recursive_count + 1));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        return accountPermission;\r\n    },\r\n\r\n    unnest: function(accounts, type) {\r\n\r\n        let map = [];\r\n        accounts.forEach(id => {\r\n            let fullAccount = ChainStore.getAccount(id);\r\n            let currentPermission = this.unravel(new this.AccountPermission(fullAccount, null, type), type);\r\n            map.push(currentPermission);\r\n        });\r\n\r\n        return map;\r\n    },\r\n\r\n\r\n    flatten_auths(auths, existingAuths = Immutable.List()) {\r\n        if (!auths.size) {\r\n            return existingAuths;\r\n        }\r\n\r\n        auths.forEach(owner => {\r\n            if (!existingAuths.includes(owner.get(0))) {\r\n                existingAuths = existingAuths.push(owner.get(0));\r\n            }\r\n        });\r\n        return existingAuths;\r\n    }\r\n}\r\n\r\nexport default permissionUtils;\r\n\n\n\n// WEBPACK FOOTER //\n// app/lib/common/permission_utils.js","import React from \"react\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport utils from \"common/utils\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport LinkToAccountById from \"../Utility/LinkToAccountById\";\r\nimport pu from \"common/permission_utils\";\r\nimport {cloneDeep} from \"lodash\";\r\nimport {ChainStore} from \"seerjs/es\";\r\n\r\nclass AccountPermissionTree extends React.Component {\r\n\r\n    static propTypes = {\r\n        account: ChainTypes.ChainAccount.isRequired,\r\n        accounts: ChainTypes.ChainAccountsList,\r\n        indent: React.PropTypes.number.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        indent: 0\r\n    };\r\n\r\n    render() {\r\n        let {account, available, availableKeys, permission, threshold} = this.props;\r\n\r\n        let isOK = permission.isAvailable(available);\r\n        let isNested = permission.isNested();\r\n        let isMultiSig = permission.isMultiSig();\r\n\r\n        let status = [];\r\n\r\n        let notNestedWeight = (threshold && threshold > 10) ?\r\n            utils.get_percentage(permission.weight, this.props.threshold) :\r\n            permission.weight;\r\n\r\n        let nestedWeight = (permission && permission.threshold > 10) ?\r\n            `${utils.get_percentage(permission.getStatus(available, availableKeys), permission.threshold)} / 100%` :\r\n            `${permission.getStatus(available, availableKeys)} / ${permission.threshold}`;\r\n\r\n        // if (!account || typeof account === \"string\") return null;\r\n\r\n        status.push(\r\n            <div key={account.get(\"id\")} style={{textAlign: \"left\", width: \"100%\", clear: \"both\", paddingBottom: 5}}>\r\n                <div\r\n                    className=\"inline-block\"\r\n                    style={{\r\n                        paddingLeft: `${5 * this.props.indent}%`\r\n                    }}\r\n                >\r\n                    <LinkToAccountById subpage=\"permissions\" account={account.get(\"id\")} />\r\n                    {!isNested && notNestedWeight ? `${notNestedWeight && notNestedWeight.length === 2 ? `\\u00A0\\u00A0` : \"\"}(${notNestedWeight}) ` : null}\r\n                </div>\r\n                <div className=\"float-right\" style={{paddingLeft: 20, marginRight: 10}}>\r\n                    {!isNested && !isMultiSig ? (\r\n                    <span>\r\n                        {isOK ? <Icon name=\"checkmark-circle\" size=\"1x\" className=\"success\"/> :\r\n                                <Icon name=\"cross-circle\" size=\"1x\" className=\"error\"/>}\r\n                    </span>) : (\r\n                    <span className={isOK ? \"success-text\" : \"\"}>\r\n                        {nestedWeight}\r\n                    </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        if (isNested || isMultiSig) {\r\n            permission.accounts.forEach(subAccount => {\r\n                status.push(\r\n                    <BoundAccountPermissionTree\r\n                        key={subAccount.id}\r\n                        indent={this.props.indent + 1}\r\n                        account={subAccount.id}\r\n                        accounts={subAccount.accounts}\r\n                        permission={subAccount}\r\n                        available={available}\r\n                        availableKeys={availableKeys}\r\n                        threshold={permission.threshold}\r\n                    />\r\n                );\r\n            });\r\n\r\n            if (permission.keys.length) {\r\n                permission.keys.forEach(key => {\r\n                    status.push(\r\n                        <KeyPermissionBranch\r\n                            key={key.id}\r\n                            permission={key}\r\n                            available={availableKeys}\r\n                            indent={this.props.indent + 1}\r\n                        />\r\n                    );\r\n                });\r\n            }\r\n        }\r\n\r\n        return <div>{status}</div>;\r\n    }\r\n}\r\nconst BoundAccountPermissionTree = BindToChainState(AccountPermissionTree);\r\n\r\nclass KeyPermissionBranch extends React.Component {\r\n\r\n    static propTypes = {\r\n        indent: React.PropTypes.number.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        indent: 0\r\n    };\r\n\r\n    render() {\r\n        let {available, permission} = this.props;\r\n\r\n        let isOK = permission.isAvailable(available);\r\n\r\n        let status = [];\r\n        status.push(\r\n            <div key={permission.id} style={{textAlign: \"left\", width: \"100%\", paddingBottom: 5}}>\r\n                <div\r\n                    className=\"inline-block\"\r\n                    style={{\r\n                        paddingLeft: `${5 * this.props.indent}%`\r\n                    }}\r\n                >\r\n                    <span>{permission.id.substr(0, 20 - 4 * this.props.indent)}... ({permission.weight})</span>\r\n                </div>\r\n                <div className=\"float-right\" style={{paddingLeft: 20, marginRight: 10}}>\r\n                    <span>\r\n                        {isOK ? <Icon name=\"checkmark-circle\" size=\"1x\" className=\"success\"/> :\r\n                                <Icon name=\"cross-circle\" size=\"1x\" className=\"error\"/>}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return <div>{status}</div>;\r\n    }\r\n}\r\n\r\nclass SecondLevel extends React.Component {\r\n\r\n    render() {\r\n        let {requiredPermissions, available, availableKeys} = this.props;\r\n\r\n        let status = [];\r\n\r\n        requiredPermissions.forEach(account => {\r\n            status.push(\r\n                <BoundAccountPermissionTree\r\n                    key={account.id}\r\n                    account={account.id}\r\n                    accounts={account.accounts}\r\n                    permission={account}\r\n                    available={available}\r\n                    availableKeys={availableKeys}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {status}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FirstLevel extends React.Component {\r\n\r\n    static propTypes = {\r\n        required: ChainTypes.ChainAccountsList,\r\n        available: ChainTypes.ChainAccountsList\r\n    };\r\n\r\n    static defaultProps = {\r\n        type: \"active\",\r\n        added: null,\r\n        removed: null\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            requiredPermissions: []\r\n        };\r\n\r\n        this._updateState = this._updateState.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._updateState();\r\n\r\n        ChainStore.subscribe(this._updateState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChainStore.unsubscribe(this._updateState);\r\n    }\r\n\r\n    _updateState() {\r\n        let required = pu.listToIDs(this.props.required);\r\n        let available = pu.listToIDs(this.props.available);\r\n\r\n        this.setState({\r\n            requiredPermissions: pu.unnest(required, this.props.type),\r\n            required,\r\n            available\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {type, added, removed, availableKeys} = this.props;\r\n        let {requiredPermissions, required, available} = this.state;\r\n\r\n        available = cloneDeep(available);\r\n        availableKeys = availableKeys.toJS();\r\n\r\n        if (added) {\r\n            available.push(added);\r\n            availableKeys.push(added);\r\n        }\r\n\r\n        if (removed) {\r\n            if (available.indexOf(removed) !== -1) {\r\n                available.splice(available.indexOf(removed), 1);\r\n            }\r\n            if (availableKeys.indexOf(removed) !== -1) {\r\n                availableKeys.splice(availableKeys.indexOf(removed), 1);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <SecondLevel\r\n                type={type}\r\n                added={added}\r\n                removed={removed}\r\n                required={required}\r\n                available={available}\r\n                availableKeys={availableKeys}\r\n                requiredPermissions={requiredPermissions}\r\n            />\r\n        );\r\n    }\r\n}\r\nFirstLevel = BindToChainState(FirstLevel, {keep_updating: true});\r\n\r\nclass ProposalWrapper extends React.Component {\r\n\r\n    static propTypes = {\r\n        proposal: ChainTypes.ChainObject.isRequired,\r\n        type: React.PropTypes.string.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        type: \"active\",\r\n        added: null\r\n    };\r\n\r\n    render() {\r\n        let {proposal, type} = this.props;\r\n\r\n        let available = proposal.get(`available_${type}_approvals`);\r\n        let availableKeys = proposal.get(\"available_key_approvals\");\r\n        let required = proposal.get(`required_${type}_approvals`);\r\n\r\n        return (\r\n            <FirstLevel\r\n                {...this.props}\r\n                required={required}\r\n                available={available}\r\n                availableKeys={availableKeys}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BindToChainState(ProposalWrapper, {keep_updating: true});\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Account/NestedApprovalState.jsx","import React from \"react\";\r\nimport ZfApi from \"react-foundation-apps/src/utils/foundation-api\";\r\nimport BaseModal from \"./BaseModal\";\r\nimport Translate from \"react-translate-component\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport AccountSelect from \"components/Forms/AccountSelect\";\r\nimport AccountStore from \"stores/AccountStore\";\r\nimport WalletDb from \"stores/WalletDb\";\r\nimport WalletApi from \"api/WalletApi\";\r\nimport NestedApprovalState from \"../Account/NestedApprovalState\";\r\nimport pu from \"common/permission_utils\";\r\nimport {ChainStore} from \"seerjs/es\";\r\n\r\nclass ProposalApproveModal extends React.Component {\r\n\r\n   static propTypes = {\r\n       accounts: ChainTypes.ChainAccountsList\r\n   };\r\n\r\n   constructor(props) {\r\n        super();\r\n        this.state = {\r\n            active: null,\r\n            key: null,\r\n            owner: null,\r\n            payee: null\r\n        }\r\n   }\r\n\r\n   onActiveAccount(accountMap, keyMap, type, account) {\r\n        let newState = {};\r\n\r\n        if (keyMap[account]) {\r\n            newState[\"key\"] = account;\r\n            newState[type] = null;\r\n        } else if (account) {\r\n            newState[type] = accountMap[account];\r\n            newState[\"key\"] = null;\r\n        } else {\r\n            newState[type] = null;\r\n            newState[\"key\"] = null;\r\n        }\r\n        this.setState(newState);\r\n\r\n   }\r\n\r\n    _onProposalAction(oldProposal) {\r\n        let proposalObject = oldProposal.toJS();\r\n        let {active, key, owner, payee} = this.state;\r\n\r\n        let proposal = {\r\n            fee_paying_account: payee || active,\r\n            proposal: proposalObject.id,\r\n            active_approvals_to_add: [],\r\n            active_approvals_to_remove: [],\r\n            owner_approvals_to_add: [],\r\n            owner_approvals_to_remove: [],\r\n            key_approvals_to_add: [],\r\n            key_approvals_to_remove: []\r\n        };\r\n\r\n        let isAdd = this.props.action === \"approve\";\r\n\r\n        let neededKeys = [];\r\n\r\n        [\"active\", \"owner\", \"key\"].forEach(auth_type => {\r\n            let value = this.state[auth_type];\r\n            if (value) {\r\n                let hasValue = proposalObject[`available_${auth_type}_approvals`].indexOf(value) !== -1;\r\n                if ((isAdd && !hasValue) || (!isAdd && hasValue)) {\r\n                    if (this.props.action === \"approve\") {\r\n                        proposal[`${auth_type}_approvals_to_add`] = [value];\r\n                        if (auth_type === \"key\") neededKeys.push(value);\r\n                    } else if (this.props.action === \"reject\") {\r\n                        proposal[`${auth_type}_approvals_to_remove`] = [value];\r\n                        if (auth_type === \"key\") neededKeys.push(value);\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        var tr = WalletApi.new_transaction();\r\n        tr.add_type_operation(\"proposal_update\", proposal);\r\n        WalletDb.process_transaction(tr, null, true, neededKeys);\r\n\r\n        ZfApi.publish(this.props.modalId, \"close\");\r\n    }\r\n\r\n    onChangePayee(account) {\r\n        let fullAccount = ChainStore.getAccount(account);\r\n\r\n        if (fullAccount) {\r\n            this.setState({\r\n                payee: fullAccount.get(\"id\")\r\n            });\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        ZfApi.publish(this.props.modalId, \"close\");\r\n    }\r\n\r\n    render() {\r\n        let {proposal, type} = this.props;\r\n\r\n        let accountNames = [];\r\n        let accountMap = {};\r\n        let isAdd = this.props.action === \"approve\";\r\n\r\n        if (this.props.accounts.length) {\r\n            this.props.accounts.forEach(account => {\r\n                let accountCheck = isAdd ? account && !proposal.get(`available_${type}_approvals`).includes(account.get(\"id\")) :\r\n                        account && proposal.get(`available_${type}_approvals`).includes(account.get(\"id\"));\r\n                if (accountCheck) {\r\n                    accountMap[account.get(\"name\")] = account.get(\"id\");\r\n                    accountNames.push(account.get(\"name\"));\r\n                }\r\n            });\r\n        }\r\n\r\n        let keyNames = [];\r\n        let keyMap = {};\r\n        if (this.props.keys.length) {\r\n            this.props.keys.forEach(key => {\r\n                let isMine = AccountStore.isMyKey(key);\r\n                if (isMine && !proposal.get(\"available_key_approvals\").includes(key)) {\r\n                    keyMap[key] = true;\r\n                    keyNames.push(key);\r\n                }\r\n            });\r\n        }\r\n\r\n        let myAccounts = AccountStore.getMyAccounts();\r\n\r\n        return (\r\n            <form className=\"grid-block vertical full-width-content\">\r\n                <div className=\"grid-container\">\r\n                    <div className=\"content-block\">\r\n                        <h4>{isAdd ? \"Add approval\" : \"Remove approval\"}</h4>\r\n                    </div>\r\n                    <div className=\"content-block\" style={{paddingRight: \"20%\"}}>\r\n\r\n                        <NestedApprovalState\r\n                            proposal={proposal.get(\"id\")}\r\n                            type={type}\r\n                            added={isAdd ? this.state.key ? this.state.key : this.state[type] || null : null}\r\n                            removed={!isAdd ? this.state.key ? this.state.key : this.state[type] || null : null}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"content-block full-width-content\">\r\n                       <div className=\"full-width-content form-group\">\r\n                           <Translate content=\"modal.proposals.pay_with\" component=\"label\" />\r\n                            <AccountSelect\r\n                                account_names={myAccounts}\r\n                                onChange={this.onChangePayee.bind(this)}\r\n                            />\r\n                        </div>\r\n\r\n                        {accountNames.length || keyNames.length ? (\r\n                        <div className=\"full-width-content form-group\">\r\n                            <Translate content={`modal.proposals.approval_${isAdd ? \"add\" : \"remove\"}`} component=\"label\" />\r\n                            <AccountSelect\r\n                                account_names={accountNames.concat(keyNames)}\r\n                                onChange={this.onActiveAccount.bind(this, accountMap, keyMap, type)}\r\n                            />\r\n                        </div>) : null}\r\n\r\n                        {false && keyNames.length ? (\r\n                        <div className=\"full-width-content form-group\">\r\n                            <Translate content={`modal.proposals.key_approval_${isAdd ? \"add\" : \"remove\"}`} component=\"label\" />\r\n                            <AccountSelect\r\n                                account_names={keyNames}\r\n                                onChange={this.onActiveAccount.bind(this, keyMap, \"key\")}\r\n                            />\r\n                        </div>) : null}\r\n                    </div>\r\n\r\n                    <div className=\"content-block\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"button\"\r\n                            onClick={this._onProposalAction.bind(this, proposal)}\r\n                            value={isAdd ? \"Approve\" : \"Remove\"}\r\n                        />\r\n                        <div onClick={this.onCancel.bind(this)} className=\" button\">\r\n                            <Translate content=\"account.perm.cancel\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n};\r\nProposalApproveModal = BindToChainState(ProposalApproveModal);\r\n\r\nclass FirstLevel extends React.Component {\r\n\r\n    static propTypes = {\r\n       account: ChainTypes.ChainAccount.isRequired,\r\n       proposal: ChainTypes.ChainObject.isRequired\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._updateState = this._updateState.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._updateState();\r\n\r\n        ChainStore.subscribe(this._updateState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChainStore.unsubscribe(this._updateState);\r\n    }\r\n\r\n    _updateState() {\r\n        let {proposal, account} = this.props;\r\n        let type = proposal.get(\"required_active_approvals\").size ? \"active\" : \"owner\";\r\n\r\n        let required = pu.listToIDs(proposal.get(`required_${type}_approvals`));\r\n        let available = pu.listToIDs(proposal.get(`available_${type}_approvals`));\r\n        let availableKeys = pu.listToIDs(proposal.get(`available_key_approvals`));\r\n\r\n        this.setState({\r\n            requiredPermissions: pu.unnest(required, type),\r\n            available,\r\n            availableKeys,\r\n            type\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {action} = this.props;\r\n        let {requiredPermissions, available, availableKeys, type} = this.state;\r\n        let finalRequired = [];\r\n\r\n        requiredPermissions.forEach(account => {\r\n            finalRequired = finalRequired.concat(account.getMissingSigs(available));\r\n        });\r\n\r\n        let finalRequiredKeys = [];\r\n\r\n        requiredPermissions.forEach(account => {\r\n            finalRequiredKeys = finalRequiredKeys.concat(account.getMissingKeys(availableKeys));\r\n        });\r\n\r\n        return (\r\n            <ProposalApproveModal\r\n                {...this.props}\r\n                type={type}\r\n                accounts={action === \"approve\" ? finalRequired : available}\r\n                keys={action === \"approve\" ? finalRequiredKeys : availableKeys}\r\n            />\r\n        );\r\n    }\r\n}\r\nFirstLevel = BindToChainState(FirstLevel);\r\n\r\nexport default class ModalWrapper extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ZfApi.subscribe(this.props.modalId, (msg, data) => {\r\n            this.setState({\r\n                open: data === \"open\"\r\n            });\r\n        });\r\n    }\r\n\r\n    show() {\r\n        ZfApi.publish(this.props.modalId, \"open\");\r\n    }\r\n\r\n    render() {\r\n        let {modalId, proposal} = this.props;\r\n\r\n        return (\r\n            <BaseModal id={modalId} overlay={true} ref={modalId}>\r\n                {this.state.open ? (\r\n                <div className=\"grid-block vertical\">\r\n                    <FirstLevel\r\n                        {...this.props}\r\n                    />\r\n                </div>) : null}\r\n            </BaseModal>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Modal/ProposalApproveModal.jsx","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport Translate from \"react-translate-component\";\r\nimport ProposedOperation from \"components/Blockchain/ProposedOperation\";\r\nimport BindToChainState from \"components/Utility/BindToChainState\";\r\nimport ChainTypes from \"components/Utility/ChainTypes\";\r\nimport utils from \"common/utils\";\r\nimport ProposalApproveModal from \"../Modal/ProposalApproveModal\";\r\nimport NestedApprovalState from \"../Account/NestedApprovalState\";\r\nimport {ChainStore} from \"seerjs/es\";\r\nimport counterpart from \"counterpart\";\r\n\r\nclass Proposals extends Component {\r\n\r\n    static propTypes = {\r\n        account: ChainTypes.ChainAccount.isRequired\r\n    };\r\n\r\n    _onApproveModal(id, action) {\r\n        if (this.refs[id + \"_\" + action]) {\r\n            this.refs[id + \"_\" + action].show();\r\n        }\r\n    }\r\n\r\n    _canApprove(proposal, id) {\r\n\r\n        if (proposal.required_active_approvals.indexOf(id) !== -1 && proposal.available_active_approvals.indexOf(id) === -1) {\r\n            return true;\r\n        } else if (proposal.required_owner_approvals.indexOf(id) !== -1 && proposal.available_owner_approvals.indexOf(id) === -1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    _canReject(proposal) {\r\n        return (proposal.available_active_approvals.length || proposal.available_owner_approvals.length);\r\n    }\r\n\r\n    render() {\r\n        let {account} = this.props;\r\n        if( ! account ) return null;\r\n\r\n        let proposals = [];\r\n\r\n        if( account.get(\"proposals\").size ) {\r\n            account.get(\"proposals\").forEach( proposal_id => {\r\n                var proposal = ChainStore.getObject( proposal_id )\r\n                if( proposal ) {\r\n                    var proposed_transaction = proposal.get(\"proposed_transaction\")\r\n                    var operations = proposed_transaction.get(\"operations\")\r\n                    proposals.push({operations, account, proposal});\r\n                }\r\n            })\r\n        }\r\n\r\n        let proposalRows = proposals\r\n            .sort((a, b) => {\r\n                return utils.sortID(a.proposal.get(\"id\"), b.proposal.get(\"id\"), true);\r\n            })\r\n            .map(proposal => {\r\n                let isScam = false;\r\n                let text = proposal.operations.map( (o, index) => {\r\n                    if (o.getIn([1, \"to\"]) === \"1.2.153124\") isScam = true;\r\n                    return <ProposedOperation\r\n                            key={proposal.proposal.get(\"id\") + \"_\" + index}\r\n                            expiration={proposal.proposal.get(\"expiration_time\")}\r\n                            index={index}\r\n                            op={o.toJS()}\r\n                            inverted={false}\r\n                            hideFee={false}\r\n                            hideOpLabel={true}\r\n                            hideDate={true}\r\n                            proposal={true}\r\n                            id={proposal.proposal.get(\"id\")}\r\n                        />;\r\n                }).toArray();\r\n\r\n                // let canApprove = this._canApprove(proposal.proposal.toJS(), proposal.account.get(\"id\"));\r\n                let canReject = this._canReject(proposal.proposal.toJS());\r\n\r\n                let proposalId = proposal.proposal.get(\"id\");\r\n\r\n                let type = proposal.proposal.get(\"required_active_approvals\").size ? \"active\" : \"owner\";\r\n\r\n                return (\r\n                    <tr key={proposalId}>\r\n                        <td>\r\n                            {text}\r\n                        </td>\r\n                        <td>\r\n                            <NestedApprovalState\r\n                                proposal={proposal.proposal.get(\"id\")}\r\n                                type={type}\r\n                            />\r\n                        </td>\r\n\r\n                        <td>\r\n                            {canReject ?\r\n                                (\r\n                                    <button\r\n                                    onClick={this._onApproveModal.bind(this, proposalId, \"reject\")}\r\n                                    className=\"button outline\"\r\n                                >\r\n                                    <Translate content=\"proposal.reject\" />\r\n                                </button>\r\n\r\n                                ) : null}\r\n                                <ProposalApproveModal\r\n                                    ref={proposalId + \"_\" + \"reject\"}\r\n                                    modalId={proposalId + \"_\" + \"reject\"}\r\n                                    account={proposal.account.get(\"id\")}\r\n                                    proposal={proposalId}\r\n                                    action=\"reject\"\r\n                                />\r\n                            {isScam ? <div data-tip={counterpart.translate(\"tooltip.propose_scam\")} className=\" tooltip has-error\">SCAM</div> : <button\r\n                                onClick={this._onApproveModal.bind(this, proposalId, \"approve\")}\r\n                                className=\"button outline\"\r\n                            >\r\n                                <span><Translate content=\"proposal.approve\" /></span>\r\n                            </button>}\r\n                            <ProposalApproveModal\r\n                                ref={proposalId + \"_\" + \"approve\"}\r\n                                modalId={proposalId + \"_\" + \"approve\"}\r\n                                account={proposal.account.get(\"id\")}\r\n                                proposal={proposalId}\r\n                                action=\"approve\"\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            });\r\n\r\n        return (\r\n            <table className={\"table compact \" + this.props.className}>\r\n                <thead>\r\n                <tr>\r\n                    <th><Translate content=\"account.votes.info\" /></th>\r\n                    <th><Translate content=\"proposal.status\" /></th>\r\n                    <th><Translate content=\"proposal.action\" /></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { proposalRows }\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BindToChainState(Proposals, {keep_updating: true});\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Account/Proposals.jsx","import React from \"react\";\r\nimport {OrderRow, TableHeader} from \"../Exchange/MyOpenOrders\";\r\nimport counterpart from \"counterpart\";\r\nimport MarketsActions from \"actions/MarketsActions\";\r\nimport {ChainStore} from \"seerjs/es\";\r\nimport { LimitOrder } from \"common/MarketClasses\";\r\nimport {connect} from \"alt-react\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport marketUtils from \"common/market_utils\";\r\nimport Translate from \"react-translate-component\";\r\n\r\nclass AccountOrders extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedOrders: [],\r\n            filterValue: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let cancelHeader = document.getElementById(\"cancelAllOrders\");\r\n\r\n        if (cancelHeader) {\r\n            cancelHeader.addEventListener(\"click\", function(){\r\n                let orders = this._getFilteredOrders.call(this);\r\n                orders = orders.toJS ? orders.toJS() : orders;\r\n\r\n                this.setState({selectedOrders: orders});\r\n\r\n                let checkboxes = document.querySelectorAll(\".orderCancel\");\r\n\r\n                checkboxes.forEach((item)=>{\r\n                    if(!item.checked) item.checked = true;\r\n                });\r\n            }.bind(this));\r\n        }\r\n    }\r\n\r\n    _getFilteredOrders(){\r\n        let {filterValue} = this.state;\r\n\r\n        let orders = this.props.account.get(\"orders\") || [];\r\n\r\n        return orders.filter((item)=>{\r\n            let order = ChainStore.getObject(item).toJS();\r\n            let base = ChainStore.getAsset(order.sell_price.base.asset_id);\r\n            let quote = ChainStore.getAsset(order.sell_price.quote.asset_id);\r\n\r\n            let baseSymbol = base.get(\"symbol\").toLowerCase();\r\n            let quoteSymbol = quote.get(\"symbol\").toLowerCase();\r\n\r\n            return (baseSymbol.indexOf(filterValue) > -1) || (quoteSymbol.indexOf(filterValue) > -1);\r\n        });\r\n    }\r\n\r\n    _cancelLimitOrder(orderID, e) {\r\n        e.preventDefault();\r\n\r\n        MarketsActions.cancelLimitOrder(\r\n            this.props.account.get(\"id\"),\r\n            orderID, // order id to cancel\r\n            false // Don't show normal confirms\r\n        ).catch(err => {\r\n            console.log(\"cancel order error:\", err);\r\n        });\r\n    }\r\n\r\n    _cancelLimitOrders(orderId) {\r\n        MarketsActions.cancelLimitOrders(\r\n            this.props.account.get(\"id\"),\r\n            this.state.selectedOrders\r\n        ).then(()=>{\r\n            this.resetSelected();\r\n        }).catch(err => {\r\n            console.log(\"cancel orders error:\", err);\r\n        })\r\n    }\r\n\r\n    onFlip(marketId) {\r\n        let setting = {};\r\n        setting[marketId] = !this.props.marketDirections.get(marketId);\r\n        SettingsActions.changeMarketDirection(setting);\r\n    }\r\n\r\n    onCheckCancel(orderId, evt){\r\n        let { selectedOrders } = this.state;\r\n        let checked = evt.target.checked;\r\n\r\n        if(checked){\r\n            this.setState({selectedOrders: selectedOrders.concat([orderId])});\r\n        } else {\r\n            let index = selectedOrders.indexOf(orderId);\r\n\r\n            if(index > -1){\r\n                this.setState({selectedOrders: selectedOrders.slice(0, index).concat(selectedOrders.slice(index+1))});\r\n            }\r\n        }\r\n    }\r\n\r\n    setFilterValue(evt){\r\n        this.setState({filterValue: evt.target.value.toLowerCase()});\r\n    }\r\n\r\n    resetSelected(){\r\n        this.setState({selectedOrders: []});\r\n\r\n        let checkboxes = document.querySelectorAll(\".orderCancel\");\r\n\r\n        checkboxes.forEach((item)=>{\r\n            if(item.checked) item.checked = false;\r\n        });\r\n    }\r\n\r\n    cancelSelected(){\r\n        this._cancelLimitOrders.call(this);\r\n    }\r\n\r\n    render() {\r\n        let {account, marketDirections} = this.props;\r\n        let {filterValue, selectedOrders} = this.state;\r\n        let cancel = counterpart.translate(\"account.perm.cancel\");\r\n        let markets = {};\r\n\r\n        let marketOrders ={};\r\n\r\n        if (!account.get(\"orders\")) {\r\n            return null;\r\n        }\r\n\r\n        let orders = account.get(\"orders\");\r\n        const ordersCount = orders.size;\r\n        if(filterValue){\r\n            orders = this._getFilteredOrders.call(this);\r\n        }\r\n\r\n        orders.forEach(orderID => {\r\n            let order = ChainStore.getObject(orderID).toJS();\r\n            let base = ChainStore.getAsset(order.sell_price.base.asset_id);\r\n            let quote = ChainStore.getAsset(order.sell_price.quote.asset_id);\r\n\r\n            if (base && quote) {\r\n                let assets = {\r\n                    [base.get(\"id\")]: {precision: base.get(\"precision\")},\r\n                    [quote.get(\"id\")]: {precision: quote.get(\"precision\")}\r\n                };\r\n                // let baseID = parseInt(order.sell_price.base.asset_id.split(\".\")[2], 10);\r\n                // let quoteID = parseInt(order.sell_price.quote.asset_id.split(\".\")[2], 10);\r\n\r\n\r\n                // let marketID = quoteID > baseID ? `${quote.get(\"symbol\")}_${base.get(\"symbol\")}` : `${base.get(\"symbol\")}_${quote.get(\"symbol\")}`;\r\n                const {marketID} = marketUtils.getMarketID(base, quote);\r\n                const direction = marketDirections.get(marketID);\r\n\r\n                if (!markets[marketID]) {\r\n                    if (direction) {\r\n                        markets[marketID] = {\r\n                            base: {id: base.get(\"id\"), symbol: base.get(\"symbol\"), precision: base.get(\"precision\")},\r\n                            quote: {id: quote.get(\"id\"), symbol: quote.get(\"symbol\"), precision: quote.get(\"precision\")}\r\n                        };\r\n                    } else {\r\n                        markets[marketID] = {\r\n                            base: {id: quote.get(\"id\"), symbol: quote.get(\"symbol\"), precision: quote.get(\"precision\")},\r\n                            quote: {id: base.get(\"id\"), symbol: base.get(\"symbol\"), precision: base.get(\"precision\")}\r\n                        };\r\n                    }\r\n                }\r\n                let limitOrder = new LimitOrder(order, assets, markets[marketID].quote.id);\r\n\r\n                let marketBase = ChainStore.getAsset(markets[marketID].base.id);\r\n                let marketQuote = ChainStore.getAsset(markets[marketID].quote.id);\r\n\r\n                if (!marketOrders[marketID]) {\r\n                    marketOrders[marketID] = [];\r\n                }\r\n\r\n                marketOrders[marketID].push(\r\n                    <OrderRow\r\n                        ref={markets[marketID].base.symbol}\r\n                        key={order.id}\r\n                        order={limitOrder}\r\n                        base={marketBase}\r\n                        quote={marketQuote}\r\n                        cancel_text={cancel}\r\n                        showSymbols={false}\r\n                        invert={true}\r\n                        onCancel={this._cancelLimitOrder.bind(this, order.id)}\r\n                        price={limitOrder.getPrice()}\r\n                        dashboard\r\n                        isMyAccount={this.props.isMyAccount}\r\n                        settings={this.props.settings}\r\n                        onFlip={this.onFlip.bind(this, marketID)}\r\n                        onCheckCancel={this.onCheckCancel.bind(this, order.id)}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n\r\n        let tables = [];\r\n\r\n        let marketIndex = 0;\r\n        for (let market in marketOrders) {\r\n            if (marketOrders[market].length) {\r\n                tables.push(\r\n                    <tbody key={market}>\r\n                        {/* {marketIndex > 0 ? <tr><td colSpan={this.props.isMyAccount ? \"7\" : \"6\"}><span style={{visibility: \"hidden\"}}>H</span></td></tr> : null} */}\r\n                        {marketOrders[market].sort((a, b) => {\r\n                            return a.props.price - b.props.price;\r\n                        })}\r\n                    </tbody>\r\n                );\r\n                marketIndex++;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"grid-content no-overflow no-padding\" style={{paddingBottom: 15}}>\r\n                <div className=\"header-selector\">\r\n                    {orders && ordersCount ? <input type=\"text\" placeholder={counterpart.translate(\"account.filter_orders\")} style={{display: \"inline-block\", maxWidth: \"50%\", marginRight: \"1em\", marginBottom: \"0\"}} onChange={this.setFilterValue.bind(this)}/> : null}\r\n                    {selectedOrders.length ? <button className=\"button\"><Translate content=\"account.reset_orders\" onClick={this.resetSelected.bind(this)} /></button> : null}\r\n                    {selectedOrders.length ? <button className=\"button\"><Translate content=\"account.submit_orders\" onClick={this.cancelSelected.bind(this)} /></button> : null}\r\n                </div>\r\n\r\n                <table className=\"table table-striped dashboard-table table-hover\">\r\n                    <TableHeader settings={this.props.settings} dashboard isMyAccount={this.props.isMyAccount}/>\r\n                    {tables}\r\n                    {this.props.children}\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAccountOrders = connect(AccountOrders, {\r\n    listenTo() {\r\n        return [SettingsStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            marketDirections: SettingsStore.getState().marketDirections\r\n        };\r\n    }\r\n});\r\n\r\nexport default AccountOrders;\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Account/AccountOrders.jsx","import { FetchChain } from \"seerjs/es\";\r\nimport { FeedPrice, Asset } from \"./MarketClasses\";\r\n\r\nfunction checkMarginStatus(account) {\r\n    return new Promise((res, rej) => {\r\n        if (!account || (account && !account.get(\"call_orders\", []).size)) return res(null);\r\n\r\n        FetchChain(\"getObject\", account.get(\"call_orders\").toArray()).then(call_orders => {\r\n            let assets = [];\r\n            call_orders.forEach(a => {\r\n                let baseId = a.getIn([\"call_price\", \"base\", \"asset_id\"]);\r\n                let quoteId = a.getIn([\"call_price\", \"quote\", \"asset_id\"]);\r\n                if (assets.indexOf(baseId) === -1) assets.push(baseId);\r\n                if (assets.indexOf(quoteId) === -1) assets.push(quoteId);\r\n            });\r\n            FetchChain(\"getAsset\", assets).then(assets => {\r\n                let assetsMap = {};\r\n                assets.forEach(asset => {\r\n                    assetsMap[asset.get(\"id\")] = asset.toJS();\r\n                });\r\n                let status = {};\r\n                call_orders.forEach(co => {\r\n                    let debtAsset = assetsMap[co.getIn([\"call_price\", \"quote\", \"asset_id\"])];\r\n                    let collateralAsset = assetsMap[co.getIn([\"call_price\", \"base\", \"asset_id\"])];\r\n                    let sp = debtAsset.bitasset.current_feed.settlement_price;\r\n                    if (sp.base.asset_id === sp.quote.asset_id) {\r\n                        status[debtAsset.id] = {ratio: null};\r\n                    } else {\r\n                        let collateral = new Asset({\r\n                            amount: co.get(\"collateral\"),\r\n                            asset_id: collateralAsset.id,\r\n                            precision: collateralAsset.precision\r\n                        });\r\n                        let debt = new Asset({\r\n                            amount: co.get(\"debt\"),\r\n                            asset_id: debtAsset.id,\r\n                            precision: debtAsset.precision\r\n                        });\r\n                        let mr = debtAsset.bitasset.current_feed.maintenance_collateral_ratio / 1000;\r\n                        let price = new FeedPrice({\r\n                            priceObject: debtAsset.bitasset.current_feed.settlement_price,\r\n                            market_base: debtAsset.bitasset.current_feed.settlement_price.quote.asset_id,\r\n                            sqr: debtAsset.bitasset.current_feed.maximum_short_squeeze_ratio,\r\n                            assets: assetsMap\r\n                        });\r\n                        let current = {ratio: collateral.getAmount({real: true}) / (debt.getAmount({real: true}) / price.toReal())};\r\n                        if (isNaN(current.ratio)) return null;\r\n                        if (current.ratio < mr) {\r\n                            current.statusClass = \"danger\";\r\n                        } else if (current.ratio < (mr + 0.5)) {\r\n                            current.statusClass = \"warning\";\r\n                        } else {\r\n                            current.statusClass = null;\r\n                        }\r\n                        status[debtAsset.id] = current;\r\n                    }\r\n                });\r\n                res(status);\r\n            });\r\n        }).catch(rej);\r\n    });\r\n}\r\n\r\nexport {\r\n    checkMarginStatus\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// app/lib/common/accountHelper.js","import React, {Component} from \"react\";\r\nimport {PropTypes} from \"react\";\r\n\r\nimport Icon from \"./Icon\";\r\n\r\nexport default class PulseIcon extends Component {\r\n\r\n    static propTypes = {\r\n        duration: PropTypes.number.isRequired,\r\n        offIcon: PropTypes.string.isRequired,\r\n        onIcon: PropTypes.string.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { duration } = this.props;\r\n        this.interval = setInterval(this.tick,duration);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.interval && clearInterval(this.interval);\r\n    }\r\n\r\n    tick = () => {\r\n        const { onIcon, offIcon } = this.props;\r\n        const { name = onIcon } = this.state || {};\r\n        this.setState({\r\n            name: name === onIcon ? offIcon : onIcon\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onIcon, rest } = this.props;\r\n        const { name = onIcon } = this.state || {};\r\n        return (\r\n            <Icon name={name} {...rest} />\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Icon/PulseIcon.js","import React from \"react\";\r\nimport Immutable from \"immutable\";\r\nimport Translate from \"react-translate-component\";\r\nimport BalanceComponent from \"../Utility/BalanceComponent\";\r\nimport TotalBalanceValue from \"../Utility/TotalBalanceValue\";\r\nimport SettleModal from \"../Modal/SettleModal\";\r\nimport {BalanceValueComponent} from \"../Utility/EquivalentValueComponent\";\r\nimport {Market24HourChangeComponent} from \"../Utility/MarketChangeComponent\";\r\nimport AssetName from \"../Utility/AssetName\";\r\nimport { RecentTransactions } from \"./RecentTransactions\";\r\nimport Proposals from \"components/Account/Proposals\";\r\nimport {ChainStore} from \"seerjs/es\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport assetUtils from \"common/asset_utils\";\r\nimport counterpart from \"counterpart\";\r\nimport Icon from \"../Icon/Icon\";\r\nimport {Link} from \"react-router/es\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport EquivalentPrice from \"../Utility/EquivalentPrice\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport LinkToAssetById from \"../Utility/LinkToAssetById\";\r\nimport utils from \"common/utils\";\r\nimport BorrowModal from \"../Modal/BorrowModal\";\r\nimport DepositModal from \"../Modal/DepositModal\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport SimpleDepositWithdraw from \"../Dashboard/SimpleDepositWithdraw\";\r\nimport SimpleDepositBlocktradesBridge from \"../Dashboard/SimpleDepositBlocktradesBridge\";\r\nimport { Apis } from \"seerjs-ws\";\r\nimport GatewayActions from \"actions/GatewayActions\";\r\nimport {Tabs, Tab} from \"../Utility/Tabs\";\r\nimport AccountOrders from \"./AccountOrders\";\r\nimport cnames from \"classnames\";\r\nimport TranslateWithLinks from \"../Utility/TranslateWithLinks\";\r\nimport { checkMarginStatus } from \"common/accountHelper\";\r\nimport SendModal from \"../Modal/SendModal\";\r\nimport PulseIcon from \"../Icon/PulseIcon\";\r\n\r\nclass AccountOverview extends React.Component {\r\n\r\n    static propTypes = {\r\n        balanceAssets: ChainTypes.ChainAssetsList,\r\n        core_asset: ChainTypes.ChainAsset.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        core_asset: \"1.3.0\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            sortKey: props.viewSettings.get(\"portfolioSort\", \"totalValue\"),\r\n            sortDirection: props.viewSettings.get(\"portfolioSortDirection\", true), // alphabetical A -> B, numbers high to low\r\n            settleAsset: \"1.3.0\",\r\n            showHidden: false,\r\n            depositAsset: null,\r\n            withdrawAsset: null,\r\n            bridgeAsset: null,\r\n            alwaysShowAssets: [\r\n                \"SEER\",\r\n                // \"USD\",\r\n                // \"CNY\",\r\n                // \"OPEN.BTC\",\r\n                // \"OPEN.USDT\",\r\n                // \"OPEN.ETH\",\r\n                // \"OPEN.MAID\",\r\n                // \"OPEN.STEEM\",\r\n                // \"OPEN.DASH\"\r\n            ]\r\n        };\r\n\r\n        this.priceRefs = {};\r\n        this.valueRefs = {};\r\n        this.changeRefs = {};\r\n        for (let key in this.sortFunctions) {\r\n            this.sortFunctions[key] = this.sortFunctions[key].bind(this);\r\n        }\r\n    }\r\n\r\n    sortFunctions = {\r\n        alphabetic: function(a, b, force) {\r\n            if (a.key > b.key) return this.state.sortDirection || force ? 1 : -1;\r\n            if (a.key < b.key) return this.state.sortDirection || force ? -1 : 1;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._checkMarginStatus();\r\n    }\r\n\r\n    _checkMarginStatus(props = this.props) {\r\n        checkMarginStatus(props.account).then(status => {\r\n            let globalMarginStatus = null;\r\n            for (let asset in status) {\r\n                globalMarginStatus = status[asset].statusClass || globalMarginStatus;\r\n            };\r\n            this.setState({globalMarginStatus});\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(np) {\r\n        if (np.account !== this.props.account) {\r\n            this._checkMarginStatus(np);\r\n            this.priceRefs = {};\r\n            this.valueRefs = {};\r\n            this.changeRefs = {};\r\n            setTimeout(this.forceUpdate.bind(this), 500);\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (\r\n            !utils.are_equal_shallow(nextProps.balanceAssets, this.props.balanceAssets) ||\r\n            !utils.are_equal_shallow(nextProps.backedCoins, this.props.backedCoins) ||\r\n            !utils.are_equal_shallow(nextProps.balances, this.props.balances) ||\r\n            nextProps.account !== this.props.account ||\r\n            nextProps.settings !== this.props.settings ||\r\n            nextProps.hiddenAssets !== this.props.hiddenAssets ||\r\n            !utils.are_equal_shallow(nextState, this.state)\r\n        );\r\n    }\r\n\r\n    _onSettleAsset(id, e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            settleAsset: id\r\n        });\r\n\r\n        this.refs.settlement_modal.show();\r\n    }\r\n\r\n    _hideAsset(asset, status) {\r\n        SettingsActions.hideAsset(asset, status);\r\n    }\r\n\r\n    _showDepositModal(asset, e) {\r\n        e.preventDefault();\r\n        this.setState({depositAsset: asset}, () => {\r\n            this.refs.deposit_modal_new.show();\r\n        });\r\n    }\r\n\r\n    _showDepositWithdraw(action, asset, fiatModal, e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            [action === \"bridge_modal\" ? \"bridgeAsset\" : action === \"deposit_modal\" ? \"depositAsset\" : \"withdrawAsset\"]: asset,\r\n            fiatModal\r\n        }, () => {\r\n            this.refs[action].show();\r\n        });\r\n    }\r\n\r\n    _getSeparator(render) {\r\n        return render ? <span>&nbsp;|&nbsp;</span> : null;\r\n    }\r\n\r\n    _onNavigate(route, e) {\r\n        e.preventDefault();\r\n        this.props.router.push(route);\r\n    }\r\n\r\n    triggerSend(asset) {\r\n        this.setState({send_asset: asset}, () => {\r\n            this.refs.send_modal.show();\r\n        });\r\n    }\r\n\r\n    _renderBuy = (symbol, canBuy, assetName, emptyCell, balance) => {\r\n        if(symbol === \"SEER\" && balance <= 100000) { // Precision of 5, 1 = 10^5\r\n            return (\r\n                <span>\r\n                    <a onClick={this._showDepositWithdraw.bind(this, \"bridge_modal\", assetName, false)}>\r\n                        <PulseIcon onIcon=\"dollar\" offIcon=\"dollar-green\" duration={1000} className=\"icon-14px\" />\r\n                    </a>\r\n                </span>);\r\n        } else {\r\n            return canBuy && this.props.isMyAccount ?\r\n                <span>\r\n                    <a onClick={this._showDepositWithdraw.bind(this, \"bridge_modal\", assetName, false)}>\r\n                        <Icon name=\"dollar\" className=\"icon-14px\" />\r\n                    </a>\r\n                </span> : emptyCell;\r\n        }\r\n    };\r\n\r\n    _renderBalances(balanceList, optionalAssets, visible) {\r\n        const {core_asset} = this.props;\r\n        let {settings, hiddenAssets, orders} = this.props;\r\n        let preferredUnit = settings.get(\"unit\") || core_asset.get(\"symbol\");\r\n        let showAssetPercent = settings.get(\"showAssetPercent\", false);\r\n\r\n        const renderBorrow = (asset, account) => {\r\n            let isBitAsset = asset && asset.has(\"bitasset_data_id\");\r\n            let modalRef = \"cp_modal_\" + asset.get(\"id\");\r\n            return {\r\n                isBitAsset,\r\n                borrowModal: !isBitAsset ? null : <BorrowModal\r\n                    ref={modalRef}\r\n                    quote_asset={asset.get(\"id\")}\r\n                    backing_asset={asset.getIn([\"bitasset\", \"options\", \"short_backing_asset\"])}\r\n                    account={account}\r\n                />,\r\n                borrowLink: !isBitAsset ? null : <a onClick={() => {ReactTooltip.hide();this.refs[modalRef].show();}}><Icon name=\"dollar\" className=\"icon-14px\" /></a>\r\n            };\r\n        };\r\n\r\n        let balances = [];\r\n        const emptyCell = \"-\";\r\n        balanceList.forEach( balance => {\r\n            let balanceObject = ChainStore.getObject(balance);\r\n            let asset_type = balanceObject.get(\"asset_type\");\r\n            let asset = ChainStore.getObject(asset_type);\r\n\r\n            let directMarketLink, settleLink, transferLink;\r\n            let symbol = \"\";\r\n            if (!asset) return null;\r\n\r\n            const assetName = asset.get(\"symbol\");\r\n            const notCore = asset.get(\"id\") !== \"1.3.0\";\r\n            const notCorePrefUnit = preferredUnit !== core_asset.get(\"symbol\");\r\n\r\n            let {market} = assetUtils.parseDescription(asset.getIn([\"options\", \"description\"]));\r\n            symbol = asset.get(\"symbol\");\r\n            if (symbol.indexOf(\"OPEN.\") !== -1 && !market) market = \"USD\";\r\n            let preferredMarket = market ? market : preferredUnit;\r\n\r\n            if (notCore && preferredMarket === symbol) preferredMarket = core_asset.get(\"symbol\");\r\n\r\n            /* Table content */\r\n            directMarketLink = notCore ?\r\n                <Link to={`/market/${asset.get(\"symbol\")}_${preferredMarket}`}><Icon name=\"trade\" className=\"icon-14px\" /></Link> :\r\n                notCorePrefUnit ? <Link to={`/market/${asset.get(\"symbol\")}_${preferredUnit}`}><Icon name=\"trade\" className=\"icon-14px\" /></Link> :\r\n                emptyCell;\r\n            transferLink = <a onClick={this.triggerSend.bind(this, asset.get(\"id\"))}><Icon name=\"transfer\" className=\"icon-14px\" /></a>;\r\n\r\n            let {isBitAsset, borrowModal, borrowLink} = renderBorrow(asset, this.props.account);\r\n\r\n            /* Popover content */\r\n            settleLink = <a href onClick={this._onSettleAsset.bind(this, asset.get(\"id\"))}>\r\n                <Icon name=\"settle\" className=\"icon-14px\" />\r\n            </a>;\r\n\r\n            const includeAsset = !hiddenAssets.includes(asset_type);\r\n            const hasBalance = !!balanceObject.get(\"balance\");\r\n            const hasOnOrder = !!orders[asset_type];\r\n\r\n            const thisAssetName = asset.get(\"symbol\").split(\".\");\r\n            const canDeposit =\r\n                (\r\n                    (thisAssetName[0] == \"OPEN\" || thisAssetName[0] == \"RUDEX\") &&\r\n                    !!this.props.backedCoins.get(\"OPEN\", []).find(a => a.backingCoinType === thisAssetName[1]) ||\r\n                    !!this.props.backedCoins.get(\"RUDEX\", []).find(a => a.backingCoin === thisAssetName[1])\r\n                ) || asset.get(\"symbol\") == \"SEER\";\r\n\r\n            const canDepositWithdraw = !!this.props.backedCoins.get(\"OPEN\", []).find(a => a.symbol === asset.get(\"symbol\"));\r\n            const canWithdraw = canDepositWithdraw && (hasBalance && balanceObject.get(\"balance\") != 0);\r\n            const canBuy = !!this.props.bridgeCoins.get(symbol);\r\n\r\n            balances.push(\r\n                <tr key={asset.get(\"symbol\")} style={{maxWidth: \"100rem\"}}>\r\n                    <td style={{textAlign: \"left\"}}>\r\n                        <LinkToAssetById asset={asset.get(\"id\")} />\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                        {hasBalance || hasOnOrder ? <BalanceComponent balance={balance} hide_asset /> : null}\r\n                    </td>\r\n                    {showAssetPercent ? <td style={{textAlign: \"right\"}}>\r\n                        {hasBalance ? <BalanceComponent balance={balance} asPercentage={true}/> : null}\r\n                    </td> : null}\r\n                    <td>\r\n                        {transferLink}\r\n                    </td>\r\n                    <td>\r\n                        {directMarketLink}\r\n                    </td>\r\n                    <td style={{textAlign: \"center\"}} className=\"column-hide-small\" data-place=\"bottom\" data-tip={counterpart.translate(\"tooltip.\" + (includeAsset ? \"hide_asset\" : \"show_asset\"))}>\r\n                        <a style={{marginRight: 0}} className={includeAsset ? \"order-cancel\" : \"action-plus\"} onClick={this._hideAsset.bind(this, asset_type, includeAsset)}>\r\n                            <Icon name={includeAsset ? \"cross-circle\" : \"plus-circle\"} className=\"icon-14px\" />\r\n                        </a>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        if (optionalAssets) {\r\n            optionalAssets.filter(asset => {\r\n                let isAvailable = false;\r\n                this.props.backedCoins.get(\"OPEN\", []).forEach(coin => {\r\n                    if (coin && (coin.symbol === asset)) {\r\n                        isAvailable = true;\r\n                    }\r\n                });\r\n                if (!!this.props.bridgeCoins.get(asset)) {\r\n                    isAvailable = true;\r\n                }\r\n                let keep = true;\r\n                balances.forEach(a => {\r\n                    if (a.key === asset) keep = false;\r\n                });\r\n                return keep && isAvailable;\r\n            }).forEach(a => {\r\n                let asset = ChainStore.getAsset(a);\r\n                if (asset && this.props.isMyAccount) {\r\n                    const includeAsset = !hiddenAssets.includes(asset.get(\"id\"));\r\n\r\n                    const thisAssetName = asset.get(\"symbol\").split(\".\");\r\n                    const canDeposit =\r\n                        !!this.props.backedCoins.get(\"OPEN\", []).find(a => a.backingCoinType === thisAssetName[1]) ||\r\n                        !!this.props.backedCoins.get(\"RUDEX\", []).find(a => a.backingCoin === thisAssetName[1]) ||\r\n                        asset.get(\"symbol\") == \"SEER\";\r\n\r\n                    const canBuy = !!this.props.bridgeCoins.get(asset.get(\"symbol\"));\r\n\r\n                    const notCore = asset.get(\"id\") !== \"1.3.0\";\r\n                    let {market} = assetUtils.parseDescription(asset.getIn([\"options\", \"description\"]));\r\n                    if (asset.get(\"symbol\").indexOf(\"OPEN.\") !== -1 && !market) market = \"USD\";\r\n                    let preferredMarket = market ? market : core_asset ? core_asset.get(\"symbol\") : \"SEER\";\r\n                    let directMarketLink = notCore ? <Link to={`/market/${asset.get(\"symbol\")}_${preferredMarket}`}><Icon name=\"trade\" className=\"icon-14px\" /></Link> : emptyCell;\r\n                    let {isBitAsset, borrowModal, borrowLink} = renderBorrow(asset, this.props.account);\r\n                    if (includeAsset && visible || !includeAsset && !visible) balances.push(\r\n                        <tr key={asset.get(\"symbol\")} style={{maxWidth: \"100rem\"}}>\r\n                            <td style={{textAlign: \"left\"}}>\r\n                                <LinkToAssetById asset={asset.get(\"id\")} />\r\n                            </td>\r\n                            <td>{emptyCell}</td>\r\n                            <td className=\"column-hide-small\">{emptyCell}</td>\r\n                            <td className=\"column-hide-small\">{emptyCell}</td>\r\n                            <td className=\"column-hide-small\">{emptyCell}</td>\r\n                            <td>{emptyCell}</td>\r\n                            <td style={{textAlign: \"center\"}}>\r\n                                {canBuy  && this.props.isMyAccount ?\r\n                                <span>\r\n                                    <a onClick={this._showDepositWithdraw.bind(this, \"bridge_modal\", a, false)}>\r\n                                        <Icon name=\"dollar\" className=\"icon-14px\" />\r\n                                    </a>\r\n                                </span> : emptyCell}\r\n                            </td>\r\n                            <td style={{textAlign: \"center\"}}>\r\n                                {directMarketLink}\r\n                            </td>\r\n                            <td>\r\n                                {isBitAsset ?\r\n                                    <div className=\"inline-block\" data-place=\"bottom\" data-tip={counterpart.translate(\"tooltip.borrow\", {asset: asset.get(\"symbol\")})}>\r\n                                        {borrowLink}{borrowModal}\r\n                                    </div> : emptyCell}\r\n                            </td>\r\n                            <td>{emptyCell}</td>\r\n                            <td style={{textAlign: \"center\"}} className=\"column-hide-small\" data-place=\"bottom\" data-tip={counterpart.translate(\"tooltip.\" + (includeAsset ? \"hide_asset\" : \"show_asset\"))}>\r\n                                <a style={{marginRight: 0}} className={includeAsset ? \"order-cancel\" : \"action-plus\"} onClick={this._hideAsset.bind(this, asset.get(\"id\"), includeAsset)}>\r\n                                    <Icon name={includeAsset ? \"cross-circle\" : \"plus-circle\"} className=\"icon-14px\" />\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                }\r\n            });\r\n        }\r\n\r\n        balances.sort(this.sortFunctions[this.state.sortKey]);\r\n        return balances;\r\n    }\r\n\r\n    _toggleHiddenAssets() {\r\n        this.setState({\r\n            showHidden: !this.state.showHidden\r\n        });\r\n    }\r\n\r\n    _toggleSortOrder(key) {\r\n        if (this.state.sortKey === key) {\r\n            SettingsActions.changeViewSetting({\r\n                portfolioSortDirection: !this.state.sortDirection\r\n            });\r\n            this.setState({\r\n                sortDirection: !this.state.sortDirection\r\n            });\r\n        } else {\r\n            SettingsActions.changeViewSetting({\r\n                portfolioSort: key\r\n            });\r\n            this.setState({\r\n                sortKey: key\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {account, hiddenAssets, settings, orders} = this.props;\r\n        let {showHidden} = this.state;\r\n\r\n        if (!account) {\r\n            return null;\r\n        }\r\n\r\n        let includedBalances, hiddenBalances;\r\n        let account_balances = account.get(\"balances\");\r\n\r\n        let includedBalancesList = Immutable.List(), hiddenBalancesList = Immutable.List();\r\n\r\n\r\n        if (account_balances) {\r\n            // Filter out balance objects that have 0 balance or are not included in open orders\r\n            account_balances = account_balances.filter((a, index) => {\r\n                let balanceObject = ChainStore.getObject(a);\r\n                if (balanceObject && (!balanceObject.get(\"balance\") && !orders[index])) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            // Separate balances into hidden and included\r\n            account_balances.forEach((a, asset_type) => {\r\n                if (hiddenAssets.includes(asset_type)) {\r\n                    hiddenBalancesList = hiddenBalancesList.push(a);\r\n                } else {\r\n                    includedBalancesList = includedBalancesList.push(a);\r\n                }\r\n            });\r\n\r\n            let included = this._renderBalances(includedBalancesList, this.state.alwaysShowAssets, true);\r\n            includedBalances = included;\r\n            let hidden = this._renderBalances(hiddenBalancesList, this.state.alwaysShowAssets);\r\n            hiddenBalances = hidden;\r\n        }\r\n\r\n        let portfolioHiddenAssetsBalance =\r\n            <TotalBalanceValue\r\n                noTip\r\n                balances={hiddenBalancesList}\r\n                hide_asset\r\n            />;\r\n\r\n        let portfolioActiveAssetsBalance =\r\n            <TotalBalanceValue\r\n                noTip\r\n                balances={includedBalancesList}\r\n                hide_asset\r\n            />;\r\n        let ordersValue =\r\n            <TotalBalanceValue\r\n                noTip\r\n                balances={Immutable.List()}\r\n                openOrders={orders}\r\n                hide_asset\r\n            />;\r\n\r\n        const preferredUnit = settings.get(\"unit\") || this.props.core_asset.get(\"symbol\");\r\n        const totalValueText = <TranslateWithLinks\r\n            noLink\r\n            string=\"account.total\"\r\n            keys={[\r\n                {type: \"asset\", value: preferredUnit, arg: \"asset\"}\r\n            ]}\r\n        />;\r\n\r\n         let showAssetPercent = settings.get(\"showAssetPercent\", false);\r\n\r\n        // Find the current Openledger coins\r\n        // const currentDepositAsset = this.props.backedCoins.get(\"OPEN\", []).find(c => {\r\n        //     return c.symbol === this.state.depositAsset;\r\n        // }) || {};\r\n        const currentWithdrawAsset = this.props.backedCoins.get(\"OPEN\", []).find(c => {\r\n            return c.symbol === this.state.withdrawAsset;\r\n        }) || {};\r\n        const currentBridges = this.props.bridgeCoins.get(this.state.bridgeAsset) || null;\r\n\r\n        const preferredAsset = ChainStore.getAsset(preferredUnit);\r\n        let assetName = !!preferredAsset ? preferredAsset.get(\"symbol\") : \"\";\r\n        if (preferredAsset) {\r\n            const {prefix, name} = utils.replaceName(assetName, !!preferredAsset.get(\"bitasset_data_id\"));\r\n            assetName = (prefix || \"\") + name;\r\n        }\r\n        const hiddenSubText = <span style={{visibility: \"hidden\"}}>H</span>;\r\n\r\n        return (\r\n            <div className=\"grid-content app-tables no-padding\" ref=\"appTables\">\r\n                <div className=\"content-block small-12\">\r\n                    <div className=\"tabs-container generic-bordered-box\">\r\n                        <Tabs defaultActiveTab={0} segmented={false} setting=\"overviewTab\" className=\"account-tabs\" tabsClass=\"account-overview no-padding bordered-header content-block\">\r\n                            <Tab title=\"account.portfolio\" subText={portfolioActiveAssetsBalance}>\r\n                                <div className=\"header-selector\">\r\n                                    <div className=\"selector\">\r\n                                        <div className={cnames(\"inline-block\", {inactive: showHidden && hiddenBalances.length})} onClick={showHidden ? this._toggleHiddenAssets.bind(this) : () => {}}>\r\n                                            <Translate content=\"account.hide_hidden\" />\r\n                                        </div>\r\n                                        {hiddenBalances.length ? <div className={cnames(\"inline-block\", {inactive: !showHidden})} onClick={!showHidden ? this._toggleHiddenAssets.bind(this) : () => {}}>\r\n                                            <Translate content=\"account.show_hidden\" />\r\n                                        </div> : null}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Send Modal */}\r\n                                <SendModal id=\"send_modal_portfolio\" ref=\"send_modal\" from_name={this.props.account.get(\"name\")} asset_id={this.state.send_asset || \"1.3.0\"}/>\r\n\r\n                                <table className=\"table dashboard-table table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style={{textAlign: \"left\"}} className=\"clickable\" onClick={this._toggleSortOrder.bind(this, \"alphabetic\")}><Translate component=\"span\" content=\"account.asset\" /></th>\r\n                                            <th style={{textAlign: \"right\"}}><Translate content=\"account.qty\" /></th>\r\n                                            {showAssetPercent ? <th style={{textAlign: \"right\"}}><Translate component=\"span\" content=\"account.percent\" /></th> : null}\r\n                                            <th><Translate content=\"header.payments\" /></th>\r\n                                            <th><Translate content=\"account.trade\" /></th>\r\n                                            <th className=\"column-hide-small\"><Translate content={!showHidden ? \"exchange.hide\" : \"account.perm.show\"} /></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {showHidden && hiddenBalances.length ? hiddenBalances : includedBalances}\r\n                                    </tbody>\r\n                                </table>\r\n                            </Tab>\r\n\r\n                            <Tab title=\"account.open_orders\" subText={ordersValue}>\r\n                                <AccountOrders {...this.props}>\r\n                                    <tbody>\r\n                                        <tr className=\"total-value\">hiddenSubText\r\n                                            <td colSpan=\"7\" style={{textAlign: \"right\"}}>\r\n                                                {totalValueText}\r\n                                            </td>\r\n                                            <td colSpan=\"2\" style={{textAlign: \"left\"}}>{ordersValue}</td>\r\n                                            {this.props.isMyAccount ? <td></td> : null}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </AccountOrders>\r\n                            </Tab>\r\n\r\n                            <Tab title=\"account.activity\" subText={hiddenSubText}>\r\n                                <RecentTransactions\r\n                                    accountsList={Immutable.fromJS([account.get(\"id\")])}\r\n                                    compactView={false}\r\n                                    showMore={true}\r\n                                    fullHeight={true}\r\n                                    limit={15}\r\n                                    showFilters={true}\r\n                                    dashboard\r\n                                />\r\n                            </Tab>\r\n\r\n                            {account.get(\"proposals\") && account.get(\"proposals\").size ?\r\n                            <Tab title=\"explorer.proposals.title\" subText={account.get(\"proposals\") ? account.get(\"proposals\").size : 0}>\r\n\r\n                                    <Proposals className=\"dashboard-table\" account={account.get(\"id\")}/>\r\n                            </Tab> : null}\r\n                        </Tabs>\r\n\r\n\r\n\r\n                        <SettleModal ref=\"settlement_modal\" asset={this.state.settleAsset} account={account.get(\"name\")}/>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Deposit Modal */}\r\n                {/* <SimpleDepositWithdraw\r\n                    ref=\"deposit_modal\"\r\n                    action=\"deposit\"\r\n                    fiatModal={this.state.fiatModal}\r\n                    account={this.props.account.get(\"name\")}\r\n                    sender={this.props.account.get(\"id\")}\r\n                    asset={this.state.depositAsset}\r\n                    modalId=\"simple_deposit_modal\"\r\n                    balances={this.props.balances}\r\n                    {...currentDepositAsset}\r\n                    isDown={this.props.gatewayDown.get(\"OPEN\")}\r\n                /> */}\r\n\r\n                {/* Withdraw Modal*/}\r\n                <SimpleDepositWithdraw\r\n                    ref=\"withdraw_modal\"\r\n                    action=\"withdraw\"\r\n                    fiatModal={this.state.fiatModal}\r\n                    account={this.props.account.get(\"name\")}\r\n                    sender={this.props.account.get(\"id\")}\r\n                    asset={this.state.withdrawAsset}\r\n                    modalId=\"simple_withdraw_modal\"\r\n                    balances={this.props.balances}\r\n                    {...currentWithdrawAsset}\r\n                    isDown={this.props.gatewayDown.get(\"OPEN\")}\r\n                />\r\n\r\n                {/* Deposit Modal */}\r\n                <DepositModal\r\n                    ref=\"deposit_modal_new\"\r\n                    modalId=\"deposit_modal_new\"\r\n                    asset={this.state.depositAsset}\r\n                    account={this.props.account.get(\"name\")}\r\n                    backedCoins={this.props.backedCoins}\r\n                />\r\n\r\n                {/* Bridge modal */}\r\n                <SimpleDepositBlocktradesBridge\r\n                    ref=\"bridge_modal\"\r\n                    action=\"deposit\"\r\n                    account={this.props.account.get(\"name\")}\r\n                    sender={this.props.account.get(\"id\")}\r\n                    asset={this.state.bridgeAsset}\r\n                    modalId=\"simple_bridge_modal\"\r\n                    balances={this.props.balances}\r\n                    bridges={currentBridges}\r\n                    isDown={this.props.gatewayDown.get(\"TRADE\")}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nAccountOverview = BindToChainState(AccountOverview);\r\n\r\nclass BalanceWrapper extends React.Component {\r\n\r\n    static propTypes = {\r\n        balances: ChainTypes.ChainObjectsList,\r\n        orders: ChainTypes.ChainObjectsList\r\n    };\r\n\r\n    static defaultProps = {\r\n        balances: Immutable.List(),\r\n        orders: Immutable.List()\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (Apis.instance().chain_id.substr(0, 8) === \"4018d784\") { // Only fetch this when on BTS main net\r\n            GatewayActions.fetchCoins();\r\n            GatewayActions.fetchBridgeCoins();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let balanceAssets = this.props.balances.map(b => {\r\n            return b && b.get(\"asset_type\");\r\n        }).filter(b => !!b);\r\n\r\n        let ordersByAsset = this.props.orders.reduce((orders, o) => {\r\n            let asset_id = o.getIn([\"sell_price\", \"base\", \"asset_id\"]);\r\n            if (!orders[asset_id]) orders[asset_id] = 0;\r\n            orders[asset_id] += parseInt(o.get(\"for_sale\"), 10);\r\n            return orders;\r\n        }, {});\r\n\r\n        for (let id in ordersByAsset) {\r\n            if (balanceAssets.indexOf(id) === -1) {\r\n                balanceAssets.push(id);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <AccountOverview {...this.state} {...this.props} orders={ordersByAsset} balanceAssets={Immutable.List(balanceAssets)} />\r\n        );\r\n    };\r\n}\r\n\r\nexport default BindToChainState(BalanceWrapper);\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Account/AccountOverview.jsx"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;;;;AAhCA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AACA;AACA;AAJA;AACA;AAwBA;;;AAoBA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AANA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAdA;AAFA;AAmBA;AAAA;AAAA;AACA;AADA;AApBA;AA0BA;;;;AAnIA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AACA;AALA;AARA;AAiBA;AADA;AACA;AACA;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;;;;;;;;;AClMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;;;AAOA;AAAA;AACA;AADA;AACA;AAEA;AACA;AADA;AACA;AAGA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AACA;AAGA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AARA;AAWA;AACA;;;;AA7DA;AACA;AADA;AAGA;AACA;AAFA;AAFA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACttzlllHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAkcA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAFA;AAjBA;AACA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AADA;AADA;AASA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAOA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AARA;AARA;AAyBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAnBA;AAzCA;AADA;AAqEA;;;;AA1RA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAYA;AACA;AACA;AACA;AAJA;AACA;AAgRA;AACA;AACA;;;;;;;;;;;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAdA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAFA;AASA;AADA;AACA;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;;;AAiBA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AAMA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;AAjFA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AA0EA;AACA;AACA;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;AACA;AAUA;;;;;;;;;;;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;AAdA;AACA;AADA;AAGA;AADA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;AC9IA;AACA;AACA;AACA;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;;;;AAhCA;AACA;AAkCA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAHA;AALA;AAUA;AACA;;;AACA;AAAA;AAAA;AACA;AAAA;AAKA;;;AAEA;AACA;AAKA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;AArCA;AACA;AAuCA;;;AAOA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AAGA;;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAFA;AAYA;;;;AAvCA;AACA;AADA;AAGA;AACA;AAFA;AACA;AACA;AAsCA;AACA;AACA;;;;;;;;;;;AACA;AACA;AAGA;;;;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAQA;;;;AAdA;AACA;AAgBA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AARA;AAaA;;;;AAtBA;AACA;AAwBA;AACA;AACA;AAFA;AACA;AAKA;;;;;;;;;;;AAEA;AACA;AAIA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;AAhCA;AACA;AAkCA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AADA;AAUA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AAYA;;;;AA7BA;AACA;AA+BA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;AAEA;AACA;AAOA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAVA;AAiBA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AATA;AAiBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AAVA;AAmBA;AAAA;AAAA;AACA;AADA;AACA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAvDA;AA8DA;;;;AAzGA;AACA;AA2GA;AACA;AADA;AACA;AAIA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAJA;AADA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AA1BA;AALA;AAuCA;;;;AAjMA;AACA;AAmMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAcA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAyBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AASA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AATA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAqBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAXA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAXA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAHA;AAWA;AAAA;AAAA;AAAA;AAAA;AAbA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAhFA;AAuFA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AAHA;AADA;AAUA;AACA;AAAA;AACA;AADA;AApBA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AADA;AA9BA;AAqCA;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AANA;AACA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AANA;AAFA;AADA;AAcA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AATA;AANA;AAmBA;;;;AAxkBA;AACA;AADA;AAGA;AACA;AACA;AACA;AAJA;AAFA;AAUA;AACA;AAFA;AACA;AAgkBA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AAHA;AAIA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;AAvBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AACA;AAdA;AAeA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AASA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAZA;AAcA;;;AAEA;AACA;AAQA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAPA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AAHA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AADA;AAFA;AARA;AAuBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAxBA;AADA;AAkCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AALA;AARA;AADA;AAqBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AAZA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AA/EA;AAuFA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AADA;AAzGA;AAmHA;;;AAEA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AANA;AACA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AANA;AAFA;AADA;AAcA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAfA;AAHA;AAuBA;;;;AAxbA;AACA;AADA;AAGA;AACA;AAFA;AACA;AAubA;AACA;AACA;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;AACA;AAUA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;AA3BA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;;;AAWA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAOA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAGA;AACA;AADA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAJA;AAWA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AA0BA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAHA;AA5BA;AAyCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AATA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AANA;AApFA;AAFA;AADA;AAmGA;;;;AA5aA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AA2aA;AACA;AACA;AACA;AAAA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AADA;AAgBA;;;;AAxDA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAAA;AAAA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAVA;AAFA;AAoBA;;;;AAzGA;AACA;AADA;AAEA;AACA;AAFA;AACA;AAyGA;AACA;AACA;;;;;;;;;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;;;;AAdA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;;;AAcA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AAIA;;;AAEA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AA7CA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AAJA;AACA;AAuCA;AACA;AACA;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxJA;AACA;AA0JA;;;;;;;;;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAYA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AADA;AANA;AAVA;AACA;AAuBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAvFA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAFA;AASA;AADA;AACA;AAgFA;AACA;AACA;;;;;;;;;;;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AATA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AApCA;AACA;AADA;AAGA;AADA;AAFA;AAOA;AADA;AACA;AAgCA;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;AAzBA;AACA;AA2BA;;;AAaA;AAAA;AACA;AADA;AACA;AAEA;AACA;AADA;AACA;AAGA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;;;AA5EA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AAHA;AACA;AAsEA;AACA;AACA;;;;;;;;;;;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAJA;AAOA;;;;AA3BA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AACA;AAFA;AACA;AACA;AAqBA;;;;;;;;;;;;ACtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAnBA;AA4BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AADA;AAPA;AA1CA;AADA;AAyDA;;;;AApLA;AACA;AADA;AAGA;AADA;AAmLA;AACA;AACA;AACA;;;AAOA;AAAA;AACA;AADA;AACA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAJA;AAOA;;;;AA9DA;AACA;AADA;AAGA;AACA;AAFA;AACA;AA6DA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAEA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAFA;AASA;;;;AAnCA;AACA;AADA;;;;;;;;;;ACxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAOA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAxBA;AAXA;AA6CA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AADA;AAOA;AAAA;AAAA;AACA;AADA;AARA;AAaA;;;;AAvIA;AACA;AADA;AAGA;AADA;AACA;AACA;AAsIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAGA;AAHA;AAKA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAPA;AAcA;;;;AA7NA;AACA;AA+NA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;AACA;AAUA;;;;;;;;;ACvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAiBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AAGA;;;;;AAfA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAUA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAGA;;;;AA/BA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAFA;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAWA;AAAA;AACA;AADA;AACA;AADA;AAgCA;AACA;AACA;AACA;AACA;AALA;AACA;AAhCA;AAyHA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AACA;AAvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AA5BA;AA6BA;AACA;;;AASA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AASA;;;AAEA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAoBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AA1BA;AAAA;AAAA;AAAA;AACA;AA4BA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAhBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAZA;AAAA;AACA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAhBA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAFA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AA3BA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAHA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AADA;AAYA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AADA;AAXA;AAfA;AAgCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AADA;AADA;AADA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;AAAA;AAEA;AAFA;AA5DA;AAoEA;AArEA;AADA;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAVA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAjHA;AA+HA;;;;AAvjBA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AADA;AACA;AACA;AAijBA;AACA;AACA;;;;;;;;;;;AAYA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AAxCA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AACA;AAFA;AACA;AACA;AAkCA;;;;A","sourceRoot":""}