{"version":3,"file":"53.js","sources":["webpack:///app/components/Account/CreateWorker.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"alt-react\";\r\nimport ApplicationApi from \"api/ApplicationApi\";\r\nimport AccountStore from \"stores/AccountStore\";\r\nimport utils from \"common/utils\";\r\nimport notify from \"actions/NotificationActions\";\r\nimport Translate from \"react-translate-component\";\r\n\r\nclass CreateWorker extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title: null,\r\n            start: new Date(),\r\n            end: null,\r\n            pay: null,\r\n            url: \"http://\",\r\n            vesting: 7\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(np, ns) {\r\n        return (\r\n            np.currentAccount !== this.props.currentAccount,\r\n            !utils.are_equal_shallow(ns, this.state)\r\n        );\r\n    }\r\n\r\n    onSubmit() {\r\n        ApplicationApi.createWorker(this.state, this.props.currentAccount).catch(error => {\r\n            console.log(\"error\", error);\r\n            let error_msg = error.message && error.message.length && error.message.length > 0 ? error.message.split(\"stack\")[0] : \"unknown error\";\r\n\r\n            notify.addNotification({\r\n                message: `Failed to create worker: ${error_msg}`,\r\n                level: \"error\",\r\n                autoDismiss: 10\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"state:\", this.state);\r\n        return <div className=\"grid-block\" style={{paddingTop: 20}}>\r\n            <div className=\"grid-content large-9 large-offset-3 small-12\">\r\n                <Translate content=\"explorer.workers.create\" component=\"h3\" />\r\n                <form style={{maxWidth: 800}}>\r\n                    <Translate content=\"explorer.workers.create_text_1\" component=\"p\" />\r\n                    <Translate content=\"explorer.workers.create_text_2\" component=\"p\" />\r\n\r\n                    <label>\r\n                        <Translate content=\"explorer.workers.title\" />\r\n                        <input onChange={(e) => {this.setState({title: e.target.value});}} type=\"text\"></input>\r\n                    </label>\r\n                    <Translate content=\"explorer.workers.name_text\" component=\"p\" />\r\n                    <div style={{width: \"50%\", paddingRight: \"2.5%\", display: \"inline-block\"}}>\r\n                        <label>\r\n                            <Translate content=\"account.votes.start\" />\r\n                            <input  onChange={(e) => {this.setState({start: new Date(e.target.value)});}} type=\"date\"></input>\r\n                        </label>\r\n                    </div>\r\n                    <div style={{width: \"50%\", paddingLeft: \"2.5%\", display: \"inline-block\"}}>\r\n                        <label>\r\n                            <Translate content=\"account.votes.end\" />\r\n                            <input onChange={(e) => {this.setState({end: new Date(e.target.value)});}} type=\"date\"></input>\r\n                        </label>\r\n                    </div>\r\n                    <Translate content=\"explorer.workers.date_text\" component=\"p\" />\r\n\r\n                    <label>\r\n                        <Translate content=\"explorer.workers.daily_pay\" />\r\n                        <input onChange={(e) => {this.setState({pay: e.target.value});}} type=\"number\"></input>\r\n                    </label>\r\n                    <Translate content=\"explorer.workers.pay_text\" component=\"p\" />\r\n\r\n\r\n                    <label>\r\n                        <Translate content=\"explorer.workers.website\" />\r\n                        <input onChange={(e) => {this.setState({url: e.target.value});}} type=\"text\"></input>\r\n                    </label>\r\n                    <Translate content=\"explorer.workers.url_text\" component=\"p\" />\r\n\r\n                    <label>\r\n                        <Translate content=\"explorer.workers.vesting_pay\" />\r\n                        <input defaultValue={this.state.vesting} onChange={(e) => {this.setState({vesting: parseInt(e.target.value)});}} type=\"number\"></input>\r\n                    </label>\r\n                    <Translate content=\"explorer.workers.vesting_text\" component=\"p\" />\r\n\r\n\r\n                    <div className=\"button-group\" onClick={this.onSubmit.bind(this)}>\r\n                        <div className=\"button\" type=\"submit\">Publish</div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default CreateWorker = connect(CreateWorker, {\r\n    listenTo() {\r\n        return [AccountStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            currentAccount: AccountStore.getState().currentAccount\r\n        };\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Account/CreateWorker.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAWA;AACA;;;AACA;AACA;AAIA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAMA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AA3CA;AAFA;AADA;AAoDA;;;;AA1FA;AACA;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;;;;A","sourceRoot":""}