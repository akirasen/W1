{"version":3,"file":"51.js","sources":["webpack:///app/lib/feature_detect/browser.js","webpack:///app/lib/feature_detect/incognito.js","webpack:///app/lib/feature_detect/index.js","webpack:///app/components/LoginSelector.jsx"],"sourcesContent":["export default function(){\r\n    let ua = navigator.userAgent.toLowerCase();\r\n\r\n    if(ua.indexOf(\"firefox\") > -1){ //is firefox\r\n        return \"firefox\";\r\n    } else if(ua.search(\"safari\") >= 0 && ua.search(\"chrome\") < 0){ //is safari\r\n        return \"safari\";\r\n    } else if(window.chrome){ //is chrome\r\n        return \"chrome\";\r\n    } else if(ua.indexOf(\"msie\") > -1 || ua.match(/trident.*rv\\:11\\./)){ //is IE\r\n        return \"ie\";\r\n    } else if(ua.indexOf(\"opera\") > -1){\r\n        return \"opera\";\r\n    } else {\r\n        return ua;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/lib/feature_detect/browser.js","import browser from './browser'\r\n/*\r\n* Using feature detectino techniques described here:\r\n* https://stackoverflow.com/questions/2860879/detecting-if-a-browser-is-using-private-browsing-mode\r\n*/\r\nexport default function(cb){\r\n    return cb(false);\r\n    // let ua = navigator.userAgent.toLowerCase();\r\n    // let name = browser();\r\n    // if(name === \"firefox\"){\r\n    //     var db = indexedDB.open(\"test\");\r\n    //     db.onerror = function(){\r\n    //         cb(true);\r\n    //     };\r\n    //     db.onsuccess =function(){\r\n    //         cb(false);\r\n    //     };\r\n    // } else if(name === \"safari\"){\r\n    //     var storage = window.sessionStorage;\r\n    //     try {\r\n    //         storage.setItem(\"someKeyHere\", \"test\");\r\n    //         storage.removeItem(\"someKeyHere\");\r\n    //         cb(false);\r\n    //     } catch (e) {\r\n    //         if (e.code === DOMException.QUOTA_EXCEEDED_ERR && storage.length === 0) {\r\n    //             //Private here\r\n    //             cb(true);\r\n    //         } else {\r\n    //             cb(false);\r\n    //         }\r\n    //     }\r\n    // } else if(name === \"chrome\" || name === \"opera\"){\r\n    //     var fs = window.RequestFileSystem || window.webkitRequestFileSystem;\r\n    //     if (!fs) {\r\n    //         cb(false);\r\n    //         return;\r\n    //     }\r\n    //\r\n    //     fs(window.TEMPORARY, 100, function (fs) {\r\n    //         // Not incognito mode\r\n    //         cb(false);\r\n    //     }, function (err) {\r\n    //         // Incognito mode\r\n    //         cb(true);\r\n    //     });\r\n    // } else if(name === \"ie\"){\r\n    //     if(!window.indexedDB && (window.PointerEvent || window.MSPointerEvent)){\r\n    //         //Privacy Mode\r\n    //         cb(true);\r\n    //     } else {\r\n    //         cb(false);\r\n    //     }\r\n    // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/lib/feature_detect/incognito.js","import isIncognito from \"./incognito\";\r\nimport browser from \"./browser\";\r\n\r\nexport { isIncognito, browser }\r\n\n\n\n// WEBPACK FOOTER //\n// app/lib/feature_detect/index.js","import React from \"react\";\r\nimport { connect } from \"alt-react\";\r\nimport AccountStore from \"stores/AccountStore\";\r\nimport {Link} from \"react-router/es\";\r\nimport Translate from \"react-translate-component\";\r\nimport { isIncognito } from \"feature_detect\";\r\nvar logo = require(\"assets/logo-ico-blue.png\");\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport WalletUnlockActions from \"actions/WalletUnlockActions\";\r\nimport ActionSheet from \"react-foundation-apps/src/action-sheet\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\nimport IntlActions from \"actions/IntlActions\";\r\nimport AccountActions from \"../actions/AccountActions\";\r\n\r\nconst FlagImage = ({flag, width = 50, height = 50}) => {\r\n     return <img height={height} width={width} src={`${__BASE_URL__}language-dropdown/${flag.toUpperCase()}.png`} />;\r\n};\r\n\r\nclass LoginSelector extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        AccountActions.setRegisterStep(1);\r\n        this.state = {\r\n            locales: SettingsStore.getState().defaults.locale,\r\n            currentLocale: SettingsStore.getState().settings.get(\"locale\")\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const myAccounts = AccountStore.getMyAccounts();\r\n\r\n        // use ChildCount to make sure user is on /create-account page except /create-account/*\r\n        // to prevent redirect when user just registered and need to make backup of wallet or password\r\n        const childCount = React.Children.count(this.props.children);\r\n\r\n        // do redirect to portfolio if user already logged in\r\n        if(Array.isArray(myAccounts) && myAccounts.length !== 0 && childCount === 0)\r\n            this.props.router.push(\"/account/\"+this.props.currentAccount);\r\n    }\r\n\r\n    componentWillMount(){\r\n        isIncognito((incognito)=>{\r\n            this.setState({incognito});\r\n        });\r\n    }\r\n\r\n    onSelect(route) {\r\n        this.props.router.push(\"/create-account/\" + route);\r\n    }\r\n\r\n    render() {\r\n        const translator = require(\"counterpart\");\r\n        \r\n        const childCount = React.Children.count(this.props.children);\r\n        \r\n        const flagDropdown = <ActionSheet>\r\n            <ActionSheet.Button title=\"\" style={{width:\"64px\"}}>\r\n                <a style={{padding: \"1rem\", border: \"none\"}} className=\"button arrow-down\">\r\n                    <FlagImage flag={this.state.currentLocale} />\r\n                </a>\r\n            </ActionSheet.Button>\r\n            <ActionSheet.Content>\r\n                <ul className=\"no-first-element-top-border\">\r\n                    {this.state.locales.map(locale => {\r\n                        return (\r\n                            <li key={locale}>\r\n                                <a href onClick={(e) => {e.preventDefault(); IntlActions.switchLocale(locale); this.setState({currentLocale: locale});}}>\r\n                                    <div className=\"table-cell\"><FlagImage width=\"20\" height=\"20\" flag={locale} /></div>\r\n                                    <div className=\"table-cell\" style={{paddingLeft: 10}}><Translate content={\"languages.\" + locale} /></div>\r\n                                </a>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </ActionSheet.Content>\r\n        </ActionSheet>;\r\n\r\n        let formTitle = \"header.create_account\";\r\n        if(AccountStore.getState().registerStep === 3){\r\n          formTitle = \"header.backup_bin\";\r\n        }else if(AccountStore.getState().registerStep === 9){\r\n          formTitle = \"header.restore_bin\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"grid-block align-center\" style={{background:\"#F2F2F2\"}}>\r\n                <div className=\"grid-block shrink vertical\">\r\n                    <div className=\"grid-content shrink text-center account-creation\">\r\n                        {childCount == 0 ? null :\r\n                            <div>\r\n                                <Translate content={formTitle} component=\"h4\"/>\r\n                            </div>\r\n                        }\r\n\r\n                        {childCount == 1 ? null :\r\n                            <div>\r\n                                <Translate content=\"account.intro_text_title\" component=\"h4\"/>\r\n                                <Translate unsafe content=\"account.intro_text_1\" component=\"p\" />\r\n                               \r\n                                <div className=\"shrink text-center\">\r\n                                    <div className=\"grp-menu-item overflow-visible account-drop-down\">\r\n                                        <div className=\"grp-menu-item overflow-visible\" style={{margin:\"0 auto\"}} data-intro={translator.translate(\"walkthrough.language_flag\")}>\r\n                                        {flagDropdown}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        \r\n                        {!!childCount ? null :\r\n                        <div className=\"grid-block account-login-options\">\r\n                            <Link to=\"/create-account/wallet\" className=\"button primary\" data-intro={translator.translate(\"walkthrough.create_cloud_wallet\")}>\r\n                                <Translate content=\"header.create_account\" />\r\n                            </Link>\r\n\r\n                            {/*<span className=\"button hollow primary\" onClick={() => {\r\n                                SettingsActions.changeSetting({setting: \"passwordLogin\", value: true});\r\n                                WalletUnlockActions.unlock.defer();\r\n                            }}>\r\n                                <Translate content=\"header.unlock_short\" />\r\n                            </span>\r\n                            */}\r\n                        </div>}\r\n\r\n                        {!!childCount ? null :\r\n                        <div className=\"additional-account-options\">\r\n                            <p>Optionally, <Link to=\"/wallet/backup/restore\" data-intro={translator.translate(\"walkthrough.restore_account\")}>restore your account</Link> or create an account using the <Link to=\"/create-account/wallet\" data-intro={translator.translate(\"walkthrough.create_local_wallet\")}>advanced form</Link>.</p>\r\n                        </div>}\r\n\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(LoginSelector, {\r\n    listenTo() {\r\n        return [AccountStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            currentAccount: AccountStore.getState().currentAccount || AccountStore.getState().passwordAccount,\r\n        };\r\n    }\r\n});\n\n\n// WEBPACK FOOTER //\n// app/components/LoginSelector.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAJA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AAVA;AADA;AANA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAJA;AAcA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAcA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AA1CA;AADA;AADA;AAiDA;;;;AAtHA;AACA;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;;;;A","sourceRoot":""}