{"version":3,"file":"24.js","sources":["webpack:///app/components/Utility/Tabs.jsx","webpack:///./app/components/Explorer/witnesses.scss?119b","webpack:///./app/components/Explorer/witnesses.scss","webpack:///app/components/Explorer/Witnesses.jsx","webpack:///app/components/Explorer/Explorer.jsx"],"sourcesContent":["import React, {PropTypes} from \"react\";\r\nimport Translate from \"react-translate-component\";\r\nimport cnames from \"classnames\";\r\nimport { connect } from \"alt-react\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\n\r\n/**\r\n *  Renders a tab layout, handling switching and optionally persists the currently open tab using the SettingsStore\r\n *\r\n *  props:\r\n *     setting: unique name to be used to remember the active tab of this tabs layout,\r\n *     tabsClass: optional classes for the tabs container div\r\n *     contentClass: optional classes for the content container div\r\n *\r\n *  Usage:\r\n *\r\n *  <Tabs setting=\"mySetting\">\r\n *      <Tab title=\"locale.string.title1\">Tab 1 content</Tab>\r\n *      <Tab title=\"locale.string.title2\">Tab 2 content</Tab>\r\n *  </Tabs>\r\n *\r\n */\r\n\r\nclass Tab extends React.Component {\r\n\r\n    static propTypes = {\r\n        changeTab: PropTypes.func,\r\n        isActive: PropTypes.bool.isRequired,\r\n        index: PropTypes.number.isRequired,\r\n        className: PropTypes.string,\r\n        isLinkTo: PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        isActive: false,\r\n        index: 0,\r\n        className: \"\",\r\n        isLinkTo: \"\"\r\n    };\r\n\r\n    render() {\r\n        let {isActive, index, changeTab, title, className, disabled} = this.props;\r\n        let c = cnames({\"is-active\": isActive}, className);\r\n\r\n        if (this.props.collapsed) {\r\n            return <option value={index} data-is-link-to={this.props.isLinkTo} >{typeof title === \"string\" && title.indexOf(\".\") > 0 ? <Translate className=\"tab-title\" content={title} /> : <span className=\"tab-title\">{title}</span>}</option>;\r\n        }\r\n        return (\r\n            <li className={c} onClick={!disabled ? changeTab.bind(this, index,this.props.isLinkTo) : null}>\r\n                <a>\r\n                    {typeof title === \"string\" && title.indexOf(\".\") > 0 ? <Translate className=\"tab-title\" content={title} /> : <span className=\"tab-title\">{title}</span>}\r\n                    {this.props.subText ? <div className=\"tab-subtext\">{this.props.subText}</div> : null}\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Tabs extends React.Component {\r\n\r\n    static propTypes = {\r\n        setting: PropTypes.string,\r\n        defaultActiveTab: PropTypes.number,\r\n        segmented: PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        active: 0,\r\n        defaultActiveTab: 0,\r\n        segmented: true,\r\n        contentClass: \"\",\r\n        style: {}\r\n    };\r\n\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            activeTab: props.setting ? props.viewSettings.get(props.setting, props.defaultActiveTab) : props.defaultActiveTab,\r\n            width: window.innerWidth\r\n        };\r\n\r\n        this._setDimensions = this._setDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._setDimensions();\r\n        window.addEventListener(\"resize\", this._setDimensions, {capture: false, passive: true});\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let nextSetting = nextProps.viewSettings.get(nextProps.setting);\r\n        if (nextSetting !== this.props.viewSettings.get(this.props.setting)) {\r\n            this.setState({\r\n                activeTab: nextSetting\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this._setDimensions);\r\n    }\r\n\r\n    _setDimensions() {\r\n        let width = window.innerWidth;\r\n\r\n        if (width !== this.state.width) {\r\n            this.setState({width});\r\n        }\r\n    }\r\n\r\n    _changeTab(value,isLinkTo) {\r\n        if (value === this.state.activeTab) return;\r\n        // Persist current tab if desired\r\n\r\n        if (isLinkTo !== \"\") {\r\n            this.context.router.push(isLinkTo);\r\n            return;\r\n        }\r\n\r\n        if (this.props.setting) {\r\n            SettingsActions.changeViewSetting({\r\n                [this.props.setting]: value\r\n            });\r\n        }\r\n        this.setState({activeTab: value});\r\n\r\n        if(this.props.onChangeTab) this.props.onChangeTab(value);\r\n    }\r\n\r\n    render() {\r\n        let {children, contentClass, tabsClass, style, segmented} = this.props;\r\n        const collapseTabs = this.state.width < 900 && React.Children.count(children) > 2;\r\n\r\n        let activeContent = null;\r\n\r\n        let tabIndex = [];\r\n        let tabs = React.Children.map(children, (child, index) => {\r\n            if (!child) {\r\n                return null;\r\n            }\r\n            if (collapseTabs && child.props.disabled) return null;\r\n            let isActive = index === this.state.activeTab;\r\n            if (isActive) {\r\n                activeContent = child.props.children;\r\n            }\r\n\r\n            return React.cloneElement(child, {collapsed: collapseTabs, isActive, changeTab: this._changeTab.bind(this), index: index} );\r\n        }).filter(a => {\r\n            if (a) {\r\n                tabIndex.push(a.props.index);\r\n            }\r\n            return a !== null;\r\n        });\r\n\r\n        if (!activeContent) {\r\n            activeContent = tabs[0].props.children;\r\n        }\r\n\r\n        return (\r\n            <div className={cnames(!!this.props.actionButtons ? \"with-buttons\" : \"\", this.props.className)}>\r\n                <div className=\"service-selector\">\r\n\r\n                    <ul style={style} className={cnames(\"button-group no-margin\", tabsClass, {segmented})}>\r\n                        {collapseTabs ?\r\n                            <li style={{paddingLeft: 10, paddingRight: 10, minWidth: \"15rem\"}}>\r\n                                <select\r\n                                    value={this.state.activeTab}\r\n                                    style={{marginTop: 10, marginBottom: 10}}\r\n                                    className=\"bts-select\"\r\n                                    onChange={(e) => { let ind = parseInt(e.target.value, 10); this._changeTab(ind,e.target[ind].attributes[\"data-is-link-to\"].value);}}\r\n                                >\r\n                                    {tabs}\r\n                                </select>\r\n                            </li> :\r\n                            tabs\r\n                        }\r\n                        {this.props.actionButtons ? <li className=\"tabs-action-buttons\">{this.props.actionButtons}</li> : null}\r\n                    </ul>\r\n                </div>\r\n                <div className={contentClass + \" tab-content\"} >\r\n                    {activeContent}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTabs = connect(Tabs, {\r\n    listenTo() {\r\n        return [SettingsStore];\r\n    },\r\n    getProps() {\r\n        return {viewSettings: SettingsStore.getState().viewSettings};\r\n    }\r\n});\r\n\r\nexport {Tabs, Tab};\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Utility/Tabs.jsx","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/index.js??ref--6-3!../../../node_modules/sass-loader/lib/loader.js??ref--6-4!./witnesses.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/index.js??ref--6-3!../../../node_modules/sass-loader/lib/loader.js??ref--6-4!./witnesses.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/index.js??ref--6-3!../../../node_modules/sass-loader/lib/loader.js??ref--6-4!./witnesses.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/components/Explorer/witnesses.scss\n// module id = 1609\n// module chunks = 24 25 34","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".active-witness>td{background-color:rgba(80,210,194,.4);transition:background-color .6s ease}.clickable{cursor:pointer;user-select:none}.view-switcher{padding-top:1rem;text-align:right}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader??ref--6-3!./node_modules/sass-loader/lib/loader.js??ref--6-4!./app/components/Explorer/witnesses.scss\n// module id = 1610\n// module chunks = 24 25 34","import React from \"react\";\r\nimport Immutable from \"immutable\";\r\nimport AccountImage from \"../Account/AccountImage\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport {ChainStore} from \"seerjs/es\";\r\nimport FormattedAsset from \"../Utility/FormattedAsset\";\r\nimport Translate from \"react-translate-component\";\r\nimport TimeAgo from \"../Utility/TimeAgo\";\r\nimport { connect } from \"alt-react\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\nimport classNames from \"classnames\";\r\nimport Explorer from \"./Explorer\";\r\nvar Apis =  require(\"seerjs-ws\").Apis;\r\nrequire(\"./witnesses.scss\");\r\n\r\nclass WitnessCard extends React.Component {\r\n\r\n    static propTypes = {\r\n        witness: ChainTypes.ChainAccount.isRequired\r\n    }\r\n\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    }\r\n\r\n    _onCardClick(e) {\r\n        e.preventDefault();\r\n        this.context.router.push(`/account/${this.props.witness.get(\"name\")}`);\r\n    }\r\n\r\n    render() {\r\n        let witness_data = ChainStore.getWitnessById( this.props.witness.get('id') )\r\n        if ( !witness_data ) return null;\r\n        let total_collateral = witness_data.get( \"total_collateral\" );\r\n        let collateral_profit = witness_data.get( \"collateral_profit\" );\r\n\r\n        let witness_aslot = witness_data.get('last_aslot')\r\n        let color = {};\r\n        if( this.props.most_recent - witness_aslot > 100 ) {\r\n           color = {borderLeft: \"1px solid #FCAB53\"};\r\n        }\r\n        else {\r\n           color = {borderLeft: \"1px solid #50D2C2\"};\r\n        }\r\n        let last_aslot_time = new Date(Date.now() - ((this.props.most_recent - witness_aslot ) * ChainStore.getObject( \"2.0.0\" ).getIn( [\"parameters\",\"block_interval\"] )*1000));\r\n\r\n        return (\r\n            <div className=\"grid-content account-card\" onClick={this._onCardClick.bind(this)}>\r\n                <div className=\"card\" style={color}>\r\n                    <h4 className=\"text-center\">#{this.props.rank}: {this.props.witness.get('name')}</h4>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"text-center\">\r\n                            <AccountImage account={this.props.witness.get('name')} size={{height: 64, width: 64}}/>\r\n                        </div>\r\n                        <br/>\r\n                        <table className=\"table key-value-table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><Translate content=\"explorer.witnesses.total_collateral\" /></td>\r\n                                    <td><FormattedAsset amount={total_collateral} asset=\"1.3.0\" decimalOffset={5} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><Translate content=\"explorer.witnesses.collateral_profit\" /></td>\r\n                                    <td><FormattedAsset amount={collateral_profit} asset=\"1.3.0\" decimalOffset={5} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><Translate content=\"explorer.blocks.last_block\" /></td>\r\n                                    <td><TimeAgo time={new Date(last_aslot_time)} /></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><Translate content=\"explorer.witnesses.missed\" /></td>\r\n                                    <td>{witness_data.get('total_missed')}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nWitnessCard = BindToChainState(WitnessCard, {keep_updating: true});\r\n\r\nclass WitnessRow extends React.Component {\r\n\r\n    static propTypes = {\r\n        witness: ChainTypes.ChainAccount.isRequired\r\n    }\r\n\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    }\r\n\r\n    _onRowClick(e) {\r\n        e.preventDefault();\r\n        this.context.router.push(`/account/${this.props.witness.get(\"name\")}`);\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     ChainStore.unSubFrom(\"witnesses\", ChainStore.getWitnessById( this.props.witness.get(\"id\") ).get(\"id\"));\r\n    // }\r\n\r\n    render() {\r\n        let {witness, isCurrent, rank} = this.props;\r\n        let witness_data = ChainStore.getWitnessById( this.props.witness.get('id') );\r\n        if ( !witness_data ) return null;\r\n        let total_collateral = witness_data.get( \"total_collateral\" );\r\n\r\n        let witness_aslot = witness_data.get('last_aslot')\r\n        let color = {};\r\n        if( this.props.most_recent - witness_aslot > 100 ) {\r\n           color = {borderLeft: \"1px solid #FCAB53\"};\r\n        }\r\n        else {\r\n           color = {borderLeft: \"1px solid #50D2C2\"};\r\n        }\r\n        let last_aslot_time = new Date(Date.now() - ((this.props.most_recent - witness_aslot ) * ChainStore.getObject( \"2.0.0\" ).getIn( [\"parameters\",\"block_interval\"] )*1000));\r\n\r\n        let currentClass = isCurrent ? \"active-witness\" : \"\";\r\n\r\n        let missed = witness_data.get('total_missed');\r\n        let missedClass = classNames(\"txtlabel\",\r\n            {\"success\": missed <= 500 },\r\n            {\"info\": missed > 500 && missed <= 1250},\r\n            {\"warning\": missed > 1250 && missed <= 2000},\r\n            {\"error\": missed >= 200}\r\n        );\r\n\r\n        return (\r\n            <tr className={currentClass} onClick={this._onRowClick.bind(this)} >\r\n                <td>{rank}</td>\r\n                <td style={color}>{witness.get(\"name\")}</td>\r\n                <td><TimeAgo time={new Date(last_aslot_time)} /></td>\r\n                <td>{witness_data.get('last_confirmed_block_num')}</td>\r\n                <td className={missedClass}>{missed}</td>\r\n                <td><FormattedAsset amount={witness_data.get('total_collateral')} asset=\"1.3.0\" decimalOffset={5} /></td>\r\n                <td><FormattedAsset amount={witness_data.get('collateral_profit')} asset=\"1.3.0\" decimalOffset={5} /></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nWitnessRow = BindToChainState(WitnessRow, {keep_updating: true});\r\n\r\nclass WitnessList extends React.Component {\r\n\r\n    static propTypes = {\r\n        witnesses: ChainTypes.ChainObjectsList.isRequired\r\n    }\r\n\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n          sortBy: 'rank',\r\n          inverseSort: true\r\n        };\r\n    }\r\n\r\n    _setSort(field) {\r\n        this.setState({\r\n          sortBy: field,\r\n          inverseSort: field === this.state.sortBy ? !this.state.inverseSort : this.state.inverseSort\r\n        });\r\n      }\r\n\r\n    render() {\r\n\r\n        let {witnesses, current, cardView, witnessList} = this.props;\r\n        let {sortBy, inverseSort} = this.state;\r\n        let most_recent_aslot = 0;\r\n        let ranks = {};\r\n\r\n        witnesses\r\n        .filter(a => {\r\n            if (!a) {\r\n                return false;\r\n            }\r\n            return witnessList.indexOf(a.get(\"id\")) !== -1;\r\n        })\r\n        .sort((a, b) => {\r\n            if (a && b) {\r\n                return parseInt(b.get(\"total_collateral\"), 10) - parseInt(a.get(\"total_collateral\"), 10);\r\n            }\r\n        })\r\n        .forEach( (w, index) => {\r\n            if (w) {\r\n                let s = w.get(\"last_aslot\");\r\n                if( most_recent_aslot < s ) {\r\n                    most_recent_aslot = s;\r\n                }\r\n\r\n                ranks[w.get(\"id\")] = index + 1;\r\n            }\r\n        });\r\n\r\n        let itemRows = null;\r\n        if (witnesses.length > 0 && witnesses[1]) {\r\n            itemRows = witnesses\r\n                .filter(a => {\r\n                    if (!a) { return false; }\r\n                    let account = ChainStore.getObject(a.get(\"witness_account\"));\r\n                    if (!account) return false;\r\n                    let name = account.get(\"name\");\r\n                    if (!name) return false;\r\n                    return name.indexOf(this.props.filter) !== -1;\r\n                })\r\n                .sort((a, b) => {\r\n                    let a_account = ChainStore.getObject(a.get(\"witness_account\"));\r\n                    let b_account = ChainStore.getObject(b.get(\"witness_account\"));\r\n\r\n                    if (!a_account || !b_account) {\r\n                        return 0;\r\n                    }\r\n                    // console.log(\"a:\", a.toJS());\r\n\r\n                    switch (sortBy) {\r\n                        case 'name':\r\n                            if (a_account.get(\"name\") > b_account.get(\"name\")) {\r\n                                return inverseSort ? 1 : -1;\r\n                            } else if (a_account.get(\"name\") < b_account.get(\"name\")) {\r\n                                return inverseSort ? -1 : 1;\r\n                            } else {\r\n                                return 0;\r\n                            }\r\n                            break;\r\n\r\n                        case \"rank\":\r\n                            return !inverseSort ? ranks[b.get(\"id\")] - ranks[a.get(\"id\")] : ranks[a.get(\"id\")] - ranks[b.get(\"id\")];\r\n                            break;\r\n\r\n                        default:\r\n                            return !inverseSort ? parseInt(b.get(sortBy), 10) - parseInt(a.get(sortBy), 10) : parseInt(a.get(sortBy), 10) - parseInt(b.get(sortBy), 10);\r\n                    }\r\n\r\n\r\n                })\r\n                .map((a) => {\r\n\r\n                    if (!cardView) {\r\n                        return (\r\n                            <WitnessRow key={a.get(\"id\")} rank={ranks[a.get(\"id\")]} isCurrent={current === a.get(\"id\")}  witness={a.get(\"witness_account\")} most_recent={this.props.current_aslot} />\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <WitnessCard key={a.get(\"id\")} rank={ranks[a.get(\"id\")]} witness={a.get(\"witness_account\")} most_recent={this.props.current_aslot} />\r\n                        );\r\n                    }\r\n\r\n\r\n                });\r\n        }\r\n\r\n        // table view\r\n        if (!cardView) {\r\n            return (\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'rank')}><Translate content=\"explorer.witnesses.rank\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'name')}><Translate content=\"account.votes.name\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'last_aslot')}><Translate content=\"explorer.blocks.last_block\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'last_confirmed_block_num')}><Translate content=\"explorer.witnesses.last_confirmed\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'total_missed')}><Translate content=\"explorer.witnesses.missed\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'total_collateral')}><Translate content=\"explorer.witnesses.total_collateral\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'collateral_profit')}><Translate content=\"explorer.witnesses.collateral_profit\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                <tbody>\r\n                    {itemRows}\r\n                </tbody>\r\n\r\n            </table>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"grid-block small-up-1 medium-up-2 large-up-3\">\r\n                    {itemRows}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nWitnessList = BindToChainState(WitnessList, {keep_updating: true, show_loader: true});\r\n\r\nclass Witnesses extends React.Component {\r\n\r\n\r\n    static propTypes = {\r\n        globalObject: ChainTypes.ChainObject.isRequired,\r\n        dynGlobalObject: ChainTypes.ChainObject.isRequired\r\n    }\r\n\r\n    static defaultProps = {\r\n        globalObject: \"2.0.0\",\r\n        dynGlobalObject: \"2.1.0\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filterWitness: props.filterWitness || \"\",\r\n            cardView: props.cardView,\r\n            viewType:0,\r\n            allWitnesses:[]\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        Apis.instance().db_api().exec(\"lookup_witness_accounts\", [\"\", 1000]).then(r => {\r\n            const arr =  r.map((item, i) => {\r\n                return  item[1]\r\n            })\r\n            this.setState({allWitnesses:arr})\r\n         //   console.log(this.state.allWitnesses)\r\n        });\r\n    }\r\n\r\n    _onFilter(e) {\r\n        e.preventDefault();\r\n        this.setState({filterWitness: e.target.value.toLowerCase()});\r\n\r\n        SettingsActions.changeViewSetting({\r\n            filterWitness: e.target.value.toLowerCase()\r\n        });\r\n    }\r\n\r\n    _toggleView() {\r\n        SettingsActions.changeViewSetting({\r\n            cardView: !this.state.cardView\r\n        });\r\n\r\n        this.setState({\r\n            cardView: !this.state.cardView\r\n        });\r\n    }\r\n\r\n    _activeView() {\r\n        this.setState({viewType:0});\r\n    }\r\n\r\n    _collateralView() {\r\n        this.setState({viewType:1});\r\n    }\r\n\r\n    _allView() {\r\n        this.setState({viewType:2});\r\n    }\r\n\r\n    render() {\r\n        let { dynGlobalObject, globalObject } = this.props;\r\n        dynGlobalObject = dynGlobalObject.toJS();\r\n        globalObject = globalObject.toJS();\r\n\r\n        let current = ChainStore.getObject(dynGlobalObject.current_witness),\r\n            currentAccount = null;\r\n        if (current) {\r\n            currentAccount = ChainStore.getObject(current.get(\"witness_account\"));\r\n        }\r\n\r\n        let witlst;\r\n        if(this.state.viewType == 0){\r\n            witlst=(\r\n            <WitnessList\r\n                current_aslot={dynGlobalObject.current_aslot}\r\n                current={current ? current.get(\"id\") : null}\r\n                witnesses={Immutable.List(globalObject.active_witnesses)}\r\n                witnessList={globalObject.active_witnesses}\r\n                filter={this.state.filterWitness}\r\n                cardView={this.state.cardView}\r\n            />\r\n            );\r\n        }else if(this.state.viewType == 1){\r\n            witlst=(\r\n                <WitnessList\r\n                    current_aslot={dynGlobalObject.current_aslot}\r\n                    current={current ? current.get(\"id\") : null}\r\n                    witnesses={Immutable.List(globalObject.active_collateral_witnesses)}\r\n                    witnessList={globalObject.active_collateral_witnesses}\r\n                    filter={this.state.filterWitness}\r\n                    cardView={this.state.cardView}\r\n                />\r\n            );\r\n        }else if(this.state.viewType == 2){\r\n            witlst=(\r\n                <WitnessList\r\n                    current_aslot={dynGlobalObject.current_aslot}\r\n                    current={current ? current.get(\"id\") : null}\r\n                    witnesses={Immutable.List(this.state.allWitnesses)}\r\n                    witnessList={this.state.allWitnesses}\r\n                    filter={this.state.filterWitness}\r\n                    cardView={this.state.cardView}\r\n                />\r\n            );\r\n        };\r\n\r\n        let content =\r\n            <div className=\"grid-block\">\r\n                <div className=\"grid-block\">\r\n                    <div className=\"grid-block vertical small-5 medium-3\">\r\n                        <div className=\"grid-content\">\r\n                            <br/>\r\n                            <table className=\"table key-value-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td><Translate content=\"explorer.witnesses.current\"/></td>\r\n                                        <td>{currentAccount ? currentAccount.get(\"name\") : null}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><Translate content=\"explorer.blocks.active_witnesses\"/></td>\r\n                                        <td>{Object.keys(globalObject.active_witnesses).length}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><Translate content=\"explorer.witnesses.participation\"/></td>\r\n                                        <td>{dynGlobalObject.participation}%</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><Translate content=\"explorer.witnesses.pay\"/></td>\r\n                                        <td><FormattedAsset amount={globalObject.parameters.witness_pay_per_block} asset=\"1.3.0\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><Translate content=\"explorer.witnesses.budget\"/></td>\r\n                                        <td> <FormattedAsset amount={dynGlobalObject.witness_budget} asset=\"1.3.0\" /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><Translate content=\"explorer.witnesses.next_vote\"/></td>\r\n                                        <td> <TimeAgo time={new Date(dynGlobalObject.next_maintenance_time + \"Z\")} /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                       <td> <Translate component=\"h4\" content=\"markets.filter\" /> </td>\r\n                                       <td> <input type=\"text\" value={this.state.filterWitness} onChange={this._onFilter.bind(this)} /> </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div>\r\n                                <td><span className=\"button outline\" onClick={this._activeView.bind(this)}>{<Translate content=\"explorer.witnesses.active\"/>}</span></td>\r\n                                <td><span className=\"button outline\" onClick={this._collateralView.bind(this)}>{<Translate content=\"explorer.witnesses.collateral\"/>}</span></td>\r\n                                <td><span className=\"button outline\" onClick={this._allView.bind(this)}>{<Translate content=\"explorer.witnesses.all\"/>}</span></td>\r\n                            </div>\r\n                            <div className=\"view-switcher\">\r\n                                <td><span className=\"button outline\" onClick={this._toggleView.bind(this)}>{!this.state.cardView ? <Translate content=\"explorer.witnesses.card\"/> : <Translate content=\"explorer.witnesses.table\"/>}</span></td>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid-block\">\r\n                            <div className=\"grid-content \">\r\n                                {witlst}\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ;\r\n        return (<Explorer tab=\"witnesses\" content={content}/>);\r\n    }\r\n}\r\nWitnesses = BindToChainState(Witnesses, {keep_updating: true});\r\n\r\nclass WitnessStoreWrapper extends React.Component {\r\n    render () {\r\n        return <Witnesses {...this.props}/>;\r\n    }\r\n}\r\n\r\nWitnessStoreWrapper = connect(WitnessStoreWrapper, {\r\n    listenTo() {\r\n        return [SettingsStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            cardView: SettingsStore.getState().viewSettings.get(\"cardView\"),\r\n            filterWitness: SettingsStore.getState().viewSettings.get(\"filterWitness\")\r\n        };\r\n    }\r\n});\r\n\r\nexport default WitnessStoreWrapper;\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Explorer/Witnesses.jsx","import React from \"react\";\r\nimport {Tabs, Tab} from \"../Utility/Tabs\";\r\n\r\nclass Explorer extends React.Component {\r\n\r\n    static propTypes = {\r\n        tab: React.PropTypes.string,\r\n        content: React.PropTypes.object\r\n    };\r\n\r\n    static defaultProps = {\r\n        tab: \"blocks\",\r\n        content: null\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \"tabs\": [\r\n                {name: \"blocks\", link: \"/explorer/blocks\", \"translate\": \"explorer.blocks.title\"},\r\n                {name: \"assets\", link: \"/explorer/assets\", \"translate\": \"explorer.assets.title\"},\r\n                {name: \"accounts\", link: \"/explorer/accounts\", \"translate\": \"explorer.accounts.title\"},\r\n                {name: \"witnesses\", link: \"/explorer/witnesses\", \"translate\": \"explorer.witnesses.title\"},\r\n                {name: \"committee_members\", link: \"/explorer/committee-members\", \"translate\": \"explorer.committee_members.title\"},\r\n                {name: \"markets\", link: \"/explorer/markets\", \"translate\": \"markets.title\"},\r\n                {name: \"fees\", link: \"/explorer/fees\", \"translate\": \"fees.title\"},\r\n                {name: \"oracles\", link: \"/explorer/oracles\", \"translate\": \"seer.oracle.title\"},\r\n                // {name: \"houses\", link: \"/explorer/houses\", \"translate\": \"seer.house.title\"}\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        let defaultActiveTab = this.state.tabs.findIndex(t => t.name === this.props.tab);\r\n\r\n        let tabs = [];\r\n\r\n        for (var i = 0; i < this.state.tabs.length; i++) {\r\n            let currentTab = this.state.tabs[i];\r\n\r\n            let tabContent = (defaultActiveTab==i)?this.props.content:null;\r\n            let isLinkTo=(defaultActiveTab==i)?\"\":currentTab.link;\r\n\r\n            tabs.push(<Tab key={i} title={currentTab.translate} isLinkTo={isLinkTo}>{tabContent}</Tab>);\r\n        }\r\n\r\n\r\n        return (\r\n            <Tabs defaultActiveTab={defaultActiveTab} segmented={false} setting=\"explorerTab-{this.props.tab}\" className=\"account-tabs\" tabsClass=\"account-overview bordered-header content-block\" contentClass=\"tab-content padding\">\r\n                {tabs}\r\n            </Tabs>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Explorer;\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Explorer/Explorer.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;;;;AAhCA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AACA;AACA;AAJA;AACA;AAwBA;;;AAoBA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AANA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAdA;AAFA;AAmBA;AAAA;AAAA;AACA;AADA;AApBA;AA0BA;;;;AAnIA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AACA;AALA;AARA;AAiBA;AADA;AACA;AACA;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;;;;;;;;AClMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAUA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAbA;AADA;AALA;AAFA;AADA;AAgCA;;;;AAhEA;AACA;AADA;AAGA;AADA;AAFA;AAOA;AADA;AACA;AA2DA;AACA;AACA;;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;;;;AAxDA;AACA;AADA;AAGA;AADA;AAFA;AAOA;AADA;AACA;AAmDA;AACA;AACA;;;AAMA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAoBA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AAWA;AAAA;AAAA;AACA;AADA;AAZA;AAkBA;AAEA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;;AAzIA;AACA;AADA;AAGA;AADA;AACA;AAwIA;AACA;AACA;;;AAaA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAzBA;AADA;AAgCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAvCA;AADA;AA6CA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AA9CA;AADA;AAuDA;AACA;;;;AAzKA;AACA;AADA;AAIA;AACA;AAFA;AAHA;AASA;AACA;AAFA;AACA;AAkKA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;AC7dA;AACA;AACA;AACA;;;AAYA;AAAA;AACA;AADA;AACA;AAEA;AACA;AADA;AAHA;AAgBA;AACA;;;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAIA;;;;AAnDA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AACA;AAFA;AACA;AACA;AA6CA;;;;A","sourceRoot":""}