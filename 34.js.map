{"version":3,"file":"34.js","sources":["webpack:///./app/components/Explorer/witnesses.scss?119b","webpack:///./app/components/Explorer/witnesses.scss","webpack:///app/components/Explorer/Houses.jsx"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/index.js??ref--6-3!../../../node_modules/sass-loader/lib/loader.js??ref--6-4!./witnesses.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/index.js??ref--6-3!../../../node_modules/sass-loader/lib/loader.js??ref--6-4!./witnesses.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/index.js??ref--6-3!../../../node_modules/sass-loader/lib/loader.js??ref--6-4!./witnesses.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/components/Explorer/witnesses.scss\n// module id = 1609\n// module chunks = 24 25 34","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".active-witness>td{background-color:rgba(80,210,194,.4);transition:background-color .6s ease}.clickable{cursor:pointer;user-select:none}.view-switcher{padding-top:1rem;text-align:right}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader??ref--6-3!./node_modules/sass-loader/lib/loader.js??ref--6-4!./app/components/Explorer/witnesses.scss\n// module id = 1610\n// module chunks = 24 25 34","import React from \"react\";\r\nimport Immutable from \"immutable\";\r\nimport AccountImage from \"../Account/AccountImage\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport {ChainStore} from \"seerjs/es\";\r\nimport FormattedAsset from \"../Utility/FormattedAsset\";\r\nimport Translate from \"react-translate-component\";\r\nimport TimeAgo from \"../Utility/TimeAgo\";\r\nimport { connect } from \"alt-react\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\nimport classNames from \"classnames\";\r\nimport {Apis} from \"seerjs-ws\";\r\nimport {Link} from \"react-router/es\";\r\nimport AccountStore from \"../../stores/AccountStore\";\r\n\r\nrequire(\"./witnesses.scss\");\r\n\r\nclass HouseCard extends React.Component {\r\n\r\n    static propTypes = {\r\n        account: ChainTypes.ChainAccount.isRequired,\r\n        house: React.PropTypes.object\r\n    }\r\n\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    }\r\n\r\n    _onCardClick(e) {\r\n        e.preventDefault();\r\n        this.context.router.push(`/houses/${this.props.house.id}`);\r\n    }\r\n\r\n    render() {\r\n        let house=this.props.house\r\n       // let script=house.script?house.script.indexOf(\"{\")!=-1?JSON.parse(house.script):{}:{}\r\n        //let iconUrl = house.script.indexOf(\"{\") != -1 ? JSON.parse(house.script).iconUrl : house.script;\r\n        return (\r\n            <div className=\"grid-content account-card\" onClick={this._onCardClick.bind(this)}>\r\n                <div className=\"card\">\r\n                    <h3 className=\"text-center\">{this.props.account.get(\"name\")}</h3>\r\n                    <div className=\"card-content\">\r\n                        <br/>\r\n                        <table className=\"table key-value-table table-column-fixed\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td width={80}><Translate content=\"seer.oracle.description\"/></td>\r\n                                    <td className=\"text-ellipsis\">{house.description}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><Translate content=\"seer.oracle.guaranty\"/></td>\r\n                                    <td><FormattedAsset amount={house.guaranty} asset={\"1.3.0\"}/></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><Translate content=\"seer.oracle.reputation\"/></td>\r\n                                    <td>{house.reputation}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><Translate content=\"seer.oracle.volume\"/></td>\r\n                                    <td>{house.volume}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><Translate content=\"seer.oracle.script\"/></td>\r\n                                    <td className=\"text-ellipsis\">{this.props.house.script.substring(0,32)}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nHouseCard = BindToChainState(HouseCard, {keep_updating: true});\r\n\r\nclass WitnessRow extends React.Component {\r\n\r\n    static propTypes = {\r\n        witness: ChainTypes.ChainAccount.isRequired\r\n    }\r\n\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    }\r\n\r\n    _onRowClick(e) {\r\n        e.preventDefault();\r\n        this.context.router.push(`/account/${this.props.witness.get(\"name\")}`);\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     ChainStore.unSubFrom(\"witnesses\", ChainStore.getWitnessById( this.props.witness.get(\"id\") ).get(\"id\"));\r\n    // }\r\n\r\n    render() {\r\n        let {witness, isCurrent, rank} = this.props;\r\n        let witness_data = ChainStore.getWitnessById( this.props.witness.get('id') );\r\n        if ( !witness_data ) return null;\r\n        let total_votes = witness_data.get( \"total_votes\" );\r\n\r\n        let witness_aslot = witness_data.get('last_aslot')\r\n        let color = {};\r\n        if( this.props.most_recent - witness_aslot > 100 ) {\r\n           color = {borderLeft: \"1px solid #FCAB53\"};\r\n        }\r\n        else {\r\n           color = {borderLeft: \"1px solid #50D2C2\"};\r\n        }\r\n        let last_aslot_time = new Date(Date.now() - ((this.props.most_recent - witness_aslot ) * ChainStore.getObject( \"2.0.0\" ).getIn( [\"parameters\",\"block_interval\"] )*1000));\r\n\r\n        let currentClass = isCurrent ? \"active-witness\" : \"\";\r\n\r\n        let missed = witness_data.get('total_missed');\r\n        let missedClass = classNames(\"txtlabel\",\r\n            {\"success\": missed <= 500 },\r\n            {\"info\": missed > 500 && missed <= 1250},\r\n            {\"warning\": missed > 1250 && missed <= 2000},\r\n            {\"error\": missed >= 200}\r\n        );\r\n\r\n        return (\r\n            <tr className={currentClass} onClick={this._onRowClick.bind(this)} >\r\n                <td>{rank}</td>\r\n                <td style={color}>{witness.get(\"name\")}</td>\r\n                <td><TimeAgo time={new Date(last_aslot_time)} /></td>\r\n                <td>{witness_data.get('last_confirmed_block_num')}</td>\r\n                <td className={missedClass}>{missed}</td>\r\n                <td><FormattedAsset amount={witness_data.get('total_votes')} asset=\"1.3.0\" decimalOffset={5} /></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nWitnessRow = BindToChainState(WitnessRow, {keep_updating: true});\r\n\r\nclass HouseList extends React.Component {\r\n\r\n    static propTypes = {\r\n        witnesses: ChainTypes.ChainObjectsList.isRequired\r\n    }\r\n\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n          sortBy: 'rank',\r\n          inverseSort: true,\r\n            houses: []\r\n        };\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        Apis.instance().db_api().exec(\"lookup_house_accounts\", [0, 1000]).then((results) => {\r\n            let ids = [];\r\n            results.forEach(r => {\r\n                ids.push(r[1]);\r\n            });\r\n\r\n            Apis.instance().db_api().exec(\"get_houses\", [ids]).then(houses => {\r\n                this.setState({houses: houses});\r\n            });\r\n        });\r\n    }\r\n\r\n    _setSort(field) {\r\n        this.setState({\r\n          sortBy: field,\r\n          inverseSort: field === this.state.sortBy ? !this.state.inverseSort : this.state.inverseSort\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let {witnesses, current, cardView, witnessList} = this.props;\r\n        let {sortBy, inverseSort, houses} = this.state;\r\n        let most_recent_aslot = 0;\r\n        let ranks = {};\r\n\r\n        let itemRows = null;\r\n        if (witnesses.length > 0 && witnesses[1]) {\r\n            itemRows = houses\r\n                .map((a) => {\r\n\r\n                    if (0) {\r\n                        return (\r\n                            <WitnessRow key={a.get(\"id\")} rank={ranks[a.get(\"id\")]} isCurrent={current === a.get(\"id\")}  witness={a.get(\"witness_account\")} most_recent={this.props.current_aslot} />\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <HouseCard key={a.id} house={a} account={a.owner}/>\r\n                        );\r\n                    }\r\n\r\n\r\n                });\r\n        }\r\n\r\n        // table view\r\n        if (!cardView) {\r\n            return (\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'rank')}><Translate content=\"explorer.witnesses.rank\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'name')}><Translate content=\"account.votes.name\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'last_aslot')}><Translate content=\"explorer.blocks.last_block\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'last_confirmed_block_num')}><Translate content=\"explorer.witnesses.last_confirmed\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'total_missed')}><Translate content=\"explorer.witnesses.missed\" /></th>\r\n                            <th className=\"clickable\" onClick={this._setSort.bind(this, 'total_votes')}><Translate content=\"account.votes.votes\" /></th>\r\n                        </tr>\r\n                    </thead>\r\n                <tbody>\r\n                    {itemRows}\r\n                </tbody>\r\n\r\n            </table>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"grid-block small-up-1 medium-up-2 large-up-3\">\r\n                    {itemRows}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nHouseList = BindToChainState(HouseList, {keep_updating: true, show_loader: true});\r\n\r\nclass Witnesses extends React.Component {\r\n\r\n\r\n    static propTypes = {\r\n        globalObject: ChainTypes.ChainObject.isRequired,\r\n        dynGlobalObject: ChainTypes.ChainObject.isRequired\r\n    }\r\n\r\n    static defaultProps = {\r\n        globalObject: \"2.0.0\",\r\n        dynGlobalObject: \"2.1.0\"\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filterWitness: props.filterWitness || \"\",\r\n            cardView: true //props.cardView\r\n        };\r\n    }\r\n\r\n    _onFilter(e) {\r\n        e.preventDefault();\r\n        this.setState({filterWitness: e.target.value.toLowerCase()});\r\n\r\n        SettingsActions.changeViewSetting({\r\n            filterWitness: e.target.value.toLowerCase()\r\n        });\r\n    }\r\n\r\n    _toggleView() {\r\n        SettingsActions.changeViewSetting({\r\n            cardView: !this.state.cardView\r\n        });\r\n\r\n        this.setState({\r\n            cardView: !this.state.cardView\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { dynGlobalObject, globalObject } = this.props;\r\n        dynGlobalObject = dynGlobalObject.toJS();\r\n        globalObject = globalObject.toJS();\r\n\r\n        let current = ChainStore.getObject(dynGlobalObject.current_witness),\r\n            currentAccount = null;\r\n        if (current) {\r\n            currentAccount = ChainStore.getObject(current.get(\"witness_account\"));\r\n        }\r\n        return (\r\n            <div className=\"grid-block\" style={{ padding: '24px' }}>\r\n                <div className=\"grid-block\">\r\n                    {/*<div className=\"grid-block vertical small-5 medium-3\">*/}\r\n                        {/*<div className=\"grid-content\">*/}\r\n                            {/*<Link to={`/account/${AccountStore.getState().currentAccount}/create-house/`}><button className=\"button\"><Translate content=\"transaction.trxTypes.asset_create\" /></button></Link>*/}\r\n\r\n                            {/*<br/>*/}\r\n\r\n                            {/*<div className=\"view-switcher\">*/}\r\n                                {/*<span className=\"button outline\" onClick={this._toggleView.bind(this)}>{!this.state.cardView ? <Translate content=\"explorer.witnesses.card\"/> : <Translate content=\"explorer.witnesses.table\"/>}</span>*/}\r\n                            {/*</div>*/}\r\n                        {/*</div>*/}\r\n                    {/*</div>*/}\r\n                    <div className=\"grid-block\">\r\n                            <div className=\"grid-content \">\r\n                                <HouseList\r\n                                    current_aslot={dynGlobalObject.current_aslot}\r\n                                    current={current ? current.get(\"id\") : null}\r\n                                    witnesses={Immutable.List(globalObject.active_witnesses)}\r\n                                    witnessList={globalObject.active_witnesses}\r\n                                    filter={this.state.filterWitness}\r\n                                    cardView={this.state.cardView}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nWitnesses = BindToChainState(Witnesses, {keep_updating: true});\r\n\r\nclass WitnessStoreWrapper extends React.Component {\r\n    render () {\r\n        return <Witnesses {...this.props}/>;\r\n    }\r\n}\r\n\r\nWitnessStoreWrapper = connect(WitnessStoreWrapper, {\r\n    listenTo() {\r\n        return [SettingsStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            cardView: SettingsStore.getState().viewSettings.get(\"cardView\"),\r\n            filterWitness: SettingsStore.getState().viewSettings.get(\"filterWitness\")\r\n        };\r\n    }\r\n});\r\n\r\nexport default WitnessStoreWrapper;\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Explorer/Houses.jsx"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAjBA;AADA;AAFA;AAFA;AADA;AAiCA;;;;AAtDA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAQA;AADA;AACA;AAgDA;AACA;AACA;;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AASA;;;;AAvDA;AACA;AADA;AAGA;AADA;AAFA;AAOA;AADA;AACA;AAkDA;AACA;AACA;;;AAMA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAHA;AAQA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AADA;AAXA;AAiBA;AAEA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;;AA1FA;AACA;AADA;AAGA;AADA;AACA;AAyFA;AACA;AACA;;;AAaA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAFA;AAHA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AADA;AAZA;AADA;AA4BA;;;;AAhFA;AACA;AADA;AAIA;AACA;AAFA;AAHA;AASA;AACA;AAFA;AACA;AAyEA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AACA;AAWA;;;;A","sourceRoot":""}