{"version":3,"file":"4.js","sources":["webpack:///app/lib/feature_detect/browser.js","webpack:///app/lib/feature_detect/incognito.js","webpack:///app/lib/feature_detect/index.js","webpack:///app/components/LoginSelector.jsx","webpack:///app/components/Dashboard/MarketCard.jsx","webpack:///app/components/Dashboard/Dashboard.jsx","webpack:///app/components/Dashboard/DashboardContainer.jsx"],"sourcesContent":["export default function(){\r\n    let ua = navigator.userAgent.toLowerCase();\r\n\r\n    if(ua.indexOf(\"firefox\") > -1){ //is firefox\r\n        return \"firefox\";\r\n    } else if(ua.search(\"safari\") >= 0 && ua.search(\"chrome\") < 0){ //is safari\r\n        return \"safari\";\r\n    } else if(window.chrome){ //is chrome\r\n        return \"chrome\";\r\n    } else if(ua.indexOf(\"msie\") > -1 || ua.match(/trident.*rv\\:11\\./)){ //is IE\r\n        return \"ie\";\r\n    } else if(ua.indexOf(\"opera\") > -1){\r\n        return \"opera\";\r\n    } else {\r\n        return ua;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/lib/feature_detect/browser.js","import browser from './browser'\r\n/*\r\n* Using feature detectino techniques described here:\r\n* https://stackoverflow.com/questions/2860879/detecting-if-a-browser-is-using-private-browsing-mode\r\n*/\r\nexport default function(cb){\r\n    return cb(false);\r\n    // let ua = navigator.userAgent.toLowerCase();\r\n    // let name = browser();\r\n    // if(name === \"firefox\"){\r\n    //     var db = indexedDB.open(\"test\");\r\n    //     db.onerror = function(){\r\n    //         cb(true);\r\n    //     };\r\n    //     db.onsuccess =function(){\r\n    //         cb(false);\r\n    //     };\r\n    // } else if(name === \"safari\"){\r\n    //     var storage = window.sessionStorage;\r\n    //     try {\r\n    //         storage.setItem(\"someKeyHere\", \"test\");\r\n    //         storage.removeItem(\"someKeyHere\");\r\n    //         cb(false);\r\n    //     } catch (e) {\r\n    //         if (e.code === DOMException.QUOTA_EXCEEDED_ERR && storage.length === 0) {\r\n    //             //Private here\r\n    //             cb(true);\r\n    //         } else {\r\n    //             cb(false);\r\n    //         }\r\n    //     }\r\n    // } else if(name === \"chrome\" || name === \"opera\"){\r\n    //     var fs = window.RequestFileSystem || window.webkitRequestFileSystem;\r\n    //     if (!fs) {\r\n    //         cb(false);\r\n    //         return;\r\n    //     }\r\n    //\r\n    //     fs(window.TEMPORARY, 100, function (fs) {\r\n    //         // Not incognito mode\r\n    //         cb(false);\r\n    //     }, function (err) {\r\n    //         // Incognito mode\r\n    //         cb(true);\r\n    //     });\r\n    // } else if(name === \"ie\"){\r\n    //     if(!window.indexedDB && (window.PointerEvent || window.MSPointerEvent)){\r\n    //         //Privacy Mode\r\n    //         cb(true);\r\n    //     } else {\r\n    //         cb(false);\r\n    //     }\r\n    // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// app/lib/feature_detect/incognito.js","import isIncognito from \"./incognito\";\r\nimport browser from \"./browser\";\r\n\r\nexport { isIncognito, browser }\r\n\n\n\n// WEBPACK FOOTER //\n// app/lib/feature_detect/index.js","import React from \"react\";\r\nimport { connect } from \"alt-react\";\r\nimport AccountStore from \"stores/AccountStore\";\r\nimport {Link} from \"react-router/es\";\r\nimport Translate from \"react-translate-component\";\r\nimport { isIncognito } from \"feature_detect\";\r\nvar logo = require(\"assets/logo-ico-blue.png\");\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport WalletUnlockActions from \"actions/WalletUnlockActions\";\r\nimport ActionSheet from \"react-foundation-apps/src/action-sheet\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\nimport IntlActions from \"actions/IntlActions\";\r\nimport AccountActions from \"../actions/AccountActions\";\r\n\r\nconst FlagImage = ({flag, width = 50, height = 50}) => {\r\n     return <img height={height} width={width} src={`${__BASE_URL__}language-dropdown/${flag.toUpperCase()}.png`} />;\r\n};\r\n\r\nclass LoginSelector extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        AccountActions.setRegisterStep(1);\r\n        this.state = {\r\n            locales: SettingsStore.getState().defaults.locale,\r\n            currentLocale: SettingsStore.getState().settings.get(\"locale\")\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const myAccounts = AccountStore.getMyAccounts();\r\n\r\n        // use ChildCount to make sure user is on /create-account page except /create-account/*\r\n        // to prevent redirect when user just registered and need to make backup of wallet or password\r\n        const childCount = React.Children.count(this.props.children);\r\n\r\n        // do redirect to portfolio if user already logged in\r\n        if(Array.isArray(myAccounts) && myAccounts.length !== 0 && childCount === 0)\r\n            this.props.router.push(\"/account/\"+this.props.currentAccount);\r\n    }\r\n\r\n    componentWillMount(){\r\n        isIncognito((incognito)=>{\r\n            this.setState({incognito});\r\n        });\r\n    }\r\n\r\n    onSelect(route) {\r\n        this.props.router.push(\"/create-account/\" + route);\r\n    }\r\n\r\n    render() {\r\n        const translator = require(\"counterpart\");\r\n        \r\n        const childCount = React.Children.count(this.props.children);\r\n        \r\n        const flagDropdown = <ActionSheet>\r\n            <ActionSheet.Button title=\"\" style={{width:\"64px\"}}>\r\n                <a style={{padding: \"1rem\", border: \"none\"}} className=\"button arrow-down\">\r\n                    <FlagImage flag={this.state.currentLocale} />\r\n                </a>\r\n            </ActionSheet.Button>\r\n            <ActionSheet.Content>\r\n                <ul className=\"no-first-element-top-border\">\r\n                    {this.state.locales.map(locale => {\r\n                        return (\r\n                            <li key={locale}>\r\n                                <a href onClick={(e) => {e.preventDefault(); IntlActions.switchLocale(locale); this.setState({currentLocale: locale});}}>\r\n                                    <div className=\"table-cell\"><FlagImage width=\"20\" height=\"20\" flag={locale} /></div>\r\n                                    <div className=\"table-cell\" style={{paddingLeft: 10}}><Translate content={\"languages.\" + locale} /></div>\r\n                                </a>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </ActionSheet.Content>\r\n        </ActionSheet>;\r\n\r\n        let formTitle = \"header.create_account\";\r\n        if(AccountStore.getState().registerStep === 3){\r\n          formTitle = \"header.backup_bin\";\r\n        }else if(AccountStore.getState().registerStep === 9){\r\n          formTitle = \"header.restore_bin\";\r\n        }\r\n\r\n        return (\r\n            <div className=\"grid-block align-center\" style={{background:\"#F2F2F2\"}}>\r\n                <div className=\"grid-block shrink vertical\">\r\n                    <div className=\"grid-content shrink text-center account-creation\">\r\n                        {childCount == 0 ? null :\r\n                            <div>\r\n                                <Translate content={formTitle} component=\"h4\"/>\r\n                            </div>\r\n                        }\r\n\r\n                        {childCount == 1 ? null :\r\n                            <div>\r\n                                <Translate content=\"account.intro_text_title\" component=\"h4\"/>\r\n                                <Translate unsafe content=\"account.intro_text_1\" component=\"p\" />\r\n                               \r\n                                <div className=\"shrink text-center\">\r\n                                    <div className=\"grp-menu-item overflow-visible account-drop-down\">\r\n                                        <div className=\"grp-menu-item overflow-visible\" style={{margin:\"0 auto\"}} data-intro={translator.translate(\"walkthrough.language_flag\")}>\r\n                                        {flagDropdown}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        \r\n                        {!!childCount ? null :\r\n                        <div className=\"grid-block account-login-options\">\r\n                            <Link to=\"/create-account/wallet\" className=\"button primary\" data-intro={translator.translate(\"walkthrough.create_cloud_wallet\")}>\r\n                                <Translate content=\"header.create_account\" />\r\n                            </Link>\r\n\r\n                            {/*<span className=\"button hollow primary\" onClick={() => {\r\n                                SettingsActions.changeSetting({setting: \"passwordLogin\", value: true});\r\n                                WalletUnlockActions.unlock.defer();\r\n                            }}>\r\n                                <Translate content=\"header.unlock_short\" />\r\n                            </span>\r\n                            */}\r\n                        </div>}\r\n\r\n                        {!!childCount ? null :\r\n                        <div className=\"additional-account-options\">\r\n                            <p>Optionally, <Link to=\"/wallet/backup/restore\" data-intro={translator.translate(\"walkthrough.restore_account\")}>restore your account</Link> or create an account using the <Link to=\"/create-account/wallet\" data-intro={translator.translate(\"walkthrough.create_local_wallet\")}>advanced form</Link>.</p>\r\n                        </div>}\r\n\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(LoginSelector, {\r\n    listenTo() {\r\n        return [AccountStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            currentAccount: AccountStore.getState().currentAccount || AccountStore.getState().passwordAccount,\r\n        };\r\n    }\r\n});\n\n\n// WEBPACK FOOTER //\n// app/components/LoginSelector.jsx","import React from \"react\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport AssetName from \"../Utility/AssetName\";\r\nimport cnames from \"classnames\";\r\nimport MarketsActions from \"actions/MarketsActions\";\r\nimport MarketsStore from \"stores/MarketsStore\";\r\nimport { connect } from \"alt-react\";\r\nimport utils from \"common/utils\";\r\nimport Translate from \"react-translate-component\";\r\n\r\nclass MarketCard extends React.Component {\r\n\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    }\r\n\r\n    static propTypes = {\r\n        quote: ChainTypes.ChainAsset.isRequired,\r\n        base: ChainTypes.ChainAsset.isRequired,\r\n        invert: React.PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        invert: true\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.statsInterval = null;\r\n\r\n        this.state = {\r\n            imgError: false\r\n        };\r\n    }\r\n\r\n    _checkStats(newStats = {close: {}}, oldStats = {close: {}}) {\r\n        return (\r\n            newStats.volumeBase !== oldStats.volumeBase ||\r\n            !utils.are_equal_shallow(newStats.close && newStats.close.base, oldStats.close && oldStats.close.base) ||\r\n            !utils.are_equal_shallow(newStats.close && newStats.close.quote, oldStats.close && oldStats.close.quote)\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(np, ns) {\r\n        return (\r\n            this._checkStats(np.marketStats, this.props.marketStats) ||\r\n            np.base.get(\"id\") !== this.props.base.get(\"id\") ||\r\n            np.quote.get(\"id\") !== this.props.quote.get(\"id\") ||\r\n            ns.imgError !== this.state.imgError\r\n        );\r\n    }\r\n\r\n    componentWillMount() {\r\n        MarketsActions.getMarketStats.defer(this.props.quote, this.props.base);\r\n        this.statsChecked = new Date();\r\n        this.statsInterval = setInterval(MarketsActions.getMarketStats.bind(this, this.props.quote, this.props.base), 35 * 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.statsInterval);\r\n    }\r\n\r\n    goToMarket(e) {\r\n        e.preventDefault();\r\n        this.context.router.push(`/market/${this.props.base.get(\"symbol\")}_${this.props.quote.get(\"symbol\")}`);\r\n    }\r\n\r\n    _onError(imgName) {\r\n        if (!this.state.imgError) {\r\n            this.refs[imgName.toLowerCase()].src = \"asset-symbols/bts.png\";\r\n            this.setState({\r\n                imgError: true\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let {hide, isLowVolume, base, quote, marketStats} = this.props;\r\n        if (isLowVolume || hide) return null;\r\n\r\n        function getImageName(asset) {\r\n            let symbol = asset.get(\"symbol\");\r\n            if (symbol === \"OPEN.BTC\" || symbol === \"GDEX.BTC\") return symbol;\r\n            let imgName = asset.get(\"symbol\").split(\".\");\r\n            return imgName.length === 2 ? imgName[1] : imgName[0];\r\n        }\r\n        let imgName = getImageName(base);\r\n\r\n        // let marketID = base.get(\"symbol\") + \"_\" + quote.get(\"symbol\");\r\n        // let stats = marketStats;\r\n        let changeClass = !marketStats ? \"\" : parseFloat(marketStats.change) > 0 ? \"change-up\" : parseFloat(marketStats.change) < 0 ? \"change-down\" : \"\";\r\n\r\n        return (\r\n            <div className={cnames(\"grid-block no-overflow fm-container\", this.props.className)} onClick={this.goToMarket.bind(this)}>\r\n                <div className=\"grid-block vertical shrink\">\r\n                    <div className=\"v-align\">\r\n                        <img className=\"align-center\" ref={imgName.toLowerCase()} onError={this._onError.bind(this, imgName)} style={{maxWidth: 70}} src={`${__BASE_URL__}asset-symbols/${imgName.toLowerCase()}.png`} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-block vertical no-overflow\">\r\n                    <div className=\"fm-name\"><AssetName dataPlace=\"top\" name={base.get(\"symbol\")} /> : <AssetName dataPlace=\"top\" name={quote.get(\"symbol\")} /></div>\r\n                    <div className=\"fm-volume\"><Translate content=\"exchange.price\" />: <div className=\"float-right\">{marketStats && marketStats.price ? utils.price_text(marketStats.price.toReal(), base, quote) : null}</div></div>\r\n                    <div className=\"fm-volume\"><Translate content=\"exchange.volume\" />: <div className=\"float-right\">{!marketStats ? null : utils.format_volume(marketStats.volumeBase, quote.get(\"precision\"))}</div></div>\r\n                    <div className=\"fm-change\"><Translate content=\"exchange.change\" />: <div className={cnames(\"float-right\", changeClass)}>{!marketStats ? null : marketStats.change}%</div></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMarketCard = BindToChainState(MarketCard);\r\n\r\nclass MarketCardWrapper extends React.Component {\r\n    render() {\r\n        return (\r\n            <MarketCard {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(MarketCardWrapper, {\r\n    listenTo() {\r\n        return [MarketsStore];\r\n    },\r\n    getProps(props) {\r\n        return {\r\n            marketStats: MarketsStore.getState().allMarketStats.get(props.marketId)\r\n        };\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Dashboard/MarketCard.jsx","import React from \"react\";\r\nimport Translate from \"react-translate-component\";\r\nimport MarketCard from \"./MarketCard\";\r\nimport utils from \"common/utils\";\r\nimport { Apis } from \"seerjs-ws\";\r\nimport LoadingIndicator from \"../LoadingIndicator\";\r\nimport LoginSelector from \"../LoginSelector\";\r\nimport SettingsActions from \"actions/SettingsActions\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\nimport { connect } from \"alt-react\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        let marketsByChain = {\r\n            \"4018d784\":[\r\n                [\"USD\", \"BTS\"],\r\n                [\"USD\", \"OPEN.BTC\"],\r\n                [\"USD\", \"OPEN.USDT\"],\r\n                [\"USD\", \"OPEN.ETH\"],\r\n                [\"USD\", \"OPEN.DASH\"],\r\n                [\"USD\", \"GOLD\"],\r\n                [\"USD\", \"HERO\"],\r\n                [\"USD\", \"GDEX.BTC\"],\r\n                [\"USD\", \"GDEX.ETH\"],\r\n                [\"USD\", \"GDEX.EOS\"],\r\n                [\"USD\", \"GDEX.BTO\"],\r\n                [\"CNY\", \"BTS\"],\r\n                [\"CNY\", \"OPEN.BTC\"],\r\n                [\"CNY\", \"USD\"],\r\n                [\"CNY\", \"OPEN.ETH\"],\r\n                [\"CNY\", \"YOYOW\"],\r\n                [\"CNY\", \"OCT\"],\r\n\t\t        [\"CNY\", \"GDEX.BTC\"],\r\n                [\"CNY\", \"GDEX.ETH\"],\r\n                [\"CNY\", \"GDEX.EOS\"],\r\n                [\"CNY\", \"GDEX.BTO\"],\r\n                [\"CNY\", \"GDEX.BTM\"],\r\n                [\"OPEN.BTC\", \"BTS\"],\r\n                [\"OPEN.BTC\", \"OPEN.ETH\"],\r\n                [\"OPEN.BTC\", \"OPEN.DASH\"],\r\n                [\"OPEN.BTC\", \"BLOCKPAY\"],\r\n                [\"OPEN.BTC\", \"OPEN.DGD\"],\r\n                [\"OPEN.BTC\", \"OPEN.STEEM\"],\r\n                [\"BTS\", \"OPEN.ETH\"],\r\n                [\"BTS\", \"OPEN.EOS\"],\r\n                [\"BTS\", \"PPY\"],\r\n                [\"BTS\", \"OPEN.STEEM\"],\r\n                [\"BTS\", \"OBITS\"],\r\n                [\"BTS\", \"RUBLE\"],\r\n                [\"BTS\", \"HERO\"],\r\n                [\"BTS\", \"OCT\"],\r\n                [\"BTS\", \"SILVER\"],\r\n                [\"BTS\", \"GOLD\"],\r\n                [\"BTS\", \"BLOCKPAY\"],\r\n                [\"BTS\", \"BTWTY\"],\r\n                [\"BTS\", \"SMOKE\"],\r\n\t\t        [\"BTS\", \"GDEX.BTC\"],\r\n                [\"BTS\", \"GDEX.ETH\"],\r\n                [\"BTS\", \"GDEX.EOS\"],\r\n                [\"BTS\", \"GDEX.BTO\"],\r\n                [\"KAPITAL\", \"OPEN.BTC\"],\r\n                [\"USD\", \"OPEN.STEEM\"],\r\n                [\"USD\", \"OPEN.MAID\"],\r\n                [\"OPEN.USDT\", \"OPEN.BTC\"],\r\n                [\"OPEN.BTC\", \"OPEN.MAID\"],\r\n                [\"BTS\", \"OPEN.MAID\"],\r\n                [\"BTS\", \"OPEN.HEAT\"],\r\n                [\"BTS\", \"OPEN.INCENT\"],\r\n                [\"HEMPSWEET\", \"OPEN.BTC\"],\r\n                [\"KAPITAL\", \"BTS\"]\r\n            ],\r\n            \"39f5e2ed\": [\r\n                [\"TEST\", \"PEG.FAKEUSD\"],\r\n                [\"TEST\", \"BTWTY\"]\r\n            ]\r\n        };\r\n        let chainID = Apis.instance().chain_id;\r\n        if (chainID) chainID = chainID.substr(0, 8);\r\n\r\n        this.state = {\r\n            width: null,\r\n            featuredMarkets: marketsByChain[chainID] || marketsByChain[\"4018d784\"],\r\n            newAssets: [\r\n\r\n            ]\r\n        };\r\n\r\n        this._setDimensions = this._setDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._setDimensions();\r\n\r\n        window.addEventListener(\"resize\", this._setDimensions, {capture: false, passive: true});\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (\r\n            !utils.are_equal_shallow(nextState.featuredMarkets, this.state.featuredMarkets) ||\r\n            !utils.are_equal_shallow(nextProps.lowVolumeMarkets, this.props.lowVolumeMarkets) ||\r\n            !utils.are_equal_shallow(nextState.newAssets, this.state.newAssets) ||\r\n            nextProps.linkedAccounts !== this.props.linkedAccounts ||\r\n            nextProps.passwordAccount !== this.props.passwordAccount ||\r\n            nextState.width !== this.state.width ||\r\n            nextProps.accountsReady !== this.props.accountsReady\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this._setDimensions);\r\n    }\r\n\r\n    _setDimensions() {\r\n        let width = window.innerWidth;\r\n\r\n        if (width !== this.state.width) {\r\n            this.setState({width});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { linkedAccounts, myIgnoredAccounts, accountsReady, passwordAccount } = this.props;\r\n        let { featuredMarkets, newAssets} = this.state;\r\n\r\n        if (passwordAccount && !linkedAccounts.has(passwordAccount)) {\r\n            linkedAccounts = linkedAccounts.add(passwordAccount);\r\n        }\r\n        let names = linkedAccounts.toArray().sort();\r\n        if (passwordAccount && names.indexOf(passwordAccount) === -1) names.push(passwordAccount);\r\n\r\n        let accountCount = linkedAccounts.size + myIgnoredAccounts.size + (passwordAccount ? 1 : 0);\r\n\r\n        if (!accountsReady) {\r\n            return <LoadingIndicator />;\r\n        }\r\n\r\n        let validMarkets = 0;\r\n\r\n        let markets = featuredMarkets\r\n        .map(pair => {\r\n            let isLowVolume = this.props.lowVolumeMarkets.get(pair[1] + \"_\" + pair[0]) || this.props.lowVolumeMarkets.get(pair[0] + \"_\" + pair[1]);\r\n            if (!isLowVolume) validMarkets++;\r\n            let className = \"\";\r\n            if (validMarkets > 24) {\r\n                return null;\r\n            } else if (validMarkets > 15) {\r\n                className += \" show-for-large\";\r\n            } else if (validMarkets > 6) {\r\n                className += \" show-for-medium\";\r\n            }\r\n\r\n            return (\r\n                <MarketCard\r\n                    key={pair[0] + \"_\" + pair[1]}\r\n                    marketId={pair[1] + \"_\" + pair[0]}\r\n                    new={newAssets.indexOf(pair[1]) !== -1}\r\n                    className={className}\r\n                    quote={pair[0]}\r\n                    base={pair[1]}\r\n                    invert={pair[2]}\r\n                    isLowVolume={isLowVolume}\r\n                />\r\n            );\r\n        }).filter(a => !!a);\r\n\r\n        if (!accountCount) {\r\n            return <LoginSelector />;\r\n        }\r\n\r\n        return (\r\n            <div ref=\"wrapper\" className=\"grid-block tab-layout vertical\">\r\n                <div ref=\"container\" className=\"grid-container\" style={{padding: \"2rem 8px\"}}>\r\n                    {this.props.onlyAccounts ? null : <div className=\"block-content-header\" style={{marginBottom: 15, paddingTop: 0}}>\r\n                        <Translate content=\"exchange.featured\"/>\r\n                    </div>}\r\n                    {this.props.onlyAccounts ? null : <div className=\"grid-block small-up-1 medium-up-3 large-up-4 no-overflow fm-outer-container\">\r\n                        {markets}\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet DashboardWrapper = (props) => {\r\n    return <Dashboard {...props} />;\r\n};\r\n\r\nexport default DashboardWrapper = connect(DashboardWrapper, {\r\n    listenTo() {\r\n        return [SettingsStore];\r\n    },\r\n    getProps() {\r\n        return {\r\n            viewSettings: SettingsStore.getState().viewSettings\r\n        };\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Dashboard/Dashboard.jsx","import React from \"react\";\r\nimport AccountStore from \"stores/AccountStore\";\r\nimport SettingsStore from \"stores/SettingsStore\";\r\nimport MarketsStore from \"stores/MarketsStore\";\r\n\r\nimport AltContainer from \"alt-container\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nclass DashboardContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <AltContainer\r\n                stores={[AccountStore, SettingsStore, MarketsStore]}\r\n                inject={{\r\n                    linkedAccounts: () => {\r\n                        return AccountStore.getState().linkedAccounts;\r\n                    },\r\n                    myIgnoredAccounts: () => {\r\n                        return AccountStore.getState().myIgnoredAccounts;\r\n                    },\r\n                    accountsReady: () => {\r\n                        return AccountStore.getState().accountsLoaded && AccountStore.getState().refsLoaded;\r\n                    },\r\n                    passwordAccount: () => {\r\n                        return AccountStore.getState().passwordAccount;\r\n                    },\r\n                    lowVolumeMarkets: () => {\r\n                        return MarketsStore.getState().lowVolumeMarkets;\r\n                    },\r\n                    currentEntry: SettingsStore.getState().viewSettings.get(\"dashboardEntry\", \"accounts\")\r\n                }}>\r\n                <Dashboard {...this.props} />\r\n            </AltContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardContainer;\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Dashboard/DashboardContainer.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAJA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AAVA;AADA;AANA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAJA;AAcA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAcA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AA1CA;AADA;AADA;AAiDA;;;;AAtHA;AACA;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAgBA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AADA;AALA;AAQA;AACA;;;AACA;AAAA;AAAA;AACA;AAAA;AAKA;;;AAEA;AACA;AAMA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AANA;AAcA;;;;AAnGA;AACA;AADA;AAGA;AADA;AAFA;AAOA;AACA;AACA;AAHA;AANA;AAaA;AADA;AACA;AACA;AAwFA;AACA;AACA;;;;;;;;;;;AACA;AACA;AAGA;;;;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;;;;;;;;;;;;;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAyDA;AA1DA;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAOA;AA5EA;AA6EA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AASA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AADA;AAWA;;;;AA5KA;AACA;AA8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;;;;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AApBA;AAuBA;;;;AA1BA;AACA;AA4BA;;;;A","sourceRoot":""}