{"version":3,"file":"16.js","sources":["webpack:///app/utils/Validation.js","webpack:///app/utils/GlobalParams.js","webpack:///app/api/FetchApi.js","webpack:///app/actions/gateway/ERC20GatewayActions.js","webpack:///app/utils/Utils.js","webpack:///app/stores/gateway/ERC20GatewayStore.js","webpack:///./node_modules/keccak/js.js","webpack:///./node_modules/keccak/lib/api/index.js","webpack:///./node_modules/keccak/lib/api/keccak.js","webpack:///./node_modules/keccak/lib/api/shake.js","webpack:///./node_modules/keccak/lib/keccak.js","webpack:///./node_modules/keccak/lib/keccak-state-unroll.js","webpack:///./app/assets/bts_gateway_example.png","webpack:///app/components/Balances/ERC20Gateway.jsx"],"sourcesContent":["\r\nimport createKeccakHash from \"keccak\";\r\nexport default {\r\n\r\n    base(obj, vType){\r\n        return Object.prototype.toString.call(obj) === `[object ${vType}]`;\r\n    },\r\n\r\n    isArray(obj){ return this.base(obj, 'Array'); },\r\n\r\n    isFunction(obj){ return this.base(obj, 'Function'); },\r\n\r\n    isString(obj){ return this.base(obj, 'String'); },\r\n\r\n    isObject(obj){ return this.base(obj, 'Object'); },\r\n\r\n    isNumber(obj){\r\n        let n = Number(obj);\r\n        return this.base(n, 'Number') && !isNaN(n);\r\n    },\r\n\r\n    isEmptyObject(obj){\r\n        for (var t in obj)\r\n            return false;\r\n        return true;\r\n    },\r\n\r\n    isEmpty(obj){\r\n        let flag = obj == undefined || obj == null || obj == 'null' || obj == '' || obj.length == 0;\r\n        if(this.isObject(obj)){\r\n            flag = this.isEmptyObject(obj);\r\n        }\r\n        return flag;\r\n    },\r\n\r\n    whatType(obj){\r\n        let t = Object.prototype.toString.call(obj);\r\n        return t.substring(t.indexOf(' ')+1, t.length-1);\r\n    },\r\n\r\n    validateEtherAddress(address){\r\n        if(address){\r\n            if(address == \"0x0000000000000000000000000000000000000000\") return false;\r\n            else{\r\n                if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\r\n                    // check if it has the basic requirements of an address\r\n                    return false;\r\n                } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\r\n                    // If it's all small caps or all all caps, return true\r\n                    return true;\r\n                } else {\r\n                    return address == this.checksumAddress(address);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    checksumAddress(address){\r\n        address = address.toLowerCase().replace('0x','');\r\n        var hash = createKeccakHash('keccak256').update(address).digest('hex')\r\n        var ret = '0x'\r\n      \r\n        for (var i = 0; i < address.length; i++) {\r\n          if (parseInt(hash[i], 16) >= 8) {\r\n            ret += address[i].toUpperCase()\r\n          } else {\r\n            ret += address[i]\r\n          }\r\n        }\r\n        return ret\r\n    }\r\n};\n\n\n// WEBPACK FOOTER //\n// app/utils/Validation.js","/**\r\n * Created by BenJ on 2017/8/15.\r\n * \r\n * 2018/3/4 修改 网关参数获取方式改为本地\r\n * \r\n */\r\nimport Utils from '../utils/Utils';\r\n\r\n// 参数定义时注意不要与链上或水龙投参数键重复，除非想要被替换的，如目前的网关参数和最小抵押参数\r\nglobal.walletConfig = {\r\n    // 本地参数\r\n    balance_task_timeout: 30000, // 资产定时任务刷新间隔\r\n    history_page_size: 20, // 近期活动每页显示数\r\n    csaf_param: 100, // 币天及积分积累 最终现实转换参数\r\n    retain_count: 100000, // 核心资产精度参数\r\n    // 网关参数 从水龙头获取\r\n    bts_fees: 1, // bts网关转出手续费\r\n    bts_master: 43752382, // bts网关账号\r\n    erc20_fees: 10, // erc20网关转出手续费\r\n    erc20_master: 43752382, // erc20网关账号\r\n    // 链上参数 从链上获取 \r\n    coin_unit: '', // 货币单位\r\n    min_witness_pledge: 0, // 见证人最小抵押\r\n    min_committee_member_pledge: 0 // 理事会成员最小抵押\r\n};\r\n\r\nclass GlobalParams {\r\n\r\n    constructor() {\r\n        /**\r\n         * 需要进行核心资产精度转换的参数 \r\n         * 若不在此处转换则使用的时候自行转换亦可\r\n         */\r\n        this.need_transfer = [\r\n            'min_witness_pledge',\r\n            'min_committee_member_pledge'\r\n        ]\r\n    }\r\n\r\n    init() {\r\n        // let fetchFaucet = new Promise((resolve, reject) => {\r\n        //     FetchApi.get('sys/sysConf/walletConfigs').then(res => {\r\n        //         if (res.code == 0) {\r\n        //             resolve(res.data);\r\n        //         } else if (__DEBUG__) {\r\n        //             console.error('get wallet config error...');\r\n        //             console.log(res.msg);\r\n        //             resolve();\r\n        //         }\r\n        //     }).catch(() => {\r\n        //         resolve();\r\n        //     });\r\n        // });\r\n\r\n        let fetchChain = new Promise((resolve, reject) => {\r\n            ChainApi.getParameters().then(({ params, dynamicParams }) => {\r\n                resolve(params);\r\n            }).catch(err => {\r\n                if(__DEBUG__){\r\n                    console.error('get chain config error...');\r\n                    console.log(err.message); \r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([fetchChain]).then(res => {\r\n                for(let paramsObj of res)\r\n                    if(paramsObj)\r\n                        for(let key in paramsObj){\r\n                            let val = paramsObj[key];\r\n                            if(Utils.containerInArr(key, this.need_transfer)){\r\n                                val = Utils.realCount(val);\r\n                            }\r\n                                \r\n                            this.setConf(key, val);\r\n                        }\r\n                       \r\n                resolve(global.walletConfig);\r\n            });\r\n        });\r\n    }\r\n\r\n    setConf(key, val) {\r\n        global.walletConfig[key] = val;\r\n    }\r\n}\r\n\r\nexport default new GlobalParams();\n\n\n// WEBPACK FOOTER //\n// app/utils/GlobalParams.js","/**\r\n * Created by BenJ on 2017/8/1.\r\n */\r\nimport SettingsStore from \"../stores/SettingsStore\";\r\nimport validation from \"../utils/Validation\";\r\n\r\n\r\nlet serializeObj = (obj) => {\r\nlet arr = [];\r\nfor(let o in obj){\r\n    arr.push(`${o}=${obj[o]}`);\r\n}\r\nreturn arr.join('&');\r\n};\r\n\r\nlet baseFetch = (url, type = 'get', data) => {\r\n    let faucetAddress = SettingsStore.getSetting(\"faucet_address\");\r\n    if (window && window.location && window.location.protocol === \"https:\") {\r\n        faucetAddress = faucetAddress.replace(/http:\\/\\//, \"https://\");\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n            let requestObj = {\r\n                method: type,\r\n                mode: 'cors',\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n            };\r\n    if(!validation.isEmpty(data)){\r\n        requestObj.body = JSON.stringify( data);\r\n    }\r\n    fetch(`${faucetAddress}/${url}`, requestObj).then(response => {\r\n        return response.json()\r\n    }).then(res => {\r\n        if(res.code == 0){\r\n        resolve(res);\r\n    }else{\r\n        reject(res.msg);\r\n    }\r\n}).catch(err => {\r\n        reject(err.message);\r\n});\r\n});\r\n\r\n};\r\n\r\nexport default {\r\n    get(url, data){\r\n        let params = serializeObj(data);\r\n        return baseFetch(`${url}?${params}`);\r\n    },\r\n\r\n    post(url, data){\r\n        return baseFetch(url, 'post', data);\r\n    },\r\n};\n\n\n// WEBPACK FOOTER //\n// app/api/FetchApi.js","/**\r\n * Created by xiangxn on 2017/9/13.\r\n */\r\n\r\nimport alt from \"../../alt-instance\";\r\nimport FetchApi from \"../../api/FetchApi\";\r\n//import ChainApi from \"../../api/ChainApi\";\r\nimport SettingsStore from \"../../stores/SettingsStore\";\r\nimport GlobalParams from \"../../utils/GlobalParams\";\r\n\r\nclass ERC20GatewayActions {\r\n\r\n    getAddrByAccount(js) {\r\n        return (dispatch) => {\r\n            return new Promise((resolve, reject) => {\r\n                return FetchApi.get('api/v1/seer_eth/query', js).then(res => {\r\n                        //console.log(res.data)\r\n                    dispatch({\"ethaddr\":res.data.eth_address});\r\n                    resolve(res.data.eth_address)\r\n                }).catch(err => {\r\n                    dispatch(null);\r\n\r\n                    console.log(err);\r\n\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    bindAccount(js) {\r\n\r\n        return (dispatch) => {\r\n            return new Promise((resolve, reject) => {\r\n                return FetchApi.post('api/v1/seer_eth/bind', js).then(res => {\r\n                        //console.log(\"ethaddr:\",res)\r\n                    dispatch({\"ethaddr\":res.data.eth_address});\r\n                    resolve(res.data.eth_address)\r\n                }).catch(err => {\r\n                    dispatch(null);\r\n\r\n                    console.log(err);\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n    }\r\n    \r\n    loading(flag){\r\n        return flag;\r\n    }\r\n}\r\n\r\nexport default alt.createActions(ERC20GatewayActions);\n\n\n// WEBPACK FOOTER //\n// app/actions/gateway/ERC20GatewayActions.js","/**\r\n * Created by xiangxn on 2017/7/10.\r\n */\r\nimport {Long} from 'bytebuffer';\r\nimport {encode, decode} from 'bs58';\r\nimport ByteBuffer from 'bytebuffer';\r\nimport globalParams from './GlobalParams';\r\nimport Validation from './Validation';\r\n\r\nclass Utils {\r\n\r\n    /**\r\n     * 计算可领取的币龄\r\n     * @param statistics 账户的统计对象\r\n     * @param window 币龄过期时间\r\n     * @param now 头块时间\r\n     * @returns {{new_coin_seconds_earned: number, new_average_coins: number}} 返回可领取的币龄和新的平均余额\r\n     * remark\r\n     * 时间之间的计算以秒为单位\r\n     * 时间与其他的计算以分钟点的秒(向下取整的分钟秒数)为单位\r\n     */\r\n    static calcCoinSecondsEarned(statistics, window, now) {\r\n        let new_average_coins = 0;\r\n        let max_coin_seconds = 0;\r\n        let effective_balance = Long.fromValue(statistics.core_balance).add(Long.fromValue(statistics.core_leased_in)).sub(Long.fromValue(statistics.core_leased_out));\r\n        let nowTime = Long.fromNumber(new Date(now).getTime() / 1000); //头块时间 单位 秒\r\n        nowTime -= nowTime % 60; // 转换成整分钟秒\r\n        let averageUpdateTime = Long.fromNumber(new Date(statistics.average_coins_last_update).getTime() / 1000); //平均余额上次更新时间 单位 秒\r\n        let earnedUpdateTime = Long.fromNumber(new Date(statistics.coin_seconds_earned_last_update).getTime() / 1000); //币龄采集上次更新时间 单位 秒\r\n        if (nowTime <= averageUpdateTime) {\r\n            new_average_coins = Long.fromValue(statistics.average_coins);\r\n        } else {\r\n            let delta_seconds = (nowTime - averageUpdateTime);\r\n            if (delta_seconds >= window) {\r\n                new_average_coins = effective_balance;\r\n            } else {\r\n                let old_seconds = window - delta_seconds;\r\n                let old_coin_seconds = Long.fromValue(statistics.average_coins) * old_seconds;\r\n                let new_coin_seconds = effective_balance * delta_seconds;\r\n                max_coin_seconds = old_coin_seconds + new_coin_seconds;\r\n                new_average_coins = Math.floor(max_coin_seconds / window);\r\n            }\r\n        }\r\n        max_coin_seconds = new_average_coins * window;\r\n        //检查可领取的币龄\r\n        let new_coin_seconds_earned = 0;\r\n        if (nowTime <= earnedUpdateTime) {\r\n            new_coin_seconds_earned = Long.fromValue(statistics.coin_seconds_earned);\r\n        } else {\r\n            let delta_seconds = (nowTime - earnedUpdateTime);\r\n            let delta_coin_seconds = effective_balance * delta_seconds;\r\n            new_coin_seconds_earned = Long.fromValue(statistics.coin_seconds_earned).add(delta_coin_seconds);\r\n        }\r\n        if (new_coin_seconds_earned > max_coin_seconds) {\r\n            new_coin_seconds_earned = max_coin_seconds;\r\n        }\r\n\r\n        return {new_coin_seconds_earned, new_average_coins};\r\n    }\r\n\r\n    static uint64ToBase58(val) {\r\n        return encode(Long.fromValue(val).toBytesLE());\r\n    }\r\n\r\n    static base58ToUInt64(val58) {\r\n        let uidBuf = ByteBuffer.fromBinary(Buffer.from(decode(val58)).toString(\"binary\"), ByteBuffer.LITTLE_ENDIAN);\r\n        let m = uidBuf.readUInt64();\r\n        return m;\r\n    }\r\n\r\n    static encodeBackOwner(uid, owner) {\r\n        if (typeof owner != \"string\") return null;\r\n        if (owner.length != 51) return null;\r\n        return owner + \"\" + Utils.uint64ToBase58(uid);\r\n    }\r\n\r\n    static decodeBackOwner(backOwner) {\r\n        if (typeof backOwner != \"string\") return null;\r\n        if (backOwner.length < 52) return null;\r\n        let owner = backOwner.substr(0, 51);\r\n        let uid = 0;\r\n        try {\r\n            uid = Utils.base58ToUInt64(backOwner.substr(51));\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n        return {uid, owner};\r\n    }\r\n\r\n    /**\r\n     * 核心资产类精度转换\r\n     * @param {*} count \r\n     */\r\n    static realCount(count) {\r\n        let rc = global.walletConfig.retain_count;\r\n        let real = Math.round(count / rc * rc) / rc;\r\n        return this.formatAmount(real);\r\n    }\r\n\r\n    /**\r\n     * 精确小数点后5位的有效数据\r\n     * 5位是根据实际yoyo全局比例参数来\r\n     * @param val 格式化原始值\r\n     * @param retainLen 保留小数长度(含小数点)\r\n     */\r\n    static formatAmount(val, retainLen) {\r\n        let valLen = val.toString().length;\r\n        let pointLen = val.toString().indexOf('.');\r\n        if (!retainLen) retainLen = global.walletConfig.retain_count.toString().length;\r\n        if (pointLen >= 0 && valLen > pointLen + retainLen) {\r\n            val = parseFloat(val.toString().substring(0, (pointLen + retainLen)));\r\n        }\r\n        return val;\r\n    }\r\n\r\n    /**\r\n     * 格式化日期\r\n     * @param dateStr 日期字符串 或 timestamp\r\n     * @param GMT 时区差值\r\n     * @returns {string}\r\n     */\r\n    static formatDate(dateStr, GMT) {\r\n        let date = new Date(dateStr);\r\n        if (Validation.isNumber(GMT) && GMT != 0) {\r\n            date = new Date(date.getTime() + GMT * 60 * 60 * 1000);\r\n        }\r\n        return date.getFullYear() + '-' +\r\n            this.autoFixed((date.getMonth() + 1)) + '-' +\r\n            this.autoFixed(date.getDate()) + ' ' +\r\n            this.autoFixed(date.getHours()) + ':' +\r\n            this.autoFixed(date.getMinutes()) + ':' +\r\n            this.autoFixed(date.getSeconds())\r\n    }\r\n\r\n    /**\r\n     * 转换与api通讯时间值\r\n     * @param dObj 日期字符串 或 timestamp\r\n     * @returns {timestamp, dateStr} 转化后的时间戳 和 格式化日期\r\n     */\r\n    static transferApiDate(dObj){\r\n        let now = new Date();\r\n        let date = new Date(dObj);\r\n        let timeOffset = - (now.getTimezoneOffset() * 60 * 1000);\r\n        let timestamp = date.getTime() + timeOffset;\r\n        let ua = navigator.userAgent.toLowerCase();\r\n        // 某些浏览器修整了时区差值，比如猎豹\r\n        if(ua.indexOf('lbbrowser') >= 0){\r\n            timestamp -= timeOffset;\r\n        }\r\n        let dateStr = this.formatDate(timestamp);\r\n        return {timestamp, dateStr};\r\n    }\r\n\r\n    static transferApiDateString(dateStr){\r\n        try {\r\n            let time = dateStr;\r\n            let timeArr = [];\r\n            let temp = time.split('T');\r\n            \r\n            timeArr = timeArr.concat(temp[0].split('-'));\r\n            timeArr = timeArr.concat(temp[1].split(':'));\r\n\r\n            let tempY = parseInt(timeArr[0]);\r\n            let tempM = parseInt(timeArr[1]);\r\n            let rangeMonth = 0;\r\n            let maxDate = [1, 3, 5, 7, 8, 10, 12];\r\n            let minDate = [4, 6, 9, 11];\r\n            if(this.containerInArr(tempM, maxDate))\r\n                rangeMonth = 31;\r\n            else if(this.containerInArr(tempM, maxDate))\r\n                rangeMonth = 30;\r\n            else{\r\n                if((tempY % 4 == 0 && tempY % 100 != 0) || tempY % 400 == 0){\r\n                    rangeMonth = 29;\r\n                }else{\r\n                    rangeMonth = 28;\r\n                }\r\n            }\r\n            let rangeArr = [12, rangeMonth, 24, 60, 60];\r\n            let finalSec = new Date(`${tempY}-${this.autoFixed(tempM)}`).getTime() / 1000;\r\n            \r\n            // 年与月不参与计算 但参与索引递增\r\n            timeArr[0] = 0;\r\n            timeArr[1] = 0;\r\n            // 抹去初始第一天\r\n            timeArr[2] -= 1;\r\n            \r\n            for(let i = 0; i < 5; i++){\r\n                let sec = parseInt(timeArr[i]);\r\n                for(let j = i; j < 5; j++){\r\n                    sec *= rangeArr[j];\r\n                }\r\n                finalSec += sec;\r\n            }\r\n            \r\n            return finalSec;\r\n        } catch (error) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 自动补全数字\r\n     * @param num\r\n     * @param len\r\n     * @returns {string}\r\n     */\r\n    static autoFixed(num, len = 2, symbol = 0) {\r\n        let arr = [];\r\n        let o = num.toString().split('');\r\n        for (let i = 0; i < len - o.length; i++) {\r\n            arr.push(symbol);\r\n        }\r\n        return arr.concat(o).join('');\r\n    }\r\n\r\n    static containerInArr(target, arr) {\r\n        let flag = false;\r\n        if(Validation.isArray(arr)){\r\n            for(let t of arr){\r\n                if(target == t){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    static hexToBase64(hex){\r\n        return new Buffer(hex, 'hex').toString('base64');\r\n    }\r\n}\r\n\r\nexport default Utils;\n\n\n// WEBPACK FOOTER //\n// app/utils/Utils.js","/**\r\n * Created by xiangxn on 2017/9/13.\r\n */\r\n\r\nimport alt from \"alt-instance\";\r\nimport BaseStore from \"../BaseStore\";\r\nimport ERC20GatewayActions from \"../../actions/gateway/ERC20GatewayActions\";\r\n\r\nclass ERC20GatewayStore extends BaseStore {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            ethaddr: null, \r\n            error: null, \r\n            balance: {}, \r\n            loading: false,\r\n            fees: {\r\n                min_fees: 0,\r\n                min_real_fees: 0,\r\n                use_csaf: 0,\r\n                with_csaf_fees: 0\r\n            }\r\n        };\r\n        this.bindActions(ERC20GatewayActions);\r\n    }\r\n\r\n    onGetAddrByUid(ethaddr) {\r\n        if (ethaddr && ethaddr.code == 0) {\r\n            this.setState({ethaddr: ethaddr.data});\r\n        } else {\r\n            this.setState({ethaddr: null, error: ethaddr});\r\n        }\r\n    }\r\n\r\n    onBindAccount(ethaddr) {\r\n        if (ethaddr && ethaddr.code == 0) {\r\n            this.setState({ethaddr: ethaddr.data});\r\n        } else {\r\n            this.setState({error: ethaddr});\r\n        }\r\n    }\r\n    \r\n    onGetBalanceByUid(balance){\r\n        if(balance){\r\n            this.setState({balance: balance})\r\n        }\r\n    }\r\n\r\n    onConfirmTransfer({err, resolve, reject}){\r\n        if(err){\r\n            let code = 0;\r\n            if(err.message){\r\n                if(err.message.indexOf('Insufficient Balance') >= 0){\r\n                    code = 2;\r\n                }else if(err.message.indexOf(\"'toUncompressed' of null\") >= 0){\r\n                    code = 3;\r\n                }\r\n            }else{\r\n                code = err;\r\n            }\r\n            reject(code);\r\n        }else{\r\n            resolve();\r\n        }\r\n        this.setState({loading: false});\r\n    }\r\n    onConfirmTransferBts({err, resolve, reject}){\r\n        if(err){\r\n            let code = 0;\r\n            if(err.message){\r\n                if(err.message.indexOf('Insufficient Balance') >= 0){\r\n                    code = 2;\r\n                }else if(err.message.indexOf(\"'toUncompressed' of null\") >= 0){\r\n                    code = 3;\r\n                }\r\n            }else{\r\n                code = err;\r\n            }\r\n            reject(code);\r\n        }else{\r\n            resolve();\r\n        }\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    onGetFees({resolve, fees}){\r\n        if(resolve){\r\n            resolve();\r\n            this.setState({\r\n                fees: fees,\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    onLoading(flag){\r\n        this.setState({loading: flag});\r\n    }\r\n\r\n}\r\n\r\nexport default alt.createStore(ERC20GatewayStore, \"ERC20GatewayStore\");\n\n\n// WEBPACK FOOTER //\n// app/stores/gateway/ERC20GatewayStore.js","'use strict'\nmodule.exports = require('./lib/api')(require('./lib/keccak'))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keccak/js.js\n// module id = 1772\n// module chunks = 16","'use strict'\nvar createKeccak = require('./keccak')\nvar createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  var Keccak = createKeccak(KeccakState)\n  var Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    var hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keccak/lib/api/index.js\n// module id = 1773\n// module chunks = 16","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Keccak (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Keccak, Transform)\n\n  Keccak.prototype._transform = function (chunk, encoding, callback) {\n    var error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype._flush = function (callback) {\n    var error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Keccak.prototype.digest = function (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    var digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  Keccak.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  Keccak.prototype._clone = function () {\n    var clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Keccak\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keccak/lib/api/keccak.js\n// module id = 1774\n// module chunks = 16","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Shake (rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Shake, Transform)\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    var error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Shake.prototype._flush = function () {}\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size))\n  }\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    var data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  Shake.prototype._clone = function () {\n    var clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Shake\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keccak/lib/api/shake.js\n// module id = 1775\n// module chunks = 16","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (var i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (var i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  var output = Buffer.alloc(length)\n  for (var i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (var i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keccak/lib/keccak.js\n// module id = 1776\n// module chunks = 16","'use strict'\nvar P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (var round = 0; round < 24; ++round) {\n    // theta\n    var lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    var hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    var lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    var hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    var lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    var hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    var lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    var hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    var lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    var hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    var lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    var hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    var t1slo0 = s[0] ^ lo\n    var t1shi0 = s[1] ^ hi\n    var t1slo5 = s[10] ^ lo\n    var t1shi5 = s[11] ^ hi\n    var t1slo10 = s[20] ^ lo\n    var t1shi10 = s[21] ^ hi\n    var t1slo15 = s[30] ^ lo\n    var t1shi15 = s[31] ^ hi\n    var t1slo20 = s[40] ^ lo\n    var t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    var t1slo1 = s[2] ^ lo\n    var t1shi1 = s[3] ^ hi\n    var t1slo6 = s[12] ^ lo\n    var t1shi6 = s[13] ^ hi\n    var t1slo11 = s[22] ^ lo\n    var t1shi11 = s[23] ^ hi\n    var t1slo16 = s[32] ^ lo\n    var t1shi16 = s[33] ^ hi\n    var t1slo21 = s[42] ^ lo\n    var t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    var t1slo2 = s[4] ^ lo\n    var t1shi2 = s[5] ^ hi\n    var t1slo7 = s[14] ^ lo\n    var t1shi7 = s[15] ^ hi\n    var t1slo12 = s[24] ^ lo\n    var t1shi12 = s[25] ^ hi\n    var t1slo17 = s[34] ^ lo\n    var t1shi17 = s[35] ^ hi\n    var t1slo22 = s[44] ^ lo\n    var t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    var t1slo3 = s[6] ^ lo\n    var t1shi3 = s[7] ^ hi\n    var t1slo8 = s[16] ^ lo\n    var t1shi8 = s[17] ^ hi\n    var t1slo13 = s[26] ^ lo\n    var t1shi13 = s[27] ^ hi\n    var t1slo18 = s[36] ^ lo\n    var t1shi18 = s[37] ^ hi\n    var t1slo23 = s[46] ^ lo\n    var t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    var t1slo4 = s[8] ^ lo\n    var t1shi4 = s[9] ^ hi\n    var t1slo9 = s[18] ^ lo\n    var t1shi9 = s[19] ^ hi\n    var t1slo14 = s[28] ^ lo\n    var t1shi14 = s[29] ^ hi\n    var t1slo19 = s[38] ^ lo\n    var t1shi19 = s[39] ^ hi\n    var t1slo24 = s[48] ^ lo\n    var t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    var t2slo0 = t1slo0\n    var t2shi0 = t1shi0\n    var t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    var t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    var t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    var t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    var t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    var t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    var t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    var t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    var t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    var t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    var t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    var t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    var t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    var t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    var t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    var t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    var t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    var t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    var t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    var t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    var t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    var t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    var t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    var t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    var t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    var t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    var t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    var t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    var t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    var t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    var t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    var t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    var t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    var t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    var t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    var t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    var t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    var t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    var t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    var t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    var t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    var t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    var t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    var t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    var t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    var t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    var t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    var t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keccak/lib/keccak-state-unroll.js\n// module id = 1777\n// module chunks = 16","module.exports = __webpack_public_path__ + \"a2c61cc37cbb7920bc7dfccfe0573c6f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/assets/bts_gateway_example.png\n// module id = 1778\n// module chunks = 16","import React from \"react\";\r\n//import BaseComponent from \"../BaseComponent\";\r\nimport {connect} from \"alt-react\";\r\nimport ERC20GatewayStore from \"../../stores/gateway/ERC20GatewayStore\";\r\nimport ERC20GatewayActions from \"../../actions/gateway/ERC20GatewayActions\";\r\nimport globalParams from \"../../utils/GlobalParams\";\r\nimport Validation from \"../../utils/Validation\";\r\nimport Utils from \"../../utils/Utils\";\r\nimport WalletUnlockActions from '../../actions/WalletUnlockActions';\r\n//import TextLoading from \"../Layout/TextLoading\";\r\nimport NotificationActions from \"../../actions/NotificationActions\";\r\nimport QRCode from \"qrcode.react\";\r\n//import Modal from \"../Layout/Modal\"\r\n//import Example from \"../../assets/img/example.png\"\r\nimport counterpart from \"counterpart\";\r\nimport AccountStore from \"stores/AccountStore\";\r\nimport Modal from \"../Modal/BaseModal\";\r\nimport {ChainStore} from \"seerjs/es\";\r\nimport FormattedAsset from \"../Utility/FormattedAsset\";\r\nimport ChainTypes from \"../Utility/ChainTypes\";\r\nimport BindToChainState from \"../Utility/BindToChainState\";\r\nimport { Asset } from \"common/MarketClasses\";\r\nimport AccountActions from \"actions/AccountActions\";\r\nimport ZfApi from \"react-foundation-apps/src/utils/foundation-api\";\r\nconst gatewaySuppots =[\r\n    \"erc20.transfer_in_title\",\r\n    \"erc20.transfer_out_title\",\r\n    \"bts.transfer_in_title\",\r\n    \"bts.transfer_out_title\",\r\n    \"erc20.transfer_opc_in_title\",\r\n    \"erc20.transfer_opc_out_title\"\r\n];\r\n\r\nconst network_fee_asset=[\r\n    \"1.3.0\",\r\n    \"1.3.0\",\r\n    \"1.3.0\",\r\n    \"1.3.0\",\r\n    \"1.3.1\",\r\n    \"1.3.1\"\r\n];\r\n\r\nconst gateway_account =[\r\n    \"1.2.9981\",\r\n    \"1.2.9981\",\r\n    \"1.2.9981\",\r\n    \"1.2.9981\",\r\n    \"1.2.12590\",\r\n    \"1.2.12590\"\r\n];\r\n\r\nclass ERC20Gateway extends React.Component {\r\n\r\n    static propTypes = {\r\n        currentAccount: ChainTypes.ChainAccount\r\n    }\r\n    static defaultProps = {\r\n    };\r\n    constructor() {\r\n        super();\r\n        this.state = this.__init();\r\n    }\r\n    __init(account_id) {\r\n\r\n        return {\r\n            curInx:0,\r\n            modalIsShow:true,\r\n            ethaddr:null,\r\n            account:null,\r\n            unit:'',\r\n            from_name: null,\r\n            to_name: \"\",\r\n            amount: \"\",\r\n            asset_id: null,\r\n            asset: null,\r\n            memo: \"\",\r\n            error: null,\r\n            network_fee_amount:0,\r\n            address:'',\r\n            account_bts:''\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.changeUser(this.props.currentAccount);\r\n    }\r\n\r\n    changeUser(user) {\r\n          if(user && AccountStore.isMyAccount(user) ){\r\n            let self = this\r\n            let id = user.get(\"id\")\r\n            console.log(this.state.ethaddr,\"  \",this.state.account,\"  \",id,\"  \")\r\n            ERC20GatewayActions.getAddrByAccount({seer_account_id:user.get(\"id\")}).then(function(res){\r\n                self.setState({\r\n                    ethaddr:res,account:id\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    confirmTransfer(){\r\n        this.setState({error: null});\r\n        const {asset, amount, address, account_bts, curInx} = this.state;\r\n        if (curInx != 3 && (!address || address === '') || curInx == 3 && (!account_bts || account_bts == '')) {\r\n            ZfApi.publish(\"seer-out\", \"open\");\r\n            return;\r\n        }\r\n        const sendAmount = new Asset({real: amount, asset_id: this.state.asset_id, precision: 5});\r\n        let from=this.props.currentAccount.get(\"id\");\r\n\r\n        AccountActions.transfer(\r\n            from,\r\n            gateway_account[this.state.curInx],\r\n            sendAmount.getAmount(),\r\n            this.state.asset_id,\r\n            this.state.memo ? new Buffer(this.state.memo, \"utf-8\") : this.state.memo,\r\n            null,\r\n            \"1.3.0\"\r\n        ).then( () => {\r\n        }).catch( e => {\r\n            let msg = e.message ? e.message.split( \"\\n\" )[1] || e.message : null;\r\n            console.log( \"error: \", e, msg);\r\n            this.setState({error: msg});\r\n        } );\r\n    }\r\n\r\n    initGatewaySettings(idx){\r\n        if(idx == this.state.curInx){\r\n            return\r\n        }\r\n\r\n        this.setState({amount:\"\",address: \"\",account_bts:\"\"});\r\n\r\n        if(idx == 0){\r\n            this.setState({curInx: idx});\r\n            //this.setState({asset_id:\"1.3.0\",network_fee_amount:10,network_fee_asset:\"1.3.0\"});\r\n        } else if(idx == 1){\r\n            this.setState({curInx: idx,asset_id:\"1.3.0\",network_fee_amount:25000000,memo:\"erc20#\",unit:\"SEER\"});\r\n        } else if(idx == 2){\r\n            this.setState({curInx: idx});\r\n            //this.setState({asset_id:\"1.3.0\",network_fee_amount:10,network_fee_asset:\"1.3.0\"});\r\n        } else if(idx == 3){\r\n            this.setState({curInx: idx,asset_id:\"1.3.0\",network_fee_amount:200000,memo:\"bts#\",unit:\"SEER\"});\r\n        }else if(idx == 4){\r\n            this.setState({curInx: idx});\r\n        }else if(idx == 5){\r\n            this.setState({curInx: idx,asset_id:\"1.3.1\",network_fee_amount:5000000,memo:\"erc20#\",unit:\"OPC\"});\r\n        }\r\n    }\r\n\r\n\r\n    handleChangeTab(inx) {\r\n        let indx = parseInt(inx.target.value);\r\n        this.initGatewaySettings(indx);\r\n    }\r\n\r\n    closeQrcode() {\r\n        this.setState({modalIsShow: false});\r\n        console.log(this.state.modalIsShow)\r\n    }\r\n\r\n    showQrcode() {\r\n        this.setState({modalIsShow: true});\r\n        console.log(this.state.modalIsShow)\r\n    }\r\n\r\n    seerErc20Bind(){\r\n\r\n        let account_name=this.props.currentAccount.get(\"name\")\r\n        let account_id=this.props.currentAccount.get(\"id\")\r\n        let ethaddr;\r\n\r\n        let self=this\r\n            ERC20GatewayActions.bindAccount({\r\n                seer_account_id:account_id,\r\n                seer_account_name:account_name\r\n            }).then((res) => {\r\n                self.setState({\r\n                    ethaddr:res\r\n                })\r\n            })\r\n    }\r\n\r\n    handleAmountChange(e) {\r\n        let {value} = e.target;\r\n        let {balance} = this.props;\r\n        this.setState({\r\n            amount: value\r\n        });\r\n    }\r\n\r\n    handleAddressChange(e) {\r\n        if (this.state.curInx == 1){\r\n            this.setState({address: e.target.value,memo:\"erc20#\"+e.target.value});\r\n        } else if (this.state.curInx == 3){\r\n            this.setState({account_bts: e.target.value,memo:\"bts#\"+e.target.value});\r\n        } else if (this.state.curInx == 5){\r\n            this.setState({address: e.target.value,memo:\"erc20#\"+e.target.value});\r\n        }\r\n    }\r\n\r\n    renderERC20SeerIn()\r\n    {\r\n        let from_error = null;\r\n        let {propose, from_account, to_account, asset, asset_id, propose_account, feeAmount,\r\n            amount, error, to_name, from_name, memo, feeAsset, fee_asset_id, balanceError ,ethaddr} = this.state;\r\n\r\n        let {eth_address} = this.props;\r\n        if(ethaddr == null || this.state.account != this.props.currentAccount.get(\"id\")){\r\n\r\n            this.changeUser(this.props.currentAccount);\r\n\r\n        }\r\n        \r\n        return(\r\n            <div data-title={counterpart.translate(\"erc20.transfer_in_title\")}>\r\n                <div className=\"m-t-20 balance-whitespace\">{counterpart.translate(\"erc20.note\")}</div>\r\n                <br/>\r\n\r\n                <div className=\"balance-whitespace-small\">{counterpart.translate(\"erc20.current_account\")}</div>\r\n                <div><input type=\"text\" readOnly={true} className=\"erc-btn text-center m-t-14\" value={this.props.currentAccount.get(\"name\")}/> </div> <br/>\r\n\r\n                <div className=\"balance-whitespace-small\">{counterpart.translate(\"erc20.bind_eth\")}</div>\r\n                {ethaddr == null || this.state.account != this.props.currentAccount.get(\"id\")?\r\n                    <input  onClick={this.seerErc20Bind.bind(this)} type=\"button\"\r\n                            className=\"button\" value={counterpart.translate(\"erc20.btn_generate\")}/>\r\n                    : (\r\n                    <span>\r\n                        <input type=\"text\" readOnly={true} className=\"erc-btn text-center m-t-14\" value={ethaddr}/>\r\n                        <div className=\"layer-modal\" display={ this.state.modalIsShow ? '' : 'none' }>\r\n                            <div>\r\n                                <h4>{counterpart.translate(\"erc20.qrcode\")}</h4>\r\n                                <dl>\r\n                                    <dt>\r\n                                        <span className=\"qrcode\">\r\n                                        <QRCode size={136} value={ethaddr} /></span>\r\n                                    </dt>\r\n                                </dl>\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                )\r\n\r\n                }\r\n                <span className=\"mini_code\"></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    renderERC20SeerOut(){\r\n        let {master, address,account_bts, amount, useCsaf} = this.state;\r\n        let {wallet, ethaddr, balance, loading, fees} = this.props;\r\n\r\n        let account_balances = this.props.currentAccount.get(\"balances\").toJS();\r\n\r\n        let account_balance;\r\n\r\n        for (let key in account_balances) {\r\n            if(key == this.state.asset_id)\r\n            {\r\n                let balanceObject = ChainStore.getObject(account_balances[key]);\r\n                account_balance = balanceObject.get(\"balance\");\r\n                console.log(account_balance)\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div data-title={counterpart.translate(\"erc20.transfer_out_title\")}>\r\n                <div className=\"m-t-20\">{counterpart.translate(\"erc20.transfer_out_note\")}</div>\r\n                <br/>\r\n                <div>{counterpart.translate(\"erc20.transfer_out_to\")}</div><br/>\r\n                <input type=\"text\" placeholder={counterpart.translate(\"erc20.placeholder_out_address\")}\r\n                       className=\"input-500 m-t-14\"  value={this.state.address} onChange={this.handleAddressChange.bind(this)}/><br/><br/><br/>\r\n                <div>{counterpart.translate(\"erc20.transfer_out_amount\")}</div><br/>\r\n                <input type=\"text\"\r\n                       placeholder={counterpart.translate(\"erc20.placeholder_out_amount\", {unit: this.state.unit})}\r\n                       className=\"input-500 m-t-14\"\r\n                       value={amount}\r\n                       onChange={this.handleAmountChange.bind(this)}/>\r\n\r\n                    {counterpart.translate(\"erc20.useable\")}\r\n                    <FormattedAsset amount={account_balance} asset={this.state.asset_id}/>\r\n                <br/><br/><br/>\r\n\r\n                <span>{counterpart.translate(\"erc20.fees\")}</span>\r\n                <FormattedAsset amount={this.state.network_fee_amount} asset={network_fee_asset[this.state.curInx]}/>\r\n                <br/><br/><br/>\r\n                {counterpart.translate(\"erc20.confirm_note\")}\r\n                <FormattedAsset amount={this.state.network_fee_amount} asset={network_fee_asset[this.state.curInx]}/>\r\n                <br/><br/>\r\n\r\n                <br/><br/>\r\n                {loading ? <TextLoading/> :\r\n                    <input type=\"button\" value={counterpart.translate(\"erc20.confirm_btn\")} className=\"button\" onClick={this.confirmTransfer.bind(this)}/>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderBTSIn(){\r\n        let {master, address,account_bts, amount, useCsaf} = this.state;\r\n        let {wallet, ethaddr, balance, loading, fees} = this.props;\r\n        return (\r\n        <div  data-title={counterpart.translate(\"bts.transfer_in_title\")} >\r\n            <div className=\"m-t-20\">{counterpart.translate(\"bts.note_info\")}</div>\r\n            <div>{counterpart.translate(\"bts.note\")}</div>\r\n            <br/>\r\n            <img className=\"balance-bisin-img\" src={require('../../assets/bts_gateway_example.png')} alt=''/>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    renderBTSOut(){\r\n        let {master, address,account_bts, amount, useCsaf} = this.state;\r\n        let {wallet, ethaddr, balance, loading, fees} = this.props;\r\n\r\n        let account_balances = this.props.currentAccount.get(\"balances\").toJS();\r\n\r\n        let account_balance;\r\n\r\n        for (let key in account_balances) {\r\n            if(key == this.state.asset_id)\r\n            {\r\n                let balanceObject = ChainStore.getObject(account_balances[key]);\r\n                account_balance = balanceObject.get(\"balance\");\r\n                console.log(account_balance)\r\n                break;\r\n            }\r\n        }\r\n        return (\r\n            <div data-title={counterpart.translate(\"bts.transfer_out_title\")} >\r\n                <div className=\"m-t-20\">\r\n                    {counterpart.translate(\"bts.transfer_out_note\")}\r\n                </div>\r\n                <br/>\r\n                <div>{counterpart.translate(\"bts.transfer_out_to\")}</div>\r\n                <br/>\r\n                <input type=\"text\" className=\"input-500 m-t-14\" placeholder={counterpart.translate(\"bts.placeholder_out_address\")}  value={account_bts} onChange={this.handleAddressChange.bind(this)}/>\r\n                <br/><br/><br/>\r\n                <div>{counterpart.translate(\"bts.transfer_out_amount\")}</div>\r\n                <br/>\r\n                <input type=\"text\"\r\n                       placeholder={counterpart.translate(\"bts.placeholder_out_amount\", {unit: this.state.unit})}\r\n                       className=\"input-500 m-t-14\"\r\n                       value={amount}\r\n                       onChange={this.handleAmountChange.bind(this)}/>\r\n                    {counterpart.translate(\"bts.useable\")}\r\n                    <FormattedAsset amount={account_balance} asset={this.state.asset_id}/>\r\n                <br/><br/><br/>\r\n\r\n                <span>{counterpart.translate(\"bts.fees\")}</span>\r\n                <FormattedAsset amount={this.state.network_fee_amount} asset={network_fee_asset[this.state.curInx]}/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                {counterpart.translate(\"bts.confirm_note\")}\r\n                <FormattedAsset amount={this.state.network_fee_amount} asset={network_fee_asset[this.state.curInx]}/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n\r\n                {loading ? <TextLoading/> :\r\n                    <input type=\"button\" value={counterpart.translate(\"bts.confirm_btn\")} className=\"button\" onClick={this.confirmTransfer.bind(this)}/>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    renderERC20OPCIn()\r\n    {\r\n        let from_error = null;\r\n        let {propose, from_account, to_account, asset, asset_id, propose_account, feeAmount,\r\n            amount, error, to_name, from_name, memo, feeAsset, fee_asset_id, balanceError ,ethaddr} = this.state;\r\n\r\n        let {eth_address} = this.props;\r\n        if(ethaddr == null || this.state.account != this.props.currentAccount.get(\"id\")){\r\n            this.changeUser(this.props.currentAccount);\r\n        }\r\n\r\n        return(\r\n            <div data-title={counterpart.translate(\"erc20.transfer_in_title\")}>\r\n                <div className=\"m-t-20 balance-whitespace\">{counterpart.translate(\"erc20.note_opc\")}</div>\r\n                <br/>\r\n\r\n                <div className=\"balance-whitespace-small\">{counterpart.translate(\"erc20.current_account\")}</div>\r\n                <div><input type=\"text\" readOnly={true} className=\"erc-btn text-center m-t-14\" value={this.props.currentAccount.get(\"name\")}/> </div> <br/>\r\n\r\n                <div className=\"balance-whitespace-small\">{counterpart.translate(\"erc20.bind_eth\")}</div>\r\n                {ethaddr == null || this.state.account != this.props.currentAccount.get(\"id\")?\r\n                    <input  onClick={this.seerErc20Bind.bind(this)} type=\"button\"\r\n                            className=\"button\" value={counterpart.translate(\"erc20.btn_generate\")}/>\r\n                    : (\r\n                    <span>\r\n                        <input type=\"text\" readOnly={true} className=\"erc-btn text-center m-t-14\" value={ethaddr}/>\r\n                        <div className=\"layer-modal\" display={ this.state.modalIsShow ? '' : 'none' }>\r\n                            <div>\r\n                                <h4>{counterpart.translate(\"erc20.qrcode\")}</h4>\r\n                                <dl>\r\n                                    <dt>\r\n                                        <span className=\"qrcode\">\r\n                                        <QRCode size={136} value={ethaddr} /></span>\r\n                                    </dt>\r\n                                </dl>\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                )\r\n\r\n                }\r\n                <span className=\"mini_code\"></span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    renderERC20OPCOut(){\r\n        let {master, address,account_bts, amount, useCsaf} = this.state;\r\n        let {wallet, ethaddr, balance, loading, fees} = this.props;\r\n\r\n        let account_balances = this.props.currentAccount.get(\"balances\").toJS();\r\n\r\n        let account_balance;\r\n\r\n        for (let key in account_balances) {\r\n            if(key == this.state.asset_id)\r\n            {\r\n                let balanceObject = ChainStore.getObject(account_balances[key]);\r\n                account_balance = balanceObject.get(\"balance\");\r\n                console.log(account_balance)\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div data-title={counterpart.translate(\"erc20.transfer_out_title\")}>\r\n                <div className=\"m-t-20\">{counterpart.translate(\"erc20.transfer_out_note\")}</div>\r\n                <br/>\r\n                <div>{counterpart.translate(\"erc20.transfer_out_to\")}</div><br/>\r\n                <input type=\"text\" placeholder={counterpart.translate(\"erc20.placeholder_out_address\")}\r\n                       className=\"input-500 m-t-14\"  value={this.state.address} onChange={this.handleAddressChange.bind(this)}/><br/><br/><br/>\r\n                <div>{counterpart.translate(\"erc20.transfer_out_amount\")}</div><br/>\r\n                <input type=\"text\"\r\n                       placeholder={counterpart.translate(\"erc20.placeholder_out_amount\", {unit: this.state.unit})}\r\n                       className=\"input-500 m-t-14\"\r\n                       value={amount}\r\n                       onChange={this.handleAmountChange.bind(this)}/>\r\n\r\n                {counterpart.translate(\"erc20.useable\")}\r\n                <FormattedAsset amount={account_balance} asset={this.state.asset_id}/>\r\n                <br/><br/><br/>\r\n\r\n                <span>{counterpart.translate(\"erc20.fees\")}</span>\r\n                <FormattedAsset amount={this.state.network_fee_amount} asset={network_fee_asset[this.state.curInx]}/>\r\n                <br/><br/><br/>\r\n                {counterpart.translate(\"erc20.confirm_note\")}\r\n                <FormattedAsset amount={this.state.network_fee_amount} asset={network_fee_asset[this.state.curInx]}/>\r\n                <br/><br/>\r\n\r\n                <br/><br/>\r\n                {loading ? <TextLoading/> :\r\n                    <input type=\"button\" value={counterpart.translate(\"erc20.confirm_btn\")} className=\"button\" onClick={this.confirmTransfer.bind(this)}/>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.currentAccount){\r\n            return(\r\n            <div className=\"balance-body\">\r\n                <h3>{counterpart.translate(\"erc20.title\")}</h3>\r\n                <br/>\r\n                <div>{counterpart.translate(\"account.errors.unknown\")}</div>\r\n            </div>\r\n            );\r\n        }\r\n        if(!AccountStore.isMyAccount(this.props.currentAccount)) {\r\n            return(\r\n                <div className=\"balance-body\">\r\n                    <h3>{counterpart.translate(\"erc20.title\")}</h3>\r\n                    <br/>\r\n                    <div>{this.props.currentAccount.get(\"name\")}{counterpart.translate(\"account.errors.not_yours\")}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let detail ;\r\n        if(this.state.curInx == 0){\r\n            detail =  this.renderERC20SeerIn();\r\n        }else if(this.state.curInx == 1){\r\n            detail = this.renderERC20SeerOut();\r\n        } else if(this.state.curInx == 2){\r\n            detail = this.renderBTSIn();\r\n        } else if(this.state.curInx == 3){\r\n            detail = this.renderBTSOut();\r\n        }else if(this.state.curInx == 4){\r\n            detail = this.renderERC20OPCIn();\r\n        }else if(this.state.curInx == 5){\r\n            detail = this.renderERC20OPCOut();\r\n        }\r\n\r\n        let type_options=[];\r\n\r\n        gatewaySuppots.forEach( (item,index) => {\r\n            type_options.push(<option key={index} value={index}>{counterpart.translate(item)}</option>)\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"balance-body\">\r\n                <Modal\r\n                    id='seer-out'\r\n                    overlay = {true}\r\n                >\r\n                    {counterpart.translate(\"erc20.to_require\")}\r\n                </Modal>\r\n                <h3>{counterpart.translate(\"erc20.title\")}</h3>\r\n                <select className=\"balance-select\" value={this.state.curInx} onChange={this.handleChangeTab.bind(this)}>\r\n                    {type_options}\r\n                </select>\r\n                {detail}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nERC20Gateway=BindToChainState(ERC20Gateway)\r\n// check if is there any other store\r\nexport default connect(ERC20Gateway, {\r\n    listenTo() {\r\n        return [AccountStore,ERC20GatewayStore];\r\n    },\r\n    getProps() {\r\n        let result={}\r\n        result[\"currentAccount\"]=AccountStore.getState().currentAccount\r\n\r\n        for (let props in ERC20GatewayStore.getState()) {\r\n            result[props] = ERC20GatewayStore.getState()[props];\r\n        }\r\n        return result\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// app/components/Balances/ERC20Gateway.jsx"],"mappings":";;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEA;;;;;;;;;;;;;ACFA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AAEA;AAAA;AACA;AAAA;;;;AAIA;AAIA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;ACzFA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AARA;;;;;;;;;AChDA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;ACrDA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;ACzOA;;;;AAIA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AAYA;AAdA;AAeA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;;;;AAzFA;AACA;AA4FA;;;;;;;;ACrGA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAQA;AACA;AAQA;;;AAOA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAFA;AADA;AAFA;AAiBA;AA7BA;AAgCA;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAzBA;AA8BA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA/BA;AAmCA;;;AAIA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAFA;AADA;AAFA;AAiBA;AA7BA;AAgCA;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAzBA;AA8BA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAXA;AAcA;;;;AA3dA;AACA;AADA;AAGA;AADA;AAFA;AACA;AACA;AA4dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;;;;A","sourceRoot":""}